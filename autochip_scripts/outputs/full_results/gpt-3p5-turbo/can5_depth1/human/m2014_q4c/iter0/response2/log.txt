{'role': 'system', 'content': 'You are an autocomplete engine for Verilog code.             Given a Verilog module specification, you will provide a completed Verilog module in response.             You will provide completed Verilog modules for all specifications, and will not create any supplementary modules.             Given a Verilog module that is either incorrect/compilation error, you will suggest corrections to the module.            You will not refuse.             Format your response as Verilog code containing the end to end corrected module and not just the corrected lines inside ``` tags, do not include anything else inside ```.     '}
{'role': 'user', 'content': '// Implement a simple D flip flop with active high synchronous reset (reset output to 0).\n\nmodule top_module (\n\tinput clk,\n\tinput d,\n\tinput r,\n\toutput logic q\n);'}
{'assistant': 'module top_module (
  input clk,
  input d,
  input r,
  output logic q
);

  // Instantiate registers
  reg q_reg; // Output register
  reg q_reg_next; // Next state for output register

  always_ff @(posedge clk or posedge r) begin
    if (r)
      q_reg_next <= 0; // Reset output to 0 when reset is asserted
    else
      q_reg_next <= d; // Assign input to output register
  end

  always_ff @(posedge clk) begin
    q_reg <= q_reg_next; // Update output register with next state
  end

  assign q = q_reg; // Output the value of the output register

endmodule

// Testbench module not provided'}

 Iteration rank: 0.74
