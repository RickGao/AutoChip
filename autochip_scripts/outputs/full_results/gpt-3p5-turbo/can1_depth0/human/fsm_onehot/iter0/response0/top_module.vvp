#! /usr/local/bin/vvp
:ivl_version "13.0 (devel)" "(s20221226-331-g77d7f0b8f)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision - 12;
:vpi_module "/usr/local/lib/ivl/system.vpi";
:vpi_module "/usr/local/lib/ivl/vhdl_sys.vpi";
:vpi_module "/usr/local/lib/ivl/vhdl_textio.vpi";
:vpi_module "/usr/local/lib/ivl/v2005_math.vpi";
:vpi_module "/usr/local/lib/ivl/va_math.vpi";
:vpi_module "/usr/local/lib/ivl/v2009.vpi";
S_0x1e52230 .scope package, "$unit" "$unit" 2 1;
 .timescale 0 0;
S_0x1e64ed0 .scope module, "tb" "tb" 3 122;
 .timescale -12 -12;
L_0x1e526c0 .functor NOT 1, L_0x1ec7f70, C4<0>, C4<0>, C4<0>;
L_0x1ec7810 .functor XOR 12, L_0x1ec7d20, L_0x1ec7dc0, C4<000000000000>, C4<000000000000>;
L_0x1ec7f00 .functor XOR 12, L_0x1ec7810, L_0x1ec7e60, C4<000000000000>, C4<000000000000>;
v0x1ec1b80_0 .net *"_ivl_10", 11 0, L_0x1ec7e60;  1 drivers
v0x1ec1c80_0 .net *"_ivl_12", 11 0, L_0x1ec7f00;  1 drivers
v0x1ec1d60_0 .net *"_ivl_2", 11 0, L_0x1ec7c80;  1 drivers
v0x1ec1e20_0 .net *"_ivl_4", 11 0, L_0x1ec7d20;  1 drivers
v0x1ec1f00_0 .net *"_ivl_6", 11 0, L_0x1ec7dc0;  1 drivers
v0x1ec2030_0 .net *"_ivl_8", 11 0, L_0x1ec7810;  1 drivers
v0x1ec2110_0 .var "clk", 0 0;
v0x1ec21b0_0 .net "in", 0 0, v0x1ebf0d0_0;  1 drivers
v0x1ec2250_0 .net "next_state_dut", 9 0, L_0x1ec72b0;  1 drivers
v0x1ec22f0_0 .net "next_state_ref", 9 0, L_0x1ec52a0;  1 drivers
v0x1ec2400_0 .net "out1_dut", 0 0, L_0x1ec7920;  1 drivers
v0x1ec24a0_0 .net "out1_ref", 0 0, L_0x1e55510;  1 drivers
v0x1ec2540_0 .net "out2_dut", 0 0, L_0x1ec7b10;  1 drivers
v0x1ec25e0_0 .net "out2_ref", 0 0, L_0x1e563b0;  1 drivers
v0x1ec26b0_0 .net "state", 9 0, v0x1ebf400_0;  1 drivers
v0x1ec2750_0 .var/2u "stats1", 287 0;
v0x1ec27f0_0 .var/2u "strobe", 0 0;
v0x1ec29a0_0 .net "tb_match", 0 0, L_0x1ec7f70;  1 drivers
v0x1ec2a70_0 .net "tb_mismatch", 0 0, L_0x1e526c0;  1 drivers
v0x1ec2b10_0 .net "wavedrom_enable", 0 0, v0x1ebf640_0;  1 drivers
v0x1ec2be0_0 .net "wavedrom_title", 511 0, v0x1ebf700_0;  1 drivers
L_0x1ec7c80 .concat [ 1 1 10 0], L_0x1e563b0, L_0x1e55510, L_0x1ec52a0;
L_0x1ec7d20 .concat [ 1 1 10 0], L_0x1e563b0, L_0x1e55510, L_0x1ec52a0;
L_0x1ec7dc0 .concat [ 1 1 10 0], L_0x1ec7b10, L_0x1ec7920, L_0x1ec72b0;
L_0x1ec7e60 .concat [ 1 1 10 0], L_0x1e563b0, L_0x1e55510, L_0x1ec52a0;
L_0x1ec7f70 .cmp/eeq 12, L_0x1ec7c80, L_0x1ec7f00;
S_0x1e65060 .scope module, "good1" "reference_module" 3 171, 3 4 0, S_0x1e64ed0;
 .timescale -12 -12;
    .port_info 0 /INPUT 1 "in";
    .port_info 1 /INPUT 10 "state";
    .port_info 2 /OUTPUT 10 "next_state";
    .port_info 3 /OUTPUT 1 "out1";
    .port_info 4 /OUTPUT 1 "out2";
L_0x1e55510 .functor OR 1, L_0x1ec2d30, L_0x1ec2dd0, C4<0>, C4<0>;
L_0x1e563b0 .functor OR 1, L_0x1ec2f60, L_0x1ec3000, C4<0>, C4<0>;
L_0x1e56b00 .functor OR 1, L_0x1ec34e0, L_0x1ec3580, C4<0>, C4<0>;
L_0x1e53510 .functor OR 1, L_0x1e56b00, L_0x1ec3710, C4<0>, C4<0>;
L_0x1e72a90 .functor OR 1, L_0x1e53510, L_0x1ec3880, C4<0>, C4<0>;
L_0x1e95900 .functor AND 1, L_0x1ec31c0, L_0x1e72a90, C4<1>, C4<1>;
L_0x1ec3c60 .functor OR 1, L_0x1ec3ab0, L_0x1ec3b50, C4<0>, C4<0>;
L_0x1ec3e10 .functor OR 1, L_0x1ec3c60, L_0x1ec3d70, C4<0>, C4<0>;
L_0x1ec3f70 .functor AND 1, v0x1ebf0d0_0, L_0x1ec3e10, C4<1>, C4<1>;
L_0x1ec3bf0 .functor AND 1, v0x1ebf0d0_0, L_0x1ec4030, C4<1>, C4<1>;
L_0x1ec44b0 .functor AND 1, v0x1ebf0d0_0, L_0x1ec4200, C4<1>, C4<1>;
L_0x1ec4650 .functor AND 1, v0x1ebf0d0_0, L_0x1ec4520, C4<1>, C4<1>;
L_0x1ec4820 .functor AND 1, v0x1ebf0d0_0, L_0x1ec4780, C4<1>, C4<1>;
L_0x1ec4a50 .functor AND 1, v0x1ebf0d0_0, L_0x1ec4910, C4<1>, C4<1>;
L_0x1ec4710 .functor OR 1, L_0x1ec4bc0, L_0x1ec4c60, C4<0>, C4<0>;
L_0x1ec4eb0 .functor AND 1, v0x1ebf0d0_0, L_0x1ec4710, C4<1>, C4<1>;
L_0x1ec5160 .functor AND 1, L_0x1ec49b0, L_0x1ec5000, C4<1>, C4<1>;
L_0x1ec5820 .functor AND 1, L_0x1ec5610, L_0x1ec5780, C4<1>, C4<1>;
v0x1e556c0_0 .net *"_ivl_1", 0 0, L_0x1ec2d30;  1 drivers
v0x1e564c0_0 .net *"_ivl_100", 0 0, L_0x1ec5610;  1 drivers
v0x1e56560_0 .net *"_ivl_102", 0 0, L_0x1ec5780;  1 drivers
v0x1e56d70_0 .net *"_ivl_104", 0 0, L_0x1ec5820;  1 drivers
v0x1e56e10_0 .net *"_ivl_15", 0 0, L_0x1ec31c0;  1 drivers
v0x1e53660_0 .net *"_ivl_17", 4 0, L_0x1ec32f0;  1 drivers
v0x1e53700_0 .net *"_ivl_19", 0 0, L_0x1ec34e0;  1 drivers
v0x1ebbbd0_0 .net *"_ivl_21", 0 0, L_0x1ec3580;  1 drivers
v0x1ebbcb0_0 .net *"_ivl_22", 0 0, L_0x1e56b00;  1 drivers
v0x1ebbd90_0 .net *"_ivl_25", 0 0, L_0x1ec3710;  1 drivers
v0x1ebbe70_0 .net *"_ivl_26", 0 0, L_0x1e53510;  1 drivers
v0x1ebbf50_0 .net *"_ivl_29", 0 0, L_0x1ec3880;  1 drivers
v0x1ebc030_0 .net *"_ivl_3", 0 0, L_0x1ec2dd0;  1 drivers
v0x1ebc110_0 .net *"_ivl_30", 0 0, L_0x1e72a90;  1 drivers
v0x1ebc1f0_0 .net *"_ivl_33", 0 0, L_0x1e95900;  1 drivers
v0x1ebc2b0_0 .net *"_ivl_37", 0 0, L_0x1ec3ab0;  1 drivers
v0x1ebc390_0 .net *"_ivl_39", 0 0, L_0x1ec3b50;  1 drivers
v0x1ebc470_0 .net *"_ivl_40", 0 0, L_0x1ec3c60;  1 drivers
v0x1ebc550_0 .net *"_ivl_43", 0 0, L_0x1ec3d70;  1 drivers
v0x1ebc630_0 .net *"_ivl_44", 0 0, L_0x1ec3e10;  1 drivers
v0x1ebc710_0 .net *"_ivl_47", 0 0, L_0x1ec3f70;  1 drivers
v0x1ebc7d0_0 .net *"_ivl_51", 0 0, L_0x1ec4030;  1 drivers
v0x1ebc8b0_0 .net *"_ivl_53", 0 0, L_0x1ec3bf0;  1 drivers
v0x1ebc970_0 .net *"_ivl_57", 0 0, L_0x1ec4200;  1 drivers
v0x1ebca50_0 .net *"_ivl_59", 0 0, L_0x1ec44b0;  1 drivers
v0x1ebcb10_0 .net *"_ivl_63", 0 0, L_0x1ec4520;  1 drivers
v0x1ebcbf0_0 .net *"_ivl_65", 0 0, L_0x1ec4650;  1 drivers
v0x1ebccb0_0 .net *"_ivl_69", 0 0, L_0x1ec4780;  1 drivers
v0x1ebcd90_0 .net *"_ivl_7", 0 0, L_0x1ec2f60;  1 drivers
v0x1ebce70_0 .net *"_ivl_71", 0 0, L_0x1ec4820;  1 drivers
v0x1ebcf30_0 .net *"_ivl_75", 0 0, L_0x1ec4910;  1 drivers
v0x1ebd010_0 .net *"_ivl_77", 0 0, L_0x1ec4a50;  1 drivers
v0x1ebd0d0_0 .net *"_ivl_81", 0 0, L_0x1ec4bc0;  1 drivers
v0x1ebd3c0_0 .net *"_ivl_83", 0 0, L_0x1ec4c60;  1 drivers
v0x1ebd4a0_0 .net *"_ivl_84", 0 0, L_0x1ec4710;  1 drivers
v0x1ebd580_0 .net *"_ivl_87", 0 0, L_0x1ec4eb0;  1 drivers
v0x1ebd640_0 .net *"_ivl_9", 0 0, L_0x1ec3000;  1 drivers
v0x1ebd720_0 .net *"_ivl_91", 0 0, L_0x1ec49b0;  1 drivers
v0x1ebd7e0_0 .net *"_ivl_93", 0 0, L_0x1ec5000;  1 drivers
v0x1ebd8c0_0 .net *"_ivl_95", 0 0, L_0x1ec5160;  1 drivers
v0x1ebd980_0 .net "in", 0 0, v0x1ebf0d0_0;  alias, 1 drivers
v0x1ebda40_0 .net "next_state", 9 0, L_0x1ec52a0;  alias, 1 drivers
v0x1ebdb20_0 .net "out1", 0 0, L_0x1e55510;  alias, 1 drivers
v0x1ebdbe0_0 .net "out2", 0 0, L_0x1e563b0;  alias, 1 drivers
v0x1ebdca0_0 .net "state", 9 0, v0x1ebf400_0;  alias, 1 drivers
L_0x1ec2d30 .part v0x1ebf400_0, 8, 1;
L_0x1ec2dd0 .part v0x1ebf400_0, 9, 1;
L_0x1ec2f60 .part v0x1ebf400_0, 7, 1;
L_0x1ec3000 .part v0x1ebf400_0, 9, 1;
L_0x1ec31c0 .reduce/nor v0x1ebf0d0_0;
L_0x1ec32f0 .part v0x1ebf400_0, 0, 5;
L_0x1ec34e0 .reduce/or L_0x1ec32f0;
L_0x1ec3580 .part v0x1ebf400_0, 7, 1;
L_0x1ec3710 .part v0x1ebf400_0, 8, 1;
L_0x1ec3880 .part v0x1ebf400_0, 9, 1;
L_0x1ec3ab0 .part v0x1ebf400_0, 0, 1;
L_0x1ec3b50 .part v0x1ebf400_0, 8, 1;
L_0x1ec3d70 .part v0x1ebf400_0, 9, 1;
L_0x1ec4030 .part v0x1ebf400_0, 1, 1;
L_0x1ec4200 .part v0x1ebf400_0, 2, 1;
L_0x1ec4520 .part v0x1ebf400_0, 3, 1;
L_0x1ec4780 .part v0x1ebf400_0, 4, 1;
L_0x1ec4910 .part v0x1ebf400_0, 5, 1;
L_0x1ec4bc0 .part v0x1ebf400_0, 6, 1;
L_0x1ec4c60 .part v0x1ebf400_0, 7, 1;
L_0x1ec49b0 .reduce/nor v0x1ebf0d0_0;
L_0x1ec5000 .part v0x1ebf400_0, 5, 1;
LS_0x1ec52a0_0_0 .concat8 [ 1 1 1 1], L_0x1e95900, L_0x1ec3f70, L_0x1ec3bf0, L_0x1ec44b0;
LS_0x1ec52a0_0_4 .concat8 [ 1 1 1 1], L_0x1ec4650, L_0x1ec4820, L_0x1ec4a50, L_0x1ec4eb0;
LS_0x1ec52a0_0_8 .concat8 [ 1 1 0 0], L_0x1ec5160, L_0x1ec5820;
L_0x1ec52a0 .concat8 [ 4 4 2 0], LS_0x1ec52a0_0_0, LS_0x1ec52a0_0_4, LS_0x1ec52a0_0_8;
L_0x1ec5610 .reduce/nor v0x1ebf0d0_0;
L_0x1ec5780 .part v0x1ebf400_0, 6, 1;
S_0x1ebde20 .scope module, "stim1" "stimulus_gen" 3 166, 3 29 0, S_0x1e64ed0;
 .timescale -12 -12;
    .port_info 0 /INPUT 1 "clk";
    .port_info 1 /OUTPUT 1 "in";
    .port_info 2 /OUTPUT 10 "state";
    .port_info 3 /INPUT 1 "tb_match";
    .port_info 4 /INPUT 10 "next_state_ref";
    .port_info 5 /INPUT 10 "next_state_dut";
    .port_info 6 /OUTPUT 512 "wavedrom_title";
    .port_info 7 /OUTPUT 1 "wavedrom_enable";
v0x1ebee50_0 .net "clk", 0 0, v0x1ec2110_0;  1 drivers
v0x1ebef30_0 .var/2s "errored1", 31 0;
v0x1ebf010_0 .var/2s "errored2", 31 0;
v0x1ebf0d0_0 .var "in", 0 0;
v0x1ebf170_0 .net "next_state_dut", 9 0, L_0x1ec72b0;  alias, 1 drivers
v0x1ebf280_0 .net "next_state_ref", 9 0, L_0x1ec52a0;  alias, 1 drivers
v0x1ebf340_0 .var/2s "onehot_error", 31 0;
v0x1ebf400_0 .var "state", 9 0;
v0x1ebf4c0_0 .var "state_error", 9 0;
v0x1ebf580_0 .net "tb_match", 0 0, L_0x1ec7f70;  alias, 1 drivers
v0x1ebf640_0 .var "wavedrom_enable", 0 0;
v0x1ebf700_0 .var "wavedrom_title", 511 0;
E_0x1e60950 .event negedge, v0x1ebee50_0;
E_0x1e60ba0 .event posedge, v0x1ebee50_0;
S_0x1ebe060 .scope begin, "$ivl_for_loop0" "$ivl_for_loop0" 3 69, 3 69 0, S_0x1ebde20;
 .timescale -12 -12;
v0x1ebe2a0_0 .var/2s "i", 31 0;
E_0x1e60220/0 .event negedge, v0x1ebee50_0;
E_0x1e60220/1 .event posedge, v0x1ebee50_0;
E_0x1e60220 .event/or E_0x1e60220/0, E_0x1e60220/1;
S_0x1ebe3a0 .scope begin, "$ivl_for_loop1" "$ivl_for_loop1" 3 74, 3 74 0, S_0x1ebde20;
 .timescale -12 -12;
v0x1ebe5a0_0 .var/2s "i", 31 0;
S_0x1ebe680 .scope begin, "$ivl_for_loop2" "$ivl_for_loop2" 3 114, 3 114 0, S_0x1ebde20;
 .timescale -12 -12;
v0x1ebe860_0 .var/2s "i", 31 0;
S_0x1ebe940 .scope task, "wavedrom_start" "wavedrom_start" 3 45, 3 45 0, S_0x1ebde20;
 .timescale -12 -12;
v0x1ebeb20_0 .var "title", 511 0;
TD_tb.stim1.wavedrom_start ;
    %end;
S_0x1ebec20 .scope task, "wavedrom_stop" "wavedrom_stop" 3 48, 3 48 0, S_0x1ebde20;
 .timescale -12 -12;
TD_tb.stim1.wavedrom_stop ;
    %delay 1, 0;
    %end;
S_0x1ebf8e0 .scope module, "top_module1" "top_module" 3 178, 4 1 0, S_0x1e64ed0;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "in";
    .port_info 1 /INPUT 10 "state";
    .port_info 2 /OUTPUT 10 "next_state";
    .port_info 3 /OUTPUT 1 "out1";
    .port_info 4 /OUTPUT 1 "out2";
L_0x1ec5ac0 .functor NOT 1, v0x1ebf0d0_0, C4<0>, C4<0>, C4<0>;
L_0x1ec5b30 .functor AND 1, L_0x1ec5a20, L_0x1ec5ac0, C4<1>, C4<1>;
L_0x1ec5ce0 .functor AND 1, L_0x1ec5c40, v0x1ebf0d0_0, C4<1>, C4<1>;
L_0x1ec5e40 .functor NOT 1, v0x1ebf0d0_0, C4<0>, C4<0>, C4<0>;
L_0x1ec60c0 .functor AND 1, L_0x1ec5da0, L_0x1ec5e40, C4<1>, C4<1>;
L_0x1ec62a0 .functor AND 1, L_0x1ec61d0, v0x1ebf0d0_0, C4<1>, C4<1>;
L_0x1ec6440 .functor NOT 1, v0x1ebf0d0_0, C4<0>, C4<0>, C4<0>;
L_0x1ec64b0 .functor AND 1, L_0x1ec63a0, L_0x1ec6440, C4<1>, C4<1>;
L_0x1ec66f0 .functor AND 1, L_0x1ec6610, v0x1ebf0d0_0, C4<1>, C4<1>;
L_0x1ec6850 .functor NOT 1, v0x1ebf0d0_0, C4<0>, C4<0>, C4<0>;
L_0x1ec6920 .functor AND 1, L_0x1ec67b0, L_0x1ec6850, C4<1>, C4<1>;
L_0x1ec6ad0 .functor AND 1, L_0x1ec69e0, v0x1ebf0d0_0, C4<1>, C4<1>;
L_0x1ec70b0 .functor NOT 1, v0x1ebf0d0_0, C4<0>, C4<0>, C4<0>;
L_0x1ec7120 .functor AND 1, L_0x1ec6c00, L_0x1ec70b0, C4<1>, C4<1>;
L_0x1ec6b90 .functor AND 1, L_0x1ec7680, v0x1ebf0d0_0, C4<1>, C4<1>;
L_0x1ec7920 .functor OR 1, L_0x1ec7770, L_0x1ec7880, C4<0>, C4<0>;
v0x1ebfb50_0 .net *"_ivl_11", 0 0, L_0x1ec5c40;  1 drivers
v0x1ebfc30_0 .net *"_ivl_12", 0 0, L_0x1ec5ce0;  1 drivers
v0x1ebfd10_0 .net *"_ivl_17", 0 0, L_0x1ec5da0;  1 drivers
v0x1ebfe00_0 .net *"_ivl_18", 0 0, L_0x1ec5e40;  1 drivers
v0x1ebfee0_0 .net *"_ivl_20", 0 0, L_0x1ec60c0;  1 drivers
v0x1ec0010_0 .net *"_ivl_25", 0 0, L_0x1ec61d0;  1 drivers
v0x1ec00f0_0 .net *"_ivl_26", 0 0, L_0x1ec62a0;  1 drivers
v0x1ec01d0_0 .net *"_ivl_3", 0 0, L_0x1ec5a20;  1 drivers
v0x1ec02b0_0 .net *"_ivl_31", 0 0, L_0x1ec63a0;  1 drivers
v0x1ec0420_0 .net *"_ivl_32", 0 0, L_0x1ec6440;  1 drivers
v0x1ec0500_0 .net *"_ivl_34", 0 0, L_0x1ec64b0;  1 drivers
v0x1ec05e0_0 .net *"_ivl_39", 0 0, L_0x1ec6610;  1 drivers
v0x1ec06c0_0 .net *"_ivl_4", 0 0, L_0x1ec5ac0;  1 drivers
v0x1ec07a0_0 .net *"_ivl_40", 0 0, L_0x1ec66f0;  1 drivers
v0x1ec0880_0 .net *"_ivl_45", 0 0, L_0x1ec67b0;  1 drivers
v0x1ec0960_0 .net *"_ivl_46", 0 0, L_0x1ec6850;  1 drivers
v0x1ec0a40_0 .net *"_ivl_48", 0 0, L_0x1ec6920;  1 drivers
v0x1ec0c30_0 .net *"_ivl_53", 0 0, L_0x1ec69e0;  1 drivers
v0x1ec0d10_0 .net *"_ivl_54", 0 0, L_0x1ec6ad0;  1 drivers
v0x1ec0df0_0 .net *"_ivl_59", 0 0, L_0x1ec6c00;  1 drivers
v0x1ec0ed0_0 .net *"_ivl_6", 0 0, L_0x1ec5b30;  1 drivers
v0x1ec0fb0_0 .net *"_ivl_60", 0 0, L_0x1ec70b0;  1 drivers
v0x1ec1090_0 .net *"_ivl_62", 0 0, L_0x1ec7120;  1 drivers
v0x1ec1170_0 .net *"_ivl_68", 0 0, L_0x1ec7680;  1 drivers
v0x1ec1250_0 .net *"_ivl_69", 0 0, L_0x1ec6b90;  1 drivers
v0x1ec1330_0 .net *"_ivl_72", 0 0, L_0x1ec7770;  1 drivers
v0x1ec1410_0 .net *"_ivl_74", 0 0, L_0x1ec7880;  1 drivers
v0x1ec14f0_0 .net "in", 0 0, v0x1ebf0d0_0;  alias, 1 drivers
v0x1ec1590_0 .net "next_state", 9 0, L_0x1ec72b0;  alias, 1 drivers
v0x1ec1650_0 .net "out1", 0 0, L_0x1ec7920;  alias, 1 drivers
v0x1ec16f0_0 .net "out2", 0 0, L_0x1ec7b10;  alias, 1 drivers
v0x1ec17b0_0 .net "state", 9 0, v0x1ebf400_0;  alias, 1 drivers
L_0x1ec5a20 .part v0x1ebf400_0, 0, 1;
L_0x1ec5c40 .part v0x1ebf400_0, 0, 1;
L_0x1ec5da0 .part v0x1ebf400_0, 1, 1;
L_0x1ec61d0 .part v0x1ebf400_0, 1, 1;
L_0x1ec63a0 .part v0x1ebf400_0, 2, 1;
L_0x1ec6610 .part v0x1ebf400_0, 2, 1;
L_0x1ec67b0 .part v0x1ebf400_0, 3, 1;
L_0x1ec69e0 .part v0x1ebf400_0, 3, 1;
L_0x1ec6c00 .part v0x1ebf400_0, 4, 1;
LS_0x1ec72b0_0_0 .concat8 [ 1 1 1 1], L_0x1ec5b30, L_0x1ec5ce0, L_0x1ec60c0, L_0x1ec62a0;
LS_0x1ec72b0_0_4 .concat8 [ 1 1 1 1], L_0x1ec64b0, L_0x1ec66f0, L_0x1ec6920, L_0x1ec6ad0;
LS_0x1ec72b0_0_8 .concat8 [ 1 1 0 0], L_0x1ec7120, L_0x1ec6b90;
L_0x1ec72b0 .concat8 [ 4 4 2 0], LS_0x1ec72b0_0_0, LS_0x1ec72b0_0_4, LS_0x1ec72b0_0_8;
L_0x1ec7680 .part v0x1ebf400_0, 4, 1;
L_0x1ec7770 .part v0x1ebf400_0, 7, 1;
L_0x1ec7880 .part v0x1ebf400_0, 8, 1;
L_0x1ec7b10 .part v0x1ebf400_0, 9, 1;
S_0x1ec1960 .scope task, "wait_for_end_of_timestep" "wait_for_end_of_timestep" 3 187, 3 187 0, S_0x1e64ed0;
 .timescale -12 -12;
E_0x1e48a20 .event anyedge, v0x1ec27f0_0;
TD_tb.wait_for_end_of_timestep ;
    %pushi/vec4 5, 0, 32;
T_2.0 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_2.1, 5;
    %jmp/1 T_2.1, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %load/vec4 v0x1ec27f0_0;
    %nor/r;
    %assign/vec4 v0x1ec27f0_0, 0;
    %wait E_0x1e48a20;
    %jmp T_2.0;
T_2.1 ;
    %pop/vec4 1;
    %end;
    .scope S_0x1ebde20;
T_3 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x1ebef30_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x1ebf010_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x1ebf340_0, 0, 32;
    %pushi/vec4 0, 0, 10;
    %store/vec4 v0x1ebf4c0_0, 0, 10;
    %end;
    .thread T_3, $init;
    .scope S_0x1ebde20;
T_4 ;
    %pushi/vec4 2, 0, 32;
T_4.0 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_4.1, 5;
    %jmp/1 T_4.1, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_0x1e60ba0;
    %jmp T_4.0;
T_4.1 ;
    %pop/vec4 1;
T_4.2 ;
    %wait E_0x1e60220;
    %load/vec4 v0x1ebf4c0_0;
    %load/vec4 v0x1ebf280_0;
    %load/vec4 v0x1ebf170_0;
    %xor;
    %or;
    %assign/vec4 v0x1ebf4c0_0, 0;
    %jmp T_4.2;
T_4.3 ;
    %end;
    .thread T_4;
    .scope S_0x1ebde20;
T_5 ;
    %pushi/vec4 0, 0, 10;
    %assign/vec4 v0x1ebf400_0, 0;
    %wait E_0x1e60950;
    %fork t_1, S_0x1ebe060;
    %jmp t_0;
    .scope S_0x1ebe060;
t_1 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x1ebe2a0_0, 0, 32;
T_5.0 ; Top of for-loop 
    %load/vec4 v0x1ebe2a0_0;
    %cmpi/s 10, 0, 32;
    %jmp/0xz T_5.1, 5;
    %wait E_0x1e60220;
    %pushi/vec4 1, 0, 10;
    %load/vec4 v0x1ebe2a0_0;
    %ix/vec4 4;
    %shiftl 4;
    %assign/vec4 v0x1ebf400_0, 0;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0x1ebf0d0_0, 0;
T_5.2 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x1ebe2a0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x1ebe2a0_0, 0, 32;
    %jmp T_5.0;
T_5.1 ; for-loop exit label
    %end;
    .scope S_0x1ebde20;
t_0 %join;
    %fork t_3, S_0x1ebe3a0;
    %jmp t_2;
    .scope S_0x1ebe3a0;
t_3 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x1ebe5a0_0, 0, 32;
T_5.3 ; Top of for-loop 
    %load/vec4 v0x1ebe5a0_0;
    %cmpi/s 10, 0, 32;
    %jmp/0xz T_5.4, 5;
    %wait E_0x1e60220;
    %pushi/vec4 1, 0, 10;
    %load/vec4 v0x1ebe5a0_0;
    %ix/vec4 4;
    %shiftl 4;
    %assign/vec4 v0x1ebf400_0, 0;
    %pushi/vec4 1, 0, 1;
    %assign/vec4 v0x1ebf0d0_0, 0;
T_5.5 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x1ebe5a0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x1ebe5a0_0, 0, 32;
    %jmp T_5.3;
T_5.4 ; for-loop exit label
    %end;
    .scope S_0x1ebde20;
t_2 %join;
    %wait E_0x1e60950;
    %fork TD_tb.stim1.wavedrom_stop, S_0x1ebec20;
    %join;
    %pushi/vec4 200, 0, 32;
T_5.6 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_5.7, 5;
    %jmp/1 T_5.7, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_0x1e60220;
    %pushi/vec4 1, 0, 10;
    %vpi_func 3 83 "$random" 32 {0 0 0};
    %pushi/vec4 10, 0, 32;
    %mod;
    %ix/vec4 4;
    %shiftl 4;
    %assign/vec4 v0x1ebf400_0, 0;
    %vpi_func 3 84 "$random" 32 {0 0 0};
    %pad/s 1;
    %assign/vec4 v0x1ebf0d0_0, 0;
    %load/vec4 v0x1ebf580_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.8, 8;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x1ebf340_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x1ebf340_0, 0, 32;
T_5.8 ;
    %jmp T_5.6;
T_5.7 ;
    %pop/vec4 1;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x1ebef30_0, 0, 32;
    %pushi/vec4 400, 0, 32;
T_5.10 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_5.11, 5;
    %jmp/1 T_5.11, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_0x1e60220;
    %pushi/vec4 1, 0, 10;
    %vpi_func 3 91 "$random" 32 {0 0 0};
    %pushi/vec4 10, 0, 32;
    %mod;
    %ix/vec4 4;
    %shiftl 4;
    %pushi/vec4 1, 0, 10;
    %vpi_func 3 91 "$random" 32 {0 0 0};
    %pushi/vec4 10, 0, 32;
    %mod;
    %ix/vec4 4;
    %shiftl 4;
    %or;
    %assign/vec4 v0x1ebf400_0, 0;
    %vpi_func 3 92 "$random" 32 {0 0 0};
    %pad/s 1;
    %assign/vec4 v0x1ebf0d0_0, 0;
    %load/vec4 v0x1ebf580_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.12, 8;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x1ebef30_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x1ebef30_0, 0, 32;
T_5.12 ;
    %jmp T_5.10;
T_5.11 ;
    %pop/vec4 1;
    %load/vec4 v0x1ebf340_0;
    %nor/r;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_5.16, 9;
    %load/vec4 v0x1ebef30_0;
    %pushi/vec4 0, 0, 32;
    %cmp/ne;
    %flag_get/vec4 4;
    %and;
T_5.16;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.14, 8;
    %vpi_call/w 3 98 "$display", "Hint: Your circuit passed when given only one-hot inputs, but not with two-hot inputs." {0 0 0};
T_5.14 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x1ebf010_0, 0, 32;
    %pushi/vec4 800, 0, 32;
T_5.17 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_5.18, 5;
    %jmp/1 T_5.18, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_0x1e60220;
    %vpi_func 3 103 "$random" 32 {0 0 0};
    %pad/s 10;
    %assign/vec4 v0x1ebf400_0, 0;
    %vpi_func 3 104 "$random" 32 {0 0 0};
    %pad/s 1;
    %assign/vec4 v0x1ebf0d0_0, 0;
    %load/vec4 v0x1ebf580_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.19, 8;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x1ebf010_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x1ebf010_0, 0, 32;
T_5.19 ;
    %jmp T_5.17;
T_5.18 ;
    %pop/vec4 1;
    %load/vec4 v0x1ebf340_0;
    %nor/r;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_5.23, 9;
    %load/vec4 v0x1ebf010_0;
    %pushi/vec4 0, 0, 32;
    %cmp/ne;
    %flag_get/vec4 4;
    %and;
T_5.23;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.21, 8;
    %vpi_call/w 3 109 "$display", "Hint: Your circuit passed when given only one-hot inputs, but not with random inputs." {0 0 0};
T_5.21 ;
    %load/vec4 v0x1ebf340_0;
    %nor/r;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_5.26, 9;
    %load/vec4 v0x1ebef30_0;
    %cmpi/ne 0, 0, 32;
    %flag_get/vec4 4;
    %jmp/1 T_5.27, 4;
    %load/vec4 v0x1ebf010_0;
    %pushi/vec4 0, 0, 32;
    %cmp/ne;
    %flag_get/vec4 4;
    %or;
T_5.27;
    %and;
T_5.26;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.24, 8;
    %vpi_call/w 3 112 "$display", "Hint: Are you doing something more complicated than deriving state transition equations by inspection?\012" {0 0 0};
T_5.24 ;
    %fork t_5, S_0x1ebe680;
    %jmp t_4;
    .scope S_0x1ebe680;
t_5 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x1ebe860_0, 0, 32;
T_5.28 ; Top of for-loop 
    %load/vec4 v0x1ebe860_0;
    %cmpi/u 10, 0, 32;
    %jmp/0xz T_5.29, 5;
    %load/vec4 v0x1ebf4c0_0;
    %load/vec4 v0x1ebe860_0;
    %part/s 1;
    %cmpi/e 0, 0, 1;
    %flag_mov 8, 6;
    %jmp/0 T_5.31, 8;
    %pushi/vec4 25455, 0, 32; draw_string_vec4
    %pushi/vec4 1920099683, 0, 32; draw_string_vec4
    %concat/vec4; draw_string_vec4
    %pushi/vec4 116, 0, 8; draw_string_vec4
    %concat/vec4; draw_string_vec4
    %jmp/1 T_5.32, 8;
T_5.31 ; End of true expr.
    %pushi/vec4 1768842095, 0, 32; draw_string_vec4
    %pushi/vec4 1920099683, 0, 32; draw_string_vec4
    %concat/vec4; draw_string_vec4
    %pushi/vec4 116, 0, 8; draw_string_vec4
    %concat/vec4; draw_string_vec4
    %jmp/0 T_5.32, 8;
 ; End of false expr.
    %blend;
T_5.32;
    %vpi_call/w 3 115 "$display", "Hint: next_state[%0d] is %s.", v0x1ebe860_0, S<0,vec4,u72> {1 0 0};
T_5.30 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x1ebe860_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x1ebe860_0, 0, 32;
    %jmp T_5.28;
T_5.29 ; for-loop exit label
    %end;
    .scope S_0x1ebde20;
t_4 %join;
    %delay 1, 0;
    %vpi_call/w 3 117 "$finish" {0 0 0};
    %end;
    .thread T_5;
    .scope S_0x1e64ed0;
T_6 ;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x1ec2110_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x1ec27f0_0, 0, 1;
    %end;
    .thread T_6, $init;
    .scope S_0x1e64ed0;
T_7 ;
T_7.0 ;
    %delay 5, 0;
    %load/vec4 v0x1ec2110_0;
    %inv;
    %store/vec4 v0x1ec2110_0, 0, 1;
    %jmp T_7.0;
T_7.1 ;
    %end;
    .thread T_7;
    .scope S_0x1e64ed0;
T_8 ;
    %vpi_call/w 3 158 "$dumpfile", "wave.vcd" {0 0 0};
    %vpi_call/w 3 159 "$dumpvars", 32'sb00000000000000000000000000000001, v0x1ebee50_0, v0x1ec2a70_0, v0x1ec21b0_0, v0x1ec26b0_0, v0x1ec22f0_0, v0x1ec2250_0, v0x1ec24a0_0, v0x1ec2400_0, v0x1ec25e0_0, v0x1ec2540_0 {0 0 0};
    %end;
    .thread T_8;
    .scope S_0x1e64ed0;
T_9 ;
    %load/vec4 v0x1ec2750_0;
    %parti/u 32, 192, 32;
    %cmpi/ne 0, 0, 32;
    %jmp/0xz  T_9.0, 4;
    %load/vec4 v0x1ec2750_0;
    %parti/u 32, 192, 32;
    %load/vec4 v0x1ec2750_0;
    %parti/u 32, 160, 32;
    %vpi_call/w 3 196 "$display", "Hint: Output '%s' has %0d mismatches. First mismatch occurred at time %0d.", "next_state", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %jmp T_9.1;
T_9.0 ;
    %vpi_call/w 3 197 "$display", "Hint: Output '%s' has no mismatches.", "next_state" {0 0 0};
T_9.1 ;
    %load/vec4 v0x1ec2750_0;
    %parti/u 32, 128, 32;
    %cmpi/ne 0, 0, 32;
    %jmp/0xz  T_9.2, 4;
    %load/vec4 v0x1ec2750_0;
    %parti/u 32, 128, 32;
    %load/vec4 v0x1ec2750_0;
    %parti/u 32, 96, 32;
    %vpi_call/w 3 198 "$display", "Hint: Output '%s' has %0d mismatches. First mismatch occurred at time %0d.", "out1", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %jmp T_9.3;
T_9.2 ;
    %vpi_call/w 3 199 "$display", "Hint: Output '%s' has no mismatches.", "out1" {0 0 0};
T_9.3 ;
    %load/vec4 v0x1ec2750_0;
    %parti/u 32, 64, 32;
    %cmpi/ne 0, 0, 32;
    %jmp/0xz  T_9.4, 4;
    %load/vec4 v0x1ec2750_0;
    %parti/u 32, 64, 32;
    %load/vec4 v0x1ec2750_0;
    %parti/u 32, 32, 32;
    %vpi_call/w 3 200 "$display", "Hint: Output '%s' has %0d mismatches. First mismatch occurred at time %0d.", "out2", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %jmp T_9.5;
T_9.4 ;
    %vpi_call/w 3 201 "$display", "Hint: Output '%s' has no mismatches.", "out2" {0 0 0};
T_9.5 ;
    %load/vec4 v0x1ec2750_0;
    %parti/u 32, 256, 32;
    %load/vec4 v0x1ec2750_0;
    %parti/u 32, 0, 32;
    %vpi_call/w 3 203 "$display", "Hint: Total mismatched samples is %1d out of %1d samples\012", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %vpi_call/w 3 204 "$display", "Simulation finished at %0d ps", $time {0 0 0};
    %load/vec4 v0x1ec2750_0;
    %parti/u 32, 256, 32;
    %load/vec4 v0x1ec2750_0;
    %parti/u 32, 0, 32;
    %vpi_call/w 3 205 "$display", "Mismatches: %1d in %1d samples", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %end;
    .thread T_9, $final;
    .scope S_0x1e64ed0;
T_10 ;
    %wait E_0x1e60220;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x1ec2750_0;
    %pushi/vec4 0, 0, 32;
    %part/u 32;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x1ec2750_0, 4, 32;
    %load/vec4 v0x1ec29a0_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_10.0, 8;
    %load/vec4 v0x1ec2750_0;
    %parti/u 32, 256, 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_10.2, 4;
    %vpi_func 3 216 "$time" 64 {0 0 0};
    %cast2;
    %pad/u 32;
    %ix/load 4, 224, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x1ec2750_0, 4, 32;
T_10.2 ;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x1ec2750_0;
    %pushi/vec4 256, 0, 32;
    %part/u 32;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %ix/load 4, 256, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x1ec2750_0, 4, 32;
T_10.0 ;
    %load/vec4 v0x1ec22f0_0;
    %load/vec4 v0x1ec22f0_0;
    %load/vec4 v0x1ec2250_0;
    %xor;
    %load/vec4 v0x1ec22f0_0;
    %xor;
    %cmp/ne;
    %jmp/0xz  T_10.4, 6;
    %load/vec4 v0x1ec2750_0;
    %parti/u 32, 192, 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_10.6, 4;
    %vpi_func 3 220 "$time" 64 {0 0 0};
    %cast2;
    %pad/u 32;
    %ix/load 4, 160, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x1ec2750_0, 4, 32;
T_10.6 ;
    %load/vec4 v0x1ec2750_0;
    %parti/u 32, 192, 32;
    %addi 1, 0, 32;
    %ix/load 4, 192, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x1ec2750_0, 4, 32;
T_10.4 ;
    %load/vec4 v0x1ec24a0_0;
    %load/vec4 v0x1ec24a0_0;
    %load/vec4 v0x1ec2400_0;
    %xor;
    %load/vec4 v0x1ec24a0_0;
    %xor;
    %cmp/ne;
    %jmp/0xz  T_10.8, 6;
    %load/vec4 v0x1ec2750_0;
    %parti/u 32, 128, 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_10.10, 4;
    %vpi_func 3 223 "$time" 64 {0 0 0};
    %cast2;
    %pad/u 32;
    %ix/load 4, 96, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x1ec2750_0, 4, 32;
T_10.10 ;
    %load/vec4 v0x1ec2750_0;
    %parti/u 32, 128, 32;
    %addi 1, 0, 32;
    %ix/load 4, 128, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x1ec2750_0, 4, 32;
T_10.8 ;
    %load/vec4 v0x1ec25e0_0;
    %load/vec4 v0x1ec25e0_0;
    %load/vec4 v0x1ec2540_0;
    %xor;
    %load/vec4 v0x1ec25e0_0;
    %xor;
    %cmp/ne;
    %jmp/0xz  T_10.12, 6;
    %load/vec4 v0x1ec2750_0;
    %parti/u 32, 64, 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_10.14, 4;
    %vpi_func 3 226 "$time" 64 {0 0 0};
    %cast2;
    %pad/u 32;
    %ix/load 4, 32, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x1ec2750_0, 4, 32;
T_10.14 ;
    %load/vec4 v0x1ec2750_0;
    %parti/u 32, 64, 32;
    %addi 1, 0, 32;
    %ix/load 4, 64, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x1ec2750_0, 4, 32;
T_10.12 ;
    %jmp T_10;
    .thread T_10;
# The file index is used to find the file name in the following table.
:file_names 5;
    "N/A";
    "<interactive>";
    "-";
    "/home/jmb9986/AutoChip/autochip_scripts/../verilogeval_prompts_tbs/ve_testbenches_human/fsm_onehot/fsm_onehot_tb.sv";
    "/home/jmb9986/AutoChip/autochip_scripts/outputs/gpt3.5_turbo_16k_zeroshot/human/fsm_onehot/iter0/response0/top_module.sv";
