module top_module (
  input [255:0] in,
  input [7:0] sel,
  output out
);

reg [7:0] data;

always @(*) begin
   case(sel)
      8'b00000000: data = in[0];
      8'b00000001: data = in[1];
      8'b00000010: data = in[2];
      8'b00000011: data = in[3];
      8'b00000100: data = in[4];
      8'b00000101: data = in[5];
      8'b00000110: data = in[6];
      8'b00000111: data = in[7];
      8'b00001000: data = in[8];
      8'b00001001: data = in[9];
      8'b00001010: data = in[10];
      8'b00001011: data = in[11];
      8'b00001100: data = in[12];
      8'b00001101: data = in[13];
      8'b00001110: data = in[14];
      8'b00001111: data = in[15];
      8'b00010000: data = in[16];
      8'b00010001: data = in[17];
      8'b00010010: data = in[18];
      8'b00010011: data = in[19];
      8'b00010100: data = in[20];
      8'b00010101: data = in[21];
      8'b00010110: data = in[22];
      8'b00010111: data = in[23];
      8'b00011000: data = in[24];
      8'b00011001: data = in[25];
      8'b00011010: data = in[26];
      8'b00011011: data = in[27];
      8'b00011100: data = in[28];
      8'b00011101: data = in[29];
      8'b00011110: data = in[30];
      8'b00011111: data = in[31];
      8'b00100000: data = in[32];
      8'b00100001: data = in[33];
      8'b00100010: data = in[34];
      8'b00100011: data = in[35];
      8'b00100100: data = in[36];
      8'b00100101: data = in[37];
      8'b00100110: data = in[38];
      8'b00100111: data = in[39];
      8'b00101000: data = in[40];
      8'b00101001: data = in[41];
      8'b00101010: data = in[42];
      8'b00101011: data = in[43];
      8'b00101100: data = in[44];
      8'b00101101: data = in[45];
      8'b00101110: data = in[46];
      8'b00101111: data = in[47];
      8'b00110000: data = in[48];
      8'b00110001: data = in[49];
      8'b00110010: data = in[50];
      8'b00110011: data = in[51];
      8'b00110100: data = in[52];
      8'b00110101: data = in[53];
      8'b00110110: data = in[54];
      8'b00110111: data = in[55];
      8'b00111000: data = in[56];
      8'b00111001: data = in[57];
      8'b00111010: data = in[58];
      8'b00111011: data = in[59];
      8'b00111100: data = in[60];
      8'b00111101: data = in[61];
      8'b00111110: data = in[62];
      8'b00111111: data = in[63];
      8'b01000000: data = in[64];
      8'b01000001: data = in[65];
      8'b01000010: data = in[66];
      8'b01000011: data = in[67];
      8'b01000100: data = in[68];
      8'b01000101: data = in[69];
      8'b01000110: data = in[70];
      8'b01000111: data = in[71];
      8'b01001000: data = in[72];
      8'b01001001: data = in[73];
      8'b01001010: data = in[74];
      8'b01001011: data = in[75];
      8'b01001100: data = in[76];
      8'b01001101: data = in[77];
      8'b01001110: data = in[78];
      8'b01001111: data = in[79];
      8'b01010000: data = in[80];
      8'b01010001: data = in[81];
      8'b01010010: data = in[82];
      8'b01010011: data = in[83];
      8'b01010100: data = in[84];
      8'b01010101: data = in[85];
      8'b01010110: data = in[86];
      8'b01010111: data = in[87];
      8'b01011000: data = in[88];
      8'b01011001: data = in[89];
      8'b01011010: data = in[90];
      8'b01011011: data = in[91];
      8'b01011100: data = in[92];
      8'b01011101: data = in[93];
      8'b01011110: data = in[94];
      8'b01011111: data = in[95];
      8'b01100000: data = in[96];
      8'b01100001: data = in[97];
      8'b01100010: data = in[98];
      8'b01100011: data = in[99];
      8'b01100100: data = in[100];
      8'b01100101: data = in[101];
      8'b01100110: data = in[102];
      8'b01100111: data = in[103];
      8'b01101000: data = in[104];
      8'b01101001: data = in[105];
      8'b01101010: data = in[106];
      8'b01101011: data = in[107];
      8'b01101100: data = in[108];
      8'b01101101: data = in[109];
      8'b01101110: data = in[110];
      8'b01101111: data = in[111];
      8'b01110000: data = in[112];
      8'b01110001: data = in[113];
      8'b01110010: data = in[114];
      8'b01110011: data = in[115];
      8'b01110100: data = in[116];
      8'b01110101: data = in[117];
      8'b01110110: data = in[118];
      8'b01110111: data = in[119];
      8'b01111000: data = in[120];
      8'b01111001: data = in[121];
      8'b01111010: data = in[122];
      8'b01111011: data = in[123];
      8'b01111100: data = in[124];
      8'b01111101: data = in[125];
      8'b01111110: data = in[126];
      8'b01111111: data = in[127];
      8'b10000000: data = in[128];
      8'b10000001: data = in[129];
      8'b10000010: data = in[130];
      8'b10000011: data = in[131];
      8'b10000100: data = in[132];
      8'b10000101: data = in[133];
      8'b10000110: data = in[134];
      8'b10000111: data = in[135];
      8'b10001000: data = in[136];
      8'b10001001: data = in[137];
      8'b10001010: data = in[138];
      8'b10001011: data = in[139];
      8'b10001100: data = in[140];
      8'b10001101: data = in[141];
      8'b10001110: data = in[142];
      8'b10001111: data = in[143];
      8'b10010000: data = in[144];
      8'b10010001: data = in[145];
      8'b10010010: data = in[146];
      8'b10010011: data = in[147];
      8'b10010100: data = in[148];
      8'b10010101: data = in[149];
      8'b10010110: data = in[150];
      8'b10010111: data = in[151];
      8'b10011000: data = in[152];
      8'b10011001: data = in[153];
      8'b10011010: data = in[154];
      8'b10011011: data = in[155];
      8'b10011100: data = in[156];
      8'b10011101: data = in[157];
      8'b10011110: data = in[158];
      8'b10011111: data = in[159];
      8'b10100000: data = in[160];
      8'b10100001: data = in[161];
      8'b10100010: data = in[162];
      8'b10100011: data = in[163];
      8'b10100100: data = in[164];
      8'b10100101: data = in[165];
      8'b10100110: data = in[166];
      8'b10100111: data = in[167];
      8'b10101000: data = in[168];
      8'b10101001: data = in[169];
      8'b10101010: data = in[170];
      8'b10101011: data = in[171];
      8'b10101100: data = in[172];
      8'b10101101: data = in[173];
      8'b10101110: data = in[174];
      8'b10101111: data = in[175];
      8'b10110000: data = in[176];
      8'b10110001: data = in[177];
      8'b10110010: data = in[178];
      8'b10110011: data = in[179];
      8'b10110100: data = in[180];
      8'b10110101: data = in[181];
      8'b10110110: data = in[182];
      8'b10110111: data = in[183];
      8'b10111000: data = in[184];
      8'b10111001: data = in[185];
      8'b10111010: data = in[186];
      8'b10111011: data = in[187];
      8'b10111100: data = in[188];
      8'b10111101: data = in[189];
      8'b10111110: data = in[190];
      8'b10111111: data = in[191];
      8'b11000000: data = in[192];
      8'b11000001: data = in[193];
      8'b11000010: data = in[194];
      8'b11000011: data = in[195];
      8'b11000100: data = in[196];
      8'b11000101: data = in[197];
      8'b11000110: data = in[198];
      8'b11000111: data = in[199];
      8'b11001000: data = in[200];
      8'b11001001: data = in[201];
      8'b11001010: data = in[202];
      8'b11001011: data = in[203];
      8'b11001100: data = in[204];
      8'b11001101: data = in[205];
      8'b11001110: data = in[206];
      8'b11001111: data = in[207];
      8'b11010000: data = in[208];
      8'b11010001: data = in[209];
      8'b11010010: data = in[210];
      8'b11010011: data = in[211];
      8'b11010100: data = in[212];
      8'b11010101: data = in[213];
      8'b11010110: data = in[214];
      8'b11010111: data = in[215];
      8'b11011000: data = in[216];
      8'b11011001: data = in[217];
      8'b11011010: data = in[218];
      8'b11011011: data = in[219];
      8'b11011100: data = in[220];
      8'b11011101: data = in[221];
      8'b11011110: data = in[222];
      8'b11011111: data = in[223];
      8'b11100000: data = in[224];
      8'b11100001: data = in[225];
      8'b11100010: data = in[226];
      8'b11100011: data = in[227];
      8'b11100100: data = in[228];
      8'b11100101: data = in[229];
      8'b11100110: data = in[230];
      8'b11100111: data = in[231];
      8'b11101000: data = in[232];
      8'b11101001: data = in[233];
      8'b11101010: data = in[234];
      8'b11101011: data = in[235];
      8'b11101100: data = in[236];
      8'b11101101: data = in[237];
      8'b11101110: data = in[238];
      8'b11101111: data = in[239];
      8'b11110000: data = in[240];
      8'b11110001: data = in[241];
      8'b11110010: data = in[242];
      8'b11110011: data = in[243];
      8'b11110100: data = in[244];
      8'b11110101: data = in[245];
      8'b11110110: data = in[246];
      8'b11110111: data = in[247];
      8'b11111000: data = in[248];
      8'b11111001: data = in[249];
      8'b11111010: data = in[250];
      8'b11111011: data = in[251];
      8'b11111100: data = in[252];
      8'b11111101: data = in[253];
      8'b11111110: data = in[254];
      8'b11111111: data = in[255];
      default: data = 8'b0;
   endcase
end

assign out = data;

endmodule
