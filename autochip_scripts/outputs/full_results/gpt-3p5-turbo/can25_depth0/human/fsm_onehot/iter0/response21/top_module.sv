module top_module (
  input in,
  input [9:0] state,
  output [9:0] next_state,
  output out1,
  output out2);

  // State transition logic
  always @*
  begin
    case (state)
      // S0
      10'b1_000_000_000: next_state = 10'b1_000_000_000;
      10'b1_000_000_001: next_state = 10'b0_000_000_000;
      // S1
      10'b0_000_000_000: next_state = in ? 10'b0_000_000_000 : 10'b1_000_000_001;
      10'b1_000_000_001: next_state = in ? 10'b0_000_000_001 : 10'b0_000_000_010;
      // S2
      10'b0_000_000_010: next_state = in ? 10'b0_000_000_000 : 10'b1_000_000_011;
      10'b1_000_000_011: next_state = in ? 10'b0_000_000_011 : 10'b0_000_000_100;
      // S3
      10'b0_000_000_100: next_state = in ? 10'b0_000_000_000 : 10'b1_000_000_101;
      10'b1_000_000_101: next_state = in ? 10'b0_000_000_101 : 10'b0_000_000_110;
      // S4
      10'b0_000_000_110: next_state = in ? 10'b0_000_000_000 : 10'b1_000_000_111;
      10'b1_000_000_111: next_state = in ? 10'b0_000_000_111 : 10'b0_000_001_000;
      // S5
      10'b0_000_001_000: next_state = in ? 10'b0_000_010_000 : 10'b1_000_001_001;
      10'b1_000_001_001: next_state = in ? 10'b0_000_010_001 : 10'b0_000_001_100;
      // S6
      10'b0_000_001_100: next_state = in ? 10'b0_000_000_000 : 10'b1_000_010_001;
      10'b1_000_010_001: next_state = in ? 10'b0_000_000_001 : 10'b0_000_001_010;
      // S7
      10'b0_000_001_010: next_state = in ? 10'b1_000_000_000 : 10'b0_000_001_010;
      10'b1_000_001_010: next_state = in ? 10'b1_000_000_000 : 10'b1_000_001_010;
      // S8
      10'b0_000_010_000: next_state = in ? 10'b0_000_000_000 : 10'b1_000_000_001;
      10'b1_000_000_001: next_state = in ? 10'b0_000_000_001 : 10'b0_000_000_010;
      // S9
      10'b0_000_001_100: next_state = in ? 10'b1_000_000_001 : 10'b0_000_010_001;
      10'b1_000_010_001: next_state = in ? 10'b1_000_000_001 : 10'b1_000_010_001;
      default: next_state = 10'b0;
    endcase
  end

  // Output logic
  assign out1 = (state == 10'b1_000_001_000) ? 1'b1 : 1'b0;
  assign out2 = (state == 10'b0_000_001_010) ? 1'b1 : 1'b0;

endmodule
