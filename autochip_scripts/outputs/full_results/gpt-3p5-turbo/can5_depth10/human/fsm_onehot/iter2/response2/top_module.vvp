#! /usr/local/bin/vvp
:ivl_version "13.0 (devel)" "(s20221226-331-g77d7f0b8f)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision - 12;
:vpi_module "/usr/local/lib/ivl/system.vpi";
:vpi_module "/usr/local/lib/ivl/vhdl_sys.vpi";
:vpi_module "/usr/local/lib/ivl/vhdl_textio.vpi";
:vpi_module "/usr/local/lib/ivl/v2005_math.vpi";
:vpi_module "/usr/local/lib/ivl/va_math.vpi";
:vpi_module "/usr/local/lib/ivl/v2009.vpi";
S_0x1ee5d10 .scope package, "$unit" "$unit" 2 1;
 .timescale 0 0;
S_0x1ee5b20 .scope module, "tb" "tb" 3 122;
 .timescale -12 -12;
L_0x1ee8a20 .functor NOT 1, L_0x1f62350, C4<0>, C4<0>, C4<0>;
L_0x1f621d0 .functor XOR 12, L_0x1f62090, L_0x1f62130, C4<000000000000>, C4<000000000000>;
L_0x1f622e0 .functor XOR 12, L_0x1f621d0, L_0x1f62240, C4<000000000000>, C4<000000000000>;
v0x1f5b1f0_0 .net *"_ivl_10", 11 0, L_0x1f62240;  1 drivers
v0x1f5b2f0_0 .net *"_ivl_12", 11 0, L_0x1f622e0;  1 drivers
v0x1f5b3d0_0 .net *"_ivl_2", 11 0, L_0x1f61ff0;  1 drivers
v0x1f5b490_0 .net *"_ivl_4", 11 0, L_0x1f62090;  1 drivers
v0x1f5b570_0 .net *"_ivl_6", 11 0, L_0x1f62130;  1 drivers
v0x1f5b6a0_0 .net *"_ivl_8", 11 0, L_0x1f621d0;  1 drivers
v0x1f5b780_0 .var "clk", 0 0;
v0x1f5b820_0 .net "in", 0 0, v0x1f578f0_0;  1 drivers
v0x1f5b8c0_0 .net "next_state_dut", 9 0, L_0x1f61730;  1 drivers
v0x1f5b960_0 .net "next_state_ref", 9 0, L_0x1f5e800;  1 drivers
v0x1f5ba70_0 .net "out1_dut", 0 0, L_0x1f61b00;  1 drivers
v0x1f5bb10_0 .net "out1_ref", 0 0, L_0x1eeb870;  1 drivers
v0x1f5bbb0_0 .net "out2_dut", 0 0, L_0x1f61e90;  1 drivers
v0x1f5bc50_0 .net "out2_ref", 0 0, L_0x1eec710;  1 drivers
v0x1f5bd20_0 .net "state", 9 0, v0x1f57c20_0;  1 drivers
v0x1f5bdc0_0 .var/2u "stats1", 287 0;
v0x1f5be60_0 .var/2u "strobe", 0 0;
v0x1f5bf00_0 .net "tb_match", 0 0, L_0x1f62350;  1 drivers
v0x1f5bfd0_0 .net "tb_mismatch", 0 0, L_0x1ee8a20;  1 drivers
v0x1f5c070_0 .net "wavedrom_enable", 0 0, v0x1f57e60_0;  1 drivers
v0x1f5c140_0 .net "wavedrom_title", 511 0, v0x1f57f20_0;  1 drivers
L_0x1f61ff0 .concat [ 1 1 10 0], L_0x1eec710, L_0x1eeb870, L_0x1f5e800;
L_0x1f62090 .concat [ 1 1 10 0], L_0x1eec710, L_0x1eeb870, L_0x1f5e800;
L_0x1f62130 .concat [ 1 1 10 0], L_0x1f61e90, L_0x1f61b00, L_0x1f61730;
L_0x1f62240 .concat [ 1 1 10 0], L_0x1eec710, L_0x1eeb870, L_0x1f5e800;
L_0x1f62350 .cmp/eeq 12, L_0x1f61ff0, L_0x1f622e0;
S_0x1ee8590 .scope module, "good1" "reference_module" 3 171, 3 4 0, S_0x1ee5b20;
 .timescale -12 -12;
    .port_info 0 /INPUT 1 "in";
    .port_info 1 /INPUT 10 "state";
    .port_info 2 /OUTPUT 10 "next_state";
    .port_info 3 /OUTPUT 1 "out1";
    .port_info 4 /OUTPUT 1 "out2";
L_0x1eeb870 .functor OR 1, L_0x1f5c290, L_0x1f5c330, C4<0>, C4<0>;
L_0x1eec710 .functor OR 1, L_0x1f5c4c0, L_0x1f5c560, C4<0>, C4<0>;
L_0x1eece60 .functor OR 1, L_0x1f5ca40, L_0x1f5cae0, C4<0>, C4<0>;
L_0x1ee9870 .functor OR 1, L_0x1eece60, L_0x1f5cc70, C4<0>, C4<0>;
L_0x1f07d10 .functor OR 1, L_0x1ee9870, L_0x1f5cde0, C4<0>, C4<0>;
L_0x1f2f7a0 .functor AND 1, L_0x1f5c720, L_0x1f07d10, C4<1>, C4<1>;
L_0x1f5d1c0 .functor OR 1, L_0x1f5d010, L_0x1f5d0b0, C4<0>, C4<0>;
L_0x1f5d370 .functor OR 1, L_0x1f5d1c0, L_0x1f5d2d0, C4<0>, C4<0>;
L_0x1f5d4d0 .functor AND 1, v0x1f578f0_0, L_0x1f5d370, C4<1>, C4<1>;
L_0x1f5d150 .functor AND 1, v0x1f578f0_0, L_0x1f5d590, C4<1>, C4<1>;
L_0x1f5da10 .functor AND 1, v0x1f578f0_0, L_0x1f5d760, C4<1>, C4<1>;
L_0x1f5dbb0 .functor AND 1, v0x1f578f0_0, L_0x1f5da80, C4<1>, C4<1>;
L_0x1f5dd80 .functor AND 1, v0x1f578f0_0, L_0x1f5dce0, C4<1>, C4<1>;
L_0x1f5dfb0 .functor AND 1, v0x1f578f0_0, L_0x1f5de70, C4<1>, C4<1>;
L_0x1f5dc70 .functor OR 1, L_0x1f5e120, L_0x1f5e1c0, C4<0>, C4<0>;
L_0x1f5e410 .functor AND 1, v0x1f578f0_0, L_0x1f5dc70, C4<1>, C4<1>;
L_0x1f5e6c0 .functor AND 1, L_0x1f5df10, L_0x1f5e560, C4<1>, C4<1>;
L_0x1f5ed80 .functor AND 1, L_0x1f5eb70, L_0x1f5ece0, C4<1>, C4<1>;
v0x1eeba20_0 .net *"_ivl_1", 0 0, L_0x1f5c290;  1 drivers
v0x1eec820_0 .net *"_ivl_100", 0 0, L_0x1f5eb70;  1 drivers
v0x1eec8c0_0 .net *"_ivl_102", 0 0, L_0x1f5ece0;  1 drivers
v0x1eed0d0_0 .net *"_ivl_104", 0 0, L_0x1f5ed80;  1 drivers
v0x1eed170_0 .net *"_ivl_15", 0 0, L_0x1f5c720;  1 drivers
v0x1ee99c0_0 .net *"_ivl_17", 4 0, L_0x1f5c850;  1 drivers
v0x1ee9a60_0 .net *"_ivl_19", 0 0, L_0x1f5ca40;  1 drivers
v0x1f543f0_0 .net *"_ivl_21", 0 0, L_0x1f5cae0;  1 drivers
v0x1f544d0_0 .net *"_ivl_22", 0 0, L_0x1eece60;  1 drivers
v0x1f545b0_0 .net *"_ivl_25", 0 0, L_0x1f5cc70;  1 drivers
v0x1f54690_0 .net *"_ivl_26", 0 0, L_0x1ee9870;  1 drivers
v0x1f54770_0 .net *"_ivl_29", 0 0, L_0x1f5cde0;  1 drivers
v0x1f54850_0 .net *"_ivl_3", 0 0, L_0x1f5c330;  1 drivers
v0x1f54930_0 .net *"_ivl_30", 0 0, L_0x1f07d10;  1 drivers
v0x1f54a10_0 .net *"_ivl_33", 0 0, L_0x1f2f7a0;  1 drivers
v0x1f54ad0_0 .net *"_ivl_37", 0 0, L_0x1f5d010;  1 drivers
v0x1f54bb0_0 .net *"_ivl_39", 0 0, L_0x1f5d0b0;  1 drivers
v0x1f54c90_0 .net *"_ivl_40", 0 0, L_0x1f5d1c0;  1 drivers
v0x1f54d70_0 .net *"_ivl_43", 0 0, L_0x1f5d2d0;  1 drivers
v0x1f54e50_0 .net *"_ivl_44", 0 0, L_0x1f5d370;  1 drivers
v0x1f54f30_0 .net *"_ivl_47", 0 0, L_0x1f5d4d0;  1 drivers
v0x1f54ff0_0 .net *"_ivl_51", 0 0, L_0x1f5d590;  1 drivers
v0x1f550d0_0 .net *"_ivl_53", 0 0, L_0x1f5d150;  1 drivers
v0x1f55190_0 .net *"_ivl_57", 0 0, L_0x1f5d760;  1 drivers
v0x1f55270_0 .net *"_ivl_59", 0 0, L_0x1f5da10;  1 drivers
v0x1f55330_0 .net *"_ivl_63", 0 0, L_0x1f5da80;  1 drivers
v0x1f55410_0 .net *"_ivl_65", 0 0, L_0x1f5dbb0;  1 drivers
v0x1f554d0_0 .net *"_ivl_69", 0 0, L_0x1f5dce0;  1 drivers
v0x1f555b0_0 .net *"_ivl_7", 0 0, L_0x1f5c4c0;  1 drivers
v0x1f55690_0 .net *"_ivl_71", 0 0, L_0x1f5dd80;  1 drivers
v0x1f55750_0 .net *"_ivl_75", 0 0, L_0x1f5de70;  1 drivers
v0x1f55830_0 .net *"_ivl_77", 0 0, L_0x1f5dfb0;  1 drivers
v0x1f558f0_0 .net *"_ivl_81", 0 0, L_0x1f5e120;  1 drivers
v0x1f55be0_0 .net *"_ivl_83", 0 0, L_0x1f5e1c0;  1 drivers
v0x1f55cc0_0 .net *"_ivl_84", 0 0, L_0x1f5dc70;  1 drivers
v0x1f55da0_0 .net *"_ivl_87", 0 0, L_0x1f5e410;  1 drivers
v0x1f55e60_0 .net *"_ivl_9", 0 0, L_0x1f5c560;  1 drivers
v0x1f55f40_0 .net *"_ivl_91", 0 0, L_0x1f5df10;  1 drivers
v0x1f56000_0 .net *"_ivl_93", 0 0, L_0x1f5e560;  1 drivers
v0x1f560e0_0 .net *"_ivl_95", 0 0, L_0x1f5e6c0;  1 drivers
v0x1f561a0_0 .net "in", 0 0, v0x1f578f0_0;  alias, 1 drivers
v0x1f56260_0 .net "next_state", 9 0, L_0x1f5e800;  alias, 1 drivers
v0x1f56340_0 .net "out1", 0 0, L_0x1eeb870;  alias, 1 drivers
v0x1f56400_0 .net "out2", 0 0, L_0x1eec710;  alias, 1 drivers
v0x1f564c0_0 .net "state", 9 0, v0x1f57c20_0;  alias, 1 drivers
L_0x1f5c290 .part v0x1f57c20_0, 8, 1;
L_0x1f5c330 .part v0x1f57c20_0, 9, 1;
L_0x1f5c4c0 .part v0x1f57c20_0, 7, 1;
L_0x1f5c560 .part v0x1f57c20_0, 9, 1;
L_0x1f5c720 .reduce/nor v0x1f578f0_0;
L_0x1f5c850 .part v0x1f57c20_0, 0, 5;
L_0x1f5ca40 .reduce/or L_0x1f5c850;
L_0x1f5cae0 .part v0x1f57c20_0, 7, 1;
L_0x1f5cc70 .part v0x1f57c20_0, 8, 1;
L_0x1f5cde0 .part v0x1f57c20_0, 9, 1;
L_0x1f5d010 .part v0x1f57c20_0, 0, 1;
L_0x1f5d0b0 .part v0x1f57c20_0, 8, 1;
L_0x1f5d2d0 .part v0x1f57c20_0, 9, 1;
L_0x1f5d590 .part v0x1f57c20_0, 1, 1;
L_0x1f5d760 .part v0x1f57c20_0, 2, 1;
L_0x1f5da80 .part v0x1f57c20_0, 3, 1;
L_0x1f5dce0 .part v0x1f57c20_0, 4, 1;
L_0x1f5de70 .part v0x1f57c20_0, 5, 1;
L_0x1f5e120 .part v0x1f57c20_0, 6, 1;
L_0x1f5e1c0 .part v0x1f57c20_0, 7, 1;
L_0x1f5df10 .reduce/nor v0x1f578f0_0;
L_0x1f5e560 .part v0x1f57c20_0, 5, 1;
LS_0x1f5e800_0_0 .concat8 [ 1 1 1 1], L_0x1f2f7a0, L_0x1f5d4d0, L_0x1f5d150, L_0x1f5da10;
LS_0x1f5e800_0_4 .concat8 [ 1 1 1 1], L_0x1f5dbb0, L_0x1f5dd80, L_0x1f5dfb0, L_0x1f5e410;
LS_0x1f5e800_0_8 .concat8 [ 1 1 0 0], L_0x1f5e6c0, L_0x1f5ed80;
L_0x1f5e800 .concat8 [ 4 4 2 0], LS_0x1f5e800_0_0, LS_0x1f5e800_0_4, LS_0x1f5e800_0_8;
L_0x1f5eb70 .reduce/nor v0x1f578f0_0;
L_0x1f5ece0 .part v0x1f57c20_0, 6, 1;
S_0x1f56640 .scope module, "stim1" "stimulus_gen" 3 166, 3 29 0, S_0x1ee5b20;
 .timescale -12 -12;
    .port_info 0 /INPUT 1 "clk";
    .port_info 1 /OUTPUT 1 "in";
    .port_info 2 /OUTPUT 10 "state";
    .port_info 3 /INPUT 1 "tb_match";
    .port_info 4 /INPUT 10 "next_state_ref";
    .port_info 5 /INPUT 10 "next_state_dut";
    .port_info 6 /OUTPUT 512 "wavedrom_title";
    .port_info 7 /OUTPUT 1 "wavedrom_enable";
v0x1f57670_0 .net "clk", 0 0, v0x1f5b780_0;  1 drivers
v0x1f57750_0 .var/2s "errored1", 31 0;
v0x1f57830_0 .var/2s "errored2", 31 0;
v0x1f578f0_0 .var "in", 0 0;
v0x1f57990_0 .net "next_state_dut", 9 0, L_0x1f61730;  alias, 1 drivers
v0x1f57aa0_0 .net "next_state_ref", 9 0, L_0x1f5e800;  alias, 1 drivers
v0x1f57b60_0 .var/2s "onehot_error", 31 0;
v0x1f57c20_0 .var "state", 9 0;
v0x1f57ce0_0 .var "state_error", 9 0;
v0x1f57da0_0 .net "tb_match", 0 0, L_0x1f62350;  alias, 1 drivers
v0x1f57e60_0 .var "wavedrom_enable", 0 0;
v0x1f57f20_0 .var "wavedrom_title", 511 0;
E_0x1ef5e70 .event negedge, v0x1f57670_0;
E_0x1ef60c0 .event posedge, v0x1f57670_0;
S_0x1f56880 .scope begin, "$ivl_for_loop0" "$ivl_for_loop0" 3 69, 3 69 0, S_0x1f56640;
 .timescale -12 -12;
v0x1f56ac0_0 .var/2s "i", 31 0;
E_0x1ef5740/0 .event negedge, v0x1f57670_0;
E_0x1ef5740/1 .event posedge, v0x1f57670_0;
E_0x1ef5740 .event/or E_0x1ef5740/0, E_0x1ef5740/1;
S_0x1f56bc0 .scope begin, "$ivl_for_loop1" "$ivl_for_loop1" 3 74, 3 74 0, S_0x1f56640;
 .timescale -12 -12;
v0x1f56dc0_0 .var/2s "i", 31 0;
S_0x1f56ea0 .scope begin, "$ivl_for_loop2" "$ivl_for_loop2" 3 114, 3 114 0, S_0x1f56640;
 .timescale -12 -12;
v0x1f57080_0 .var/2s "i", 31 0;
S_0x1f57160 .scope task, "wavedrom_start" "wavedrom_start" 3 45, 3 45 0, S_0x1f56640;
 .timescale -12 -12;
v0x1f57340_0 .var "title", 511 0;
TD_tb.stim1.wavedrom_start ;
    %end;
S_0x1f57440 .scope task, "wavedrom_stop" "wavedrom_stop" 3 48, 3 48 0, S_0x1f56640;
 .timescale -12 -12;
TD_tb.stim1.wavedrom_stop ;
    %delay 1, 0;
    %end;
S_0x1f58100 .scope module, "top_module1" "top_module" 3 178, 4 1 0, S_0x1ee5b20;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "in";
    .port_info 1 /INPUT 10 "state";
    .port_info 2 /OUTPUT 10 "next_state";
    .port_info 3 /OUTPUT 1 "out1";
    .port_info 4 /OUTPUT 1 "out2";
L_0x1f5f0c0 .functor AND 1, L_0x1f5f020, v0x1f578f0_0, C4<1>, C4<1>;
L_0x1f5f180 .functor OR 1, L_0x1f5ef80, L_0x1f5f0c0, C4<0>, C4<0>;
L_0x1f5f330 .functor AND 1, L_0x1f5f290, v0x1f578f0_0, C4<1>, C4<1>;
L_0x1f5f530 .functor NOT 1, v0x1f578f0_0, C4<0>, C4<0>, C4<0>;
L_0x1f5f7e0 .functor AND 1, L_0x1f5f490, L_0x1f5f530, C4<1>, C4<1>;
L_0x1f5f8f0 .functor OR 1, L_0x1f5f3f0, L_0x1f5f7e0, C4<0>, C4<0>;
L_0x1f5fb20 .functor NOT 1, v0x1f578f0_0, C4<0>, C4<0>, C4<0>;
L_0x1f5fb90 .functor AND 1, L_0x1f5fa40, L_0x1f5fb20, C4<1>, C4<1>;
L_0x1f5fd90 .functor AND 1, L_0x1f5fcf0, v0x1f578f0_0, C4<1>, C4<1>;
L_0x1f5ff40 .functor AND 1, L_0x1f5fe50, v0x1f578f0_0, C4<1>, C4<1>;
L_0x1f60610 .functor NOT 1, v0x1f578f0_0, C4<0>, C4<0>, C4<0>;
L_0x1f60680 .functor AND 1, L_0x1f60510, L_0x1f60610, C4<1>, C4<1>;
L_0x1f60760 .functor OR 1, L_0x1f60060, L_0x1f60680, C4<0>, C4<0>;
L_0x1f60910 .functor NOT 1, v0x1f578f0_0, C4<0>, C4<0>, C4<0>;
L_0x1f606f0 .functor AND 1, L_0x1f60870, L_0x1f60910, C4<1>, C4<1>;
L_0x1f60bb0 .functor NOT 1, v0x1f578f0_0, C4<0>, C4<0>, C4<0>;
L_0x1f60cb0 .functor AND 1, L_0x1f60aa0, L_0x1f60bb0, C4<1>, C4<1>;
L_0x1f60e60 .functor NOT 1, v0x1f578f0_0, C4<0>, C4<0>, C4<0>;
L_0x1f60f70 .functor AND 1, L_0x1f60dc0, L_0x1f60e60, C4<1>, C4<1>;
L_0x1f60b40 .functor NOT 1, L_0x1f61960, C4<0>, C4<0>, C4<0>;
L_0x1f61b00 .functor AND 1, L_0x1f61820, L_0x1f60b40, C4<1>, C4<1>;
L_0x1f61d10 .functor NOT 1, L_0x1f618c0, C4<0>, C4<0>, C4<0>;
L_0x1f61e90 .functor AND 1, L_0x1f60ed0, L_0x1f61d10, C4<1>, C4<1>;
v0x1f58370_0 .net *"_ivl_1", 0 0, L_0x1f5ef80;  1 drivers
v0x1f58450_0 .net *"_ivl_10", 0 0, L_0x1f5f330;  1 drivers
v0x1f58530_0 .net *"_ivl_13", 0 0, L_0x1f5f3f0;  1 drivers
v0x1f58620_0 .net *"_ivl_15", 0 0, L_0x1f5f490;  1 drivers
v0x1f58700_0 .net *"_ivl_16", 0 0, L_0x1f5f530;  1 drivers
v0x1f58830_0 .net *"_ivl_18", 0 0, L_0x1f5f7e0;  1 drivers
v0x1f58910_0 .net *"_ivl_20", 0 0, L_0x1f5f8f0;  1 drivers
v0x1f589f0_0 .net *"_ivl_23", 0 0, L_0x1f5fa40;  1 drivers
v0x1f58ad0_0 .net *"_ivl_24", 0 0, L_0x1f5fb20;  1 drivers
v0x1f58c40_0 .net *"_ivl_26", 0 0, L_0x1f5fb90;  1 drivers
v0x1f58d20_0 .net *"_ivl_29", 0 0, L_0x1f5fcf0;  1 drivers
v0x1f58e00_0 .net *"_ivl_3", 0 0, L_0x1f5f020;  1 drivers
v0x1f58ee0_0 .net *"_ivl_30", 0 0, L_0x1f5fd90;  1 drivers
v0x1f58fc0_0 .net *"_ivl_33", 0 0, L_0x1f5fe50;  1 drivers
v0x1f590a0_0 .net *"_ivl_34", 0 0, L_0x1f5ff40;  1 drivers
v0x1f59180_0 .net *"_ivl_37", 0 0, L_0x1f60060;  1 drivers
v0x1f59260_0 .net *"_ivl_39", 0 0, L_0x1f60510;  1 drivers
v0x1f59450_0 .net *"_ivl_4", 0 0, L_0x1f5f0c0;  1 drivers
v0x1f59530_0 .net *"_ivl_40", 0 0, L_0x1f60610;  1 drivers
v0x1f59610_0 .net *"_ivl_42", 0 0, L_0x1f60680;  1 drivers
v0x1f596f0_0 .net *"_ivl_44", 0 0, L_0x1f60760;  1 drivers
v0x1f597d0_0 .net *"_ivl_47", 0 0, L_0x1f60870;  1 drivers
v0x1f598b0_0 .net *"_ivl_48", 0 0, L_0x1f60910;  1 drivers
v0x1f59990_0 .net *"_ivl_50", 0 0, L_0x1f606f0;  1 drivers
v0x1f59a70_0 .net *"_ivl_53", 0 0, L_0x1f60aa0;  1 drivers
v0x1f59b50_0 .net *"_ivl_54", 0 0, L_0x1f60bb0;  1 drivers
v0x1f59c30_0 .net *"_ivl_56", 0 0, L_0x1f60cb0;  1 drivers
v0x1f59d10_0 .net *"_ivl_59", 0 0, L_0x1f60dc0;  1 drivers
v0x1f59df0_0 .net *"_ivl_6", 0 0, L_0x1f5f180;  1 drivers
v0x1f59ed0_0 .net *"_ivl_60", 0 0, L_0x1f60e60;  1 drivers
v0x1f59fb0_0 .net *"_ivl_62", 0 0, L_0x1f60f70;  1 drivers
v0x1f5a090_0 .net *"_ivl_65", 1 0, L_0x1f61080;  1 drivers
v0x1f5a170_0 .net *"_ivl_66", 2 0, L_0x1f611a0;  1 drivers
v0x1f5a460_0 .net *"_ivl_68", 11 0, L_0x1f612e0;  1 drivers
v0x1f5a540_0 .net *"_ivl_73", 0 0, L_0x1f61820;  1 drivers
v0x1f5a620_0 .net *"_ivl_75", 0 0, L_0x1f61960;  1 drivers
v0x1f5a700_0 .net *"_ivl_76", 0 0, L_0x1f60b40;  1 drivers
v0x1f5a7e0_0 .net *"_ivl_81", 0 0, L_0x1f60ed0;  1 drivers
v0x1f5a8c0_0 .net *"_ivl_83", 0 0, L_0x1f618c0;  1 drivers
v0x1f5a9a0_0 .net *"_ivl_84", 0 0, L_0x1f61d10;  1 drivers
v0x1f5aa80_0 .net *"_ivl_9", 0 0, L_0x1f5f290;  1 drivers
v0x1f5ab60_0 .net "in", 0 0, v0x1f578f0_0;  alias, 1 drivers
v0x1f5ac00_0 .net "next_state", 9 0, L_0x1f61730;  alias, 1 drivers
v0x1f5acc0_0 .net "out1", 0 0, L_0x1f61b00;  alias, 1 drivers
v0x1f5ad60_0 .net "out2", 0 0, L_0x1f61e90;  alias, 1 drivers
v0x1f5ae20_0 .net "state", 9 0, v0x1f57c20_0;  alias, 1 drivers
L_0x1f5ef80 .part v0x1f57c20_0, 8, 1;
L_0x1f5f020 .part v0x1f57c20_0, 1, 1;
L_0x1f5f290 .part v0x1f57c20_0, 1, 1;
L_0x1f5f3f0 .part v0x1f57c20_0, 0, 1;
L_0x1f5f490 .part v0x1f57c20_0, 1, 1;
L_0x1f5fa40 .part v0x1f57c20_0, 1, 1;
L_0x1f5fcf0 .part v0x1f57c20_0, 2, 1;
L_0x1f5fe50 .part v0x1f57c20_0, 3, 1;
L_0x1f60060 .part v0x1f57c20_0, 4, 1;
L_0x1f60510 .part v0x1f57c20_0, 2, 1;
L_0x1f60870 .part v0x1f57c20_0, 5, 1;
L_0x1f60aa0 .part v0x1f57c20_0, 6, 1;
L_0x1f60dc0 .part v0x1f57c20_0, 7, 1;
L_0x1f61080 .part v0x1f57c20_0, 8, 2;
L_0x1f611a0 .concat [ 2 1 0 0], L_0x1f61080, L_0x1f60f70;
LS_0x1f612e0_0_0 .concat [ 3 1 1 1], L_0x1f611a0, L_0x1f60cb0, L_0x1f606f0, L_0x1f60760;
LS_0x1f612e0_0_4 .concat [ 1 1 1 1], L_0x1f5ff40, L_0x1f5fd90, L_0x1f5fb90, L_0x1f5f8f0;
LS_0x1f612e0_0_8 .concat [ 1 1 0 0], L_0x1f5f330, L_0x1f5f180;
L_0x1f612e0 .concat [ 6 4 2 0], LS_0x1f612e0_0_0, LS_0x1f612e0_0_4, LS_0x1f612e0_0_8;
L_0x1f61730 .part L_0x1f612e0, 0, 10;
L_0x1f61820 .part v0x1f57c20_0, 7, 1;
L_0x1f61960 .part v0x1f57c20_0, 6, 1;
L_0x1f60ed0 .part v0x1f57c20_0, 9, 1;
L_0x1f618c0 .part v0x1f57c20_0, 6, 1;
S_0x1f5afd0 .scope task, "wait_for_end_of_timestep" "wait_for_end_of_timestep" 3 187, 3 187 0, S_0x1ee5b20;
 .timescale -12 -12;
E_0x1edda20 .event anyedge, v0x1f5be60_0;
TD_tb.wait_for_end_of_timestep ;
    %pushi/vec4 5, 0, 32;
T_2.0 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_2.1, 5;
    %jmp/1 T_2.1, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %load/vec4 v0x1f5be60_0;
    %nor/r;
    %assign/vec4 v0x1f5be60_0, 0;
    %wait E_0x1edda20;
    %jmp T_2.0;
T_2.1 ;
    %pop/vec4 1;
    %end;
    .scope S_0x1f56640;
T_3 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x1f57750_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x1f57830_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x1f57b60_0, 0, 32;
    %pushi/vec4 0, 0, 10;
    %store/vec4 v0x1f57ce0_0, 0, 10;
    %end;
    .thread T_3, $init;
    .scope S_0x1f56640;
T_4 ;
    %pushi/vec4 2, 0, 32;
T_4.0 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_4.1, 5;
    %jmp/1 T_4.1, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_0x1ef60c0;
    %jmp T_4.0;
T_4.1 ;
    %pop/vec4 1;
T_4.2 ;
    %wait E_0x1ef5740;
    %load/vec4 v0x1f57ce0_0;
    %load/vec4 v0x1f57aa0_0;
    %load/vec4 v0x1f57990_0;
    %xor;
    %or;
    %assign/vec4 v0x1f57ce0_0, 0;
    %jmp T_4.2;
T_4.3 ;
    %end;
    .thread T_4;
    .scope S_0x1f56640;
T_5 ;
    %pushi/vec4 0, 0, 10;
    %assign/vec4 v0x1f57c20_0, 0;
    %wait E_0x1ef5e70;
    %fork t_1, S_0x1f56880;
    %jmp t_0;
    .scope S_0x1f56880;
t_1 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x1f56ac0_0, 0, 32;
T_5.0 ; Top of for-loop 
    %load/vec4 v0x1f56ac0_0;
    %cmpi/s 10, 0, 32;
    %jmp/0xz T_5.1, 5;
    %wait E_0x1ef5740;
    %pushi/vec4 1, 0, 10;
    %load/vec4 v0x1f56ac0_0;
    %ix/vec4 4;
    %shiftl 4;
    %assign/vec4 v0x1f57c20_0, 0;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0x1f578f0_0, 0;
T_5.2 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x1f56ac0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x1f56ac0_0, 0, 32;
    %jmp T_5.0;
T_5.1 ; for-loop exit label
    %end;
    .scope S_0x1f56640;
t_0 %join;
    %fork t_3, S_0x1f56bc0;
    %jmp t_2;
    .scope S_0x1f56bc0;
t_3 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x1f56dc0_0, 0, 32;
T_5.3 ; Top of for-loop 
    %load/vec4 v0x1f56dc0_0;
    %cmpi/s 10, 0, 32;
    %jmp/0xz T_5.4, 5;
    %wait E_0x1ef5740;
    %pushi/vec4 1, 0, 10;
    %load/vec4 v0x1f56dc0_0;
    %ix/vec4 4;
    %shiftl 4;
    %assign/vec4 v0x1f57c20_0, 0;
    %pushi/vec4 1, 0, 1;
    %assign/vec4 v0x1f578f0_0, 0;
T_5.5 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x1f56dc0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x1f56dc0_0, 0, 32;
    %jmp T_5.3;
T_5.4 ; for-loop exit label
    %end;
    .scope S_0x1f56640;
t_2 %join;
    %wait E_0x1ef5e70;
    %fork TD_tb.stim1.wavedrom_stop, S_0x1f57440;
    %join;
    %pushi/vec4 200, 0, 32;
T_5.6 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_5.7, 5;
    %jmp/1 T_5.7, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_0x1ef5740;
    %pushi/vec4 1, 0, 10;
    %vpi_func 3 83 "$random" 32 {0 0 0};
    %pushi/vec4 10, 0, 32;
    %mod;
    %ix/vec4 4;
    %shiftl 4;
    %assign/vec4 v0x1f57c20_0, 0;
    %vpi_func 3 84 "$random" 32 {0 0 0};
    %pad/s 1;
    %assign/vec4 v0x1f578f0_0, 0;
    %load/vec4 v0x1f57da0_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.8, 8;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x1f57b60_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x1f57b60_0, 0, 32;
T_5.8 ;
    %jmp T_5.6;
T_5.7 ;
    %pop/vec4 1;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x1f57750_0, 0, 32;
    %pushi/vec4 400, 0, 32;
T_5.10 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_5.11, 5;
    %jmp/1 T_5.11, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_0x1ef5740;
    %pushi/vec4 1, 0, 10;
    %vpi_func 3 91 "$random" 32 {0 0 0};
    %pushi/vec4 10, 0, 32;
    %mod;
    %ix/vec4 4;
    %shiftl 4;
    %pushi/vec4 1, 0, 10;
    %vpi_func 3 91 "$random" 32 {0 0 0};
    %pushi/vec4 10, 0, 32;
    %mod;
    %ix/vec4 4;
    %shiftl 4;
    %or;
    %assign/vec4 v0x1f57c20_0, 0;
    %vpi_func 3 92 "$random" 32 {0 0 0};
    %pad/s 1;
    %assign/vec4 v0x1f578f0_0, 0;
    %load/vec4 v0x1f57da0_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.12, 8;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x1f57750_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x1f57750_0, 0, 32;
T_5.12 ;
    %jmp T_5.10;
T_5.11 ;
    %pop/vec4 1;
    %load/vec4 v0x1f57b60_0;
    %nor/r;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_5.16, 9;
    %load/vec4 v0x1f57750_0;
    %pushi/vec4 0, 0, 32;
    %cmp/ne;
    %flag_get/vec4 4;
    %and;
T_5.16;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.14, 8;
    %vpi_call/w 3 98 "$display", "Hint: Your circuit passed when given only one-hot inputs, but not with two-hot inputs." {0 0 0};
T_5.14 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x1f57830_0, 0, 32;
    %pushi/vec4 800, 0, 32;
T_5.17 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_5.18, 5;
    %jmp/1 T_5.18, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_0x1ef5740;
    %vpi_func 3 103 "$random" 32 {0 0 0};
    %pad/s 10;
    %assign/vec4 v0x1f57c20_0, 0;
    %vpi_func 3 104 "$random" 32 {0 0 0};
    %pad/s 1;
    %assign/vec4 v0x1f578f0_0, 0;
    %load/vec4 v0x1f57da0_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.19, 8;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x1f57830_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x1f57830_0, 0, 32;
T_5.19 ;
    %jmp T_5.17;
T_5.18 ;
    %pop/vec4 1;
    %load/vec4 v0x1f57b60_0;
    %nor/r;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_5.23, 9;
    %load/vec4 v0x1f57830_0;
    %pushi/vec4 0, 0, 32;
    %cmp/ne;
    %flag_get/vec4 4;
    %and;
T_5.23;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.21, 8;
    %vpi_call/w 3 109 "$display", "Hint: Your circuit passed when given only one-hot inputs, but not with random inputs." {0 0 0};
T_5.21 ;
    %load/vec4 v0x1f57b60_0;
    %nor/r;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_5.26, 9;
    %load/vec4 v0x1f57750_0;
    %cmpi/ne 0, 0, 32;
    %flag_get/vec4 4;
    %jmp/1 T_5.27, 4;
    %load/vec4 v0x1f57830_0;
    %pushi/vec4 0, 0, 32;
    %cmp/ne;
    %flag_get/vec4 4;
    %or;
T_5.27;
    %and;
T_5.26;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.24, 8;
    %vpi_call/w 3 112 "$display", "Hint: Are you doing something more complicated than deriving state transition equations by inspection?\012" {0 0 0};
T_5.24 ;
    %fork t_5, S_0x1f56ea0;
    %jmp t_4;
    .scope S_0x1f56ea0;
t_5 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x1f57080_0, 0, 32;
T_5.28 ; Top of for-loop 
    %load/vec4 v0x1f57080_0;
    %cmpi/u 10, 0, 32;
    %jmp/0xz T_5.29, 5;
    %load/vec4 v0x1f57ce0_0;
    %load/vec4 v0x1f57080_0;
    %part/s 1;
    %cmpi/e 0, 0, 1;
    %flag_mov 8, 6;
    %jmp/0 T_5.31, 8;
    %pushi/vec4 25455, 0, 32; draw_string_vec4
    %pushi/vec4 1920099683, 0, 32; draw_string_vec4
    %concat/vec4; draw_string_vec4
    %pushi/vec4 116, 0, 8; draw_string_vec4
    %concat/vec4; draw_string_vec4
    %jmp/1 T_5.32, 8;
T_5.31 ; End of true expr.
    %pushi/vec4 1768842095, 0, 32; draw_string_vec4
    %pushi/vec4 1920099683, 0, 32; draw_string_vec4
    %concat/vec4; draw_string_vec4
    %pushi/vec4 116, 0, 8; draw_string_vec4
    %concat/vec4; draw_string_vec4
    %jmp/0 T_5.32, 8;
 ; End of false expr.
    %blend;
T_5.32;
    %vpi_call/w 3 115 "$display", "Hint: next_state[%0d] is %s.", v0x1f57080_0, S<0,vec4,u72> {1 0 0};
T_5.30 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x1f57080_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x1f57080_0, 0, 32;
    %jmp T_5.28;
T_5.29 ; for-loop exit label
    %end;
    .scope S_0x1f56640;
t_4 %join;
    %delay 1, 0;
    %vpi_call/w 3 117 "$finish" {0 0 0};
    %end;
    .thread T_5;
    .scope S_0x1ee5b20;
T_6 ;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x1f5b780_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x1f5be60_0, 0, 1;
    %end;
    .thread T_6, $init;
    .scope S_0x1ee5b20;
T_7 ;
T_7.0 ;
    %delay 5, 0;
    %load/vec4 v0x1f5b780_0;
    %inv;
    %store/vec4 v0x1f5b780_0, 0, 1;
    %jmp T_7.0;
T_7.1 ;
    %end;
    .thread T_7;
    .scope S_0x1ee5b20;
T_8 ;
    %vpi_call/w 3 158 "$dumpfile", "wave.vcd" {0 0 0};
    %vpi_call/w 3 159 "$dumpvars", 32'sb00000000000000000000000000000001, v0x1f57670_0, v0x1f5bfd0_0, v0x1f5b820_0, v0x1f5bd20_0, v0x1f5b960_0, v0x1f5b8c0_0, v0x1f5bb10_0, v0x1f5ba70_0, v0x1f5bc50_0, v0x1f5bbb0_0 {0 0 0};
    %end;
    .thread T_8;
    .scope S_0x1ee5b20;
T_9 ;
    %load/vec4 v0x1f5bdc0_0;
    %parti/u 32, 192, 32;
    %cmpi/ne 0, 0, 32;
    %jmp/0xz  T_9.0, 4;
    %load/vec4 v0x1f5bdc0_0;
    %parti/u 32, 192, 32;
    %load/vec4 v0x1f5bdc0_0;
    %parti/u 32, 160, 32;
    %vpi_call/w 3 196 "$display", "Hint: Output '%s' has %0d mismatches. First mismatch occurred at time %0d.", "next_state", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %jmp T_9.1;
T_9.0 ;
    %vpi_call/w 3 197 "$display", "Hint: Output '%s' has no mismatches.", "next_state" {0 0 0};
T_9.1 ;
    %load/vec4 v0x1f5bdc0_0;
    %parti/u 32, 128, 32;
    %cmpi/ne 0, 0, 32;
    %jmp/0xz  T_9.2, 4;
    %load/vec4 v0x1f5bdc0_0;
    %parti/u 32, 128, 32;
    %load/vec4 v0x1f5bdc0_0;
    %parti/u 32, 96, 32;
    %vpi_call/w 3 198 "$display", "Hint: Output '%s' has %0d mismatches. First mismatch occurred at time %0d.", "out1", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %jmp T_9.3;
T_9.2 ;
    %vpi_call/w 3 199 "$display", "Hint: Output '%s' has no mismatches.", "out1" {0 0 0};
T_9.3 ;
    %load/vec4 v0x1f5bdc0_0;
    %parti/u 32, 64, 32;
    %cmpi/ne 0, 0, 32;
    %jmp/0xz  T_9.4, 4;
    %load/vec4 v0x1f5bdc0_0;
    %parti/u 32, 64, 32;
    %load/vec4 v0x1f5bdc0_0;
    %parti/u 32, 32, 32;
    %vpi_call/w 3 200 "$display", "Hint: Output '%s' has %0d mismatches. First mismatch occurred at time %0d.", "out2", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %jmp T_9.5;
T_9.4 ;
    %vpi_call/w 3 201 "$display", "Hint: Output '%s' has no mismatches.", "out2" {0 0 0};
T_9.5 ;
    %load/vec4 v0x1f5bdc0_0;
    %parti/u 32, 256, 32;
    %load/vec4 v0x1f5bdc0_0;
    %parti/u 32, 0, 32;
    %vpi_call/w 3 203 "$display", "Hint: Total mismatched samples is %1d out of %1d samples\012", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %vpi_call/w 3 204 "$display", "Simulation finished at %0d ps", $time {0 0 0};
    %load/vec4 v0x1f5bdc0_0;
    %parti/u 32, 256, 32;
    %load/vec4 v0x1f5bdc0_0;
    %parti/u 32, 0, 32;
    %vpi_call/w 3 205 "$display", "Mismatches: %1d in %1d samples", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %end;
    .thread T_9, $final;
    .scope S_0x1ee5b20;
T_10 ;
    %wait E_0x1ef5740;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x1f5bdc0_0;
    %pushi/vec4 0, 0, 32;
    %part/u 32;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x1f5bdc0_0, 4, 32;
    %load/vec4 v0x1f5bf00_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_10.0, 8;
    %load/vec4 v0x1f5bdc0_0;
    %parti/u 32, 256, 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_10.2, 4;
    %vpi_func 3 216 "$time" 64 {0 0 0};
    %cast2;
    %pad/u 32;
    %ix/load 4, 224, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x1f5bdc0_0, 4, 32;
T_10.2 ;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x1f5bdc0_0;
    %pushi/vec4 256, 0, 32;
    %part/u 32;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %ix/load 4, 256, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x1f5bdc0_0, 4, 32;
T_10.0 ;
    %load/vec4 v0x1f5b960_0;
    %load/vec4 v0x1f5b960_0;
    %load/vec4 v0x1f5b8c0_0;
    %xor;
    %load/vec4 v0x1f5b960_0;
    %xor;
    %cmp/ne;
    %jmp/0xz  T_10.4, 6;
    %load/vec4 v0x1f5bdc0_0;
    %parti/u 32, 192, 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_10.6, 4;
    %vpi_func 3 220 "$time" 64 {0 0 0};
    %cast2;
    %pad/u 32;
    %ix/load 4, 160, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x1f5bdc0_0, 4, 32;
T_10.6 ;
    %load/vec4 v0x1f5bdc0_0;
    %parti/u 32, 192, 32;
    %addi 1, 0, 32;
    %ix/load 4, 192, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x1f5bdc0_0, 4, 32;
T_10.4 ;
    %load/vec4 v0x1f5bb10_0;
    %load/vec4 v0x1f5bb10_0;
    %load/vec4 v0x1f5ba70_0;
    %xor;
    %load/vec4 v0x1f5bb10_0;
    %xor;
    %cmp/ne;
    %jmp/0xz  T_10.8, 6;
    %load/vec4 v0x1f5bdc0_0;
    %parti/u 32, 128, 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_10.10, 4;
    %vpi_func 3 223 "$time" 64 {0 0 0};
    %cast2;
    %pad/u 32;
    %ix/load 4, 96, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x1f5bdc0_0, 4, 32;
T_10.10 ;
    %load/vec4 v0x1f5bdc0_0;
    %parti/u 32, 128, 32;
    %addi 1, 0, 32;
    %ix/load 4, 128, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x1f5bdc0_0, 4, 32;
T_10.8 ;
    %load/vec4 v0x1f5bc50_0;
    %load/vec4 v0x1f5bc50_0;
    %load/vec4 v0x1f5bbb0_0;
    %xor;
    %load/vec4 v0x1f5bc50_0;
    %xor;
    %cmp/ne;
    %jmp/0xz  T_10.12, 6;
    %load/vec4 v0x1f5bdc0_0;
    %parti/u 32, 64, 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_10.14, 4;
    %vpi_func 3 226 "$time" 64 {0 0 0};
    %cast2;
    %pad/u 32;
    %ix/load 4, 32, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x1f5bdc0_0, 4, 32;
T_10.14 ;
    %load/vec4 v0x1f5bdc0_0;
    %parti/u 32, 64, 32;
    %addi 1, 0, 32;
    %ix/load 4, 64, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x1f5bdc0_0, 4, 32;
T_10.12 ;
    %jmp T_10;
    .thread T_10;
# The file index is used to find the file name in the following table.
:file_names 5;
    "N/A";
    "<interactive>";
    "-";
    "/home/jmb9986/AutoChip/autochip_scripts/../verilogeval_prompts_tbs/ve_testbenches_human/fsm_onehot/fsm_onehot_tb.sv";
    "/home/jmb9986/AutoChip/autochip_scripts/outputs/gpt3.5_turbo_16k/fsm_onehot/iter2/response2/top_module.sv";
