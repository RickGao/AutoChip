#! /usr/local/bin/vvp
:ivl_version "13.0 (devel)" "(s20221226-331-g77d7f0b8f)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision - 12;
:vpi_module "/usr/local/lib/ivl/system.vpi";
:vpi_module "/usr/local/lib/ivl/vhdl_sys.vpi";
:vpi_module "/usr/local/lib/ivl/vhdl_textio.vpi";
:vpi_module "/usr/local/lib/ivl/v2005_math.vpi";
:vpi_module "/usr/local/lib/ivl/va_math.vpi";
:vpi_module "/usr/local/lib/ivl/v2009.vpi";
S_0x1d36230 .scope package, "$unit" "$unit" 2 1;
 .timescale 0 0;
S_0x1d49a70 .scope module, "tb" "tb" 3 122;
 .timescale -12 -12;
L_0x1d366c0 .functor NOT 1, L_0x1db10a0, C4<0>, C4<0>, C4<0>;
L_0x1db0f20 .functor XOR 12, L_0x1db0de0, L_0x1db0e80, C4<000000000000>, C4<000000000000>;
L_0x1db1030 .functor XOR 12, L_0x1db0f20, L_0x1db0f90, C4<000000000000>, C4<000000000000>;
v0x1daa3b0_0 .net *"_ivl_10", 11 0, L_0x1db0f90;  1 drivers
v0x1daa4b0_0 .net *"_ivl_12", 11 0, L_0x1db1030;  1 drivers
v0x1daa590_0 .net *"_ivl_2", 11 0, L_0x1db0d40;  1 drivers
v0x1daa650_0 .net *"_ivl_4", 11 0, L_0x1db0de0;  1 drivers
v0x1daa730_0 .net *"_ivl_6", 11 0, L_0x1db0e80;  1 drivers
v0x1daa860_0 .net *"_ivl_8", 11 0, L_0x1db0f20;  1 drivers
v0x1daa940_0 .var "clk", 0 0;
v0x1daa9e0_0 .net "in", 0 0, v0x1da6d70_0;  1 drivers
v0x1daaa80_0 .net "next_state_dut", 9 0, L_0x1db0600;  1 drivers
v0x1daab20_0 .net "next_state_ref", 9 0, L_0x1dad9c0;  1 drivers
v0x1daac30_0 .net "out1_dut", 0 0, L_0x1dae280;  1 drivers
v0x1daacd0_0 .net "out1_ref", 0 0, L_0x1d39510;  1 drivers
v0x1daad70_0 .net "out2_dut", 0 0, L_0x1dae520;  1 drivers
v0x1daae10_0 .net "out2_ref", 0 0, L_0x1d3a3b0;  1 drivers
v0x1daaee0_0 .net "state", 9 0, v0x1da70a0_0;  1 drivers
v0x1daaf80_0 .var/2u "stats1", 287 0;
v0x1dab020_0 .var/2u "strobe", 0 0;
v0x1dab0c0_0 .net "tb_match", 0 0, L_0x1db10a0;  1 drivers
v0x1dab190_0 .net "tb_mismatch", 0 0, L_0x1d366c0;  1 drivers
v0x1dab230_0 .net "wavedrom_enable", 0 0, v0x1da72e0_0;  1 drivers
v0x1dab300_0 .net "wavedrom_title", 511 0, v0x1da73a0_0;  1 drivers
L_0x1db0d40 .concat [ 1 1 10 0], L_0x1d3a3b0, L_0x1d39510, L_0x1dad9c0;
L_0x1db0de0 .concat [ 1 1 10 0], L_0x1d3a3b0, L_0x1d39510, L_0x1dad9c0;
L_0x1db0e80 .concat [ 1 1 10 0], L_0x1dae520, L_0x1dae280, L_0x1db0600;
L_0x1db0f90 .concat [ 1 1 10 0], L_0x1d3a3b0, L_0x1d39510, L_0x1dad9c0;
L_0x1db10a0 .cmp/eeq 12, L_0x1db0d40, L_0x1db1030;
S_0x1d49c00 .scope module, "good1" "reference_module" 3 171, 3 4 0, S_0x1d49a70;
 .timescale -12 -12;
    .port_info 0 /INPUT 1 "in";
    .port_info 1 /INPUT 10 "state";
    .port_info 2 /OUTPUT 10 "next_state";
    .port_info 3 /OUTPUT 1 "out1";
    .port_info 4 /OUTPUT 1 "out2";
L_0x1d39510 .functor OR 1, L_0x1dab450, L_0x1dab4f0, C4<0>, C4<0>;
L_0x1d3a3b0 .functor OR 1, L_0x1dab680, L_0x1dab720, C4<0>, C4<0>;
L_0x1d3ab00 .functor OR 1, L_0x1dabc00, L_0x1dabca0, C4<0>, C4<0>;
L_0x1d37510 .functor OR 1, L_0x1d3ab00, L_0x1dabe30, C4<0>, C4<0>;
L_0x1d575a0 .functor OR 1, L_0x1d37510, L_0x1dabfa0, C4<0>, C4<0>;
L_0x1d7d6e0 .functor AND 1, L_0x1dab8e0, L_0x1d575a0, C4<1>, C4<1>;
L_0x1dac380 .functor OR 1, L_0x1dac1d0, L_0x1dac270, C4<0>, C4<0>;
L_0x1dac530 .functor OR 1, L_0x1dac380, L_0x1dac490, C4<0>, C4<0>;
L_0x1dac690 .functor AND 1, v0x1da6d70_0, L_0x1dac530, C4<1>, C4<1>;
L_0x1dac310 .functor AND 1, v0x1da6d70_0, L_0x1dac750, C4<1>, C4<1>;
L_0x1dacbd0 .functor AND 1, v0x1da6d70_0, L_0x1dac920, C4<1>, C4<1>;
L_0x1dacd70 .functor AND 1, v0x1da6d70_0, L_0x1dacc40, C4<1>, C4<1>;
L_0x1dacf40 .functor AND 1, v0x1da6d70_0, L_0x1dacea0, C4<1>, C4<1>;
L_0x1dad170 .functor AND 1, v0x1da6d70_0, L_0x1dad030, C4<1>, C4<1>;
L_0x1dace30 .functor OR 1, L_0x1dad2e0, L_0x1dad380, C4<0>, C4<0>;
L_0x1dad5d0 .functor AND 1, v0x1da6d70_0, L_0x1dace30, C4<1>, C4<1>;
L_0x1dad880 .functor AND 1, L_0x1dad0d0, L_0x1dad720, C4<1>, C4<1>;
L_0x1dadf40 .functor AND 1, L_0x1dadd30, L_0x1dadea0, C4<1>, C4<1>;
v0x1d396c0_0 .net *"_ivl_1", 0 0, L_0x1dab450;  1 drivers
v0x1d3a4c0_0 .net *"_ivl_100", 0 0, L_0x1dadd30;  1 drivers
v0x1d3a560_0 .net *"_ivl_102", 0 0, L_0x1dadea0;  1 drivers
v0x1d3ad70_0 .net *"_ivl_104", 0 0, L_0x1dadf40;  1 drivers
v0x1d3ae10_0 .net *"_ivl_15", 0 0, L_0x1dab8e0;  1 drivers
v0x1d37660_0 .net *"_ivl_17", 4 0, L_0x1daba10;  1 drivers
v0x1d37700_0 .net *"_ivl_19", 0 0, L_0x1dabc00;  1 drivers
v0x1da3870_0 .net *"_ivl_21", 0 0, L_0x1dabca0;  1 drivers
v0x1da3950_0 .net *"_ivl_22", 0 0, L_0x1d3ab00;  1 drivers
v0x1da3a30_0 .net *"_ivl_25", 0 0, L_0x1dabe30;  1 drivers
v0x1da3b10_0 .net *"_ivl_26", 0 0, L_0x1d37510;  1 drivers
v0x1da3bf0_0 .net *"_ivl_29", 0 0, L_0x1dabfa0;  1 drivers
v0x1da3cd0_0 .net *"_ivl_3", 0 0, L_0x1dab4f0;  1 drivers
v0x1da3db0_0 .net *"_ivl_30", 0 0, L_0x1d575a0;  1 drivers
v0x1da3e90_0 .net *"_ivl_33", 0 0, L_0x1d7d6e0;  1 drivers
v0x1da3f50_0 .net *"_ivl_37", 0 0, L_0x1dac1d0;  1 drivers
v0x1da4030_0 .net *"_ivl_39", 0 0, L_0x1dac270;  1 drivers
v0x1da4110_0 .net *"_ivl_40", 0 0, L_0x1dac380;  1 drivers
v0x1da41f0_0 .net *"_ivl_43", 0 0, L_0x1dac490;  1 drivers
v0x1da42d0_0 .net *"_ivl_44", 0 0, L_0x1dac530;  1 drivers
v0x1da43b0_0 .net *"_ivl_47", 0 0, L_0x1dac690;  1 drivers
v0x1da4470_0 .net *"_ivl_51", 0 0, L_0x1dac750;  1 drivers
v0x1da4550_0 .net *"_ivl_53", 0 0, L_0x1dac310;  1 drivers
v0x1da4610_0 .net *"_ivl_57", 0 0, L_0x1dac920;  1 drivers
v0x1da46f0_0 .net *"_ivl_59", 0 0, L_0x1dacbd0;  1 drivers
v0x1da47b0_0 .net *"_ivl_63", 0 0, L_0x1dacc40;  1 drivers
v0x1da4890_0 .net *"_ivl_65", 0 0, L_0x1dacd70;  1 drivers
v0x1da4950_0 .net *"_ivl_69", 0 0, L_0x1dacea0;  1 drivers
v0x1da4a30_0 .net *"_ivl_7", 0 0, L_0x1dab680;  1 drivers
v0x1da4b10_0 .net *"_ivl_71", 0 0, L_0x1dacf40;  1 drivers
v0x1da4bd0_0 .net *"_ivl_75", 0 0, L_0x1dad030;  1 drivers
v0x1da4cb0_0 .net *"_ivl_77", 0 0, L_0x1dad170;  1 drivers
v0x1da4d70_0 .net *"_ivl_81", 0 0, L_0x1dad2e0;  1 drivers
v0x1da5060_0 .net *"_ivl_83", 0 0, L_0x1dad380;  1 drivers
v0x1da5140_0 .net *"_ivl_84", 0 0, L_0x1dace30;  1 drivers
v0x1da5220_0 .net *"_ivl_87", 0 0, L_0x1dad5d0;  1 drivers
v0x1da52e0_0 .net *"_ivl_9", 0 0, L_0x1dab720;  1 drivers
v0x1da53c0_0 .net *"_ivl_91", 0 0, L_0x1dad0d0;  1 drivers
v0x1da5480_0 .net *"_ivl_93", 0 0, L_0x1dad720;  1 drivers
v0x1da5560_0 .net *"_ivl_95", 0 0, L_0x1dad880;  1 drivers
v0x1da5620_0 .net "in", 0 0, v0x1da6d70_0;  alias, 1 drivers
v0x1da56e0_0 .net "next_state", 9 0, L_0x1dad9c0;  alias, 1 drivers
v0x1da57c0_0 .net "out1", 0 0, L_0x1d39510;  alias, 1 drivers
v0x1da5880_0 .net "out2", 0 0, L_0x1d3a3b0;  alias, 1 drivers
v0x1da5940_0 .net "state", 9 0, v0x1da70a0_0;  alias, 1 drivers
L_0x1dab450 .part v0x1da70a0_0, 8, 1;
L_0x1dab4f0 .part v0x1da70a0_0, 9, 1;
L_0x1dab680 .part v0x1da70a0_0, 7, 1;
L_0x1dab720 .part v0x1da70a0_0, 9, 1;
L_0x1dab8e0 .reduce/nor v0x1da6d70_0;
L_0x1daba10 .part v0x1da70a0_0, 0, 5;
L_0x1dabc00 .reduce/or L_0x1daba10;
L_0x1dabca0 .part v0x1da70a0_0, 7, 1;
L_0x1dabe30 .part v0x1da70a0_0, 8, 1;
L_0x1dabfa0 .part v0x1da70a0_0, 9, 1;
L_0x1dac1d0 .part v0x1da70a0_0, 0, 1;
L_0x1dac270 .part v0x1da70a0_0, 8, 1;
L_0x1dac490 .part v0x1da70a0_0, 9, 1;
L_0x1dac750 .part v0x1da70a0_0, 1, 1;
L_0x1dac920 .part v0x1da70a0_0, 2, 1;
L_0x1dacc40 .part v0x1da70a0_0, 3, 1;
L_0x1dacea0 .part v0x1da70a0_0, 4, 1;
L_0x1dad030 .part v0x1da70a0_0, 5, 1;
L_0x1dad2e0 .part v0x1da70a0_0, 6, 1;
L_0x1dad380 .part v0x1da70a0_0, 7, 1;
L_0x1dad0d0 .reduce/nor v0x1da6d70_0;
L_0x1dad720 .part v0x1da70a0_0, 5, 1;
LS_0x1dad9c0_0_0 .concat8 [ 1 1 1 1], L_0x1d7d6e0, L_0x1dac690, L_0x1dac310, L_0x1dacbd0;
LS_0x1dad9c0_0_4 .concat8 [ 1 1 1 1], L_0x1dacd70, L_0x1dacf40, L_0x1dad170, L_0x1dad5d0;
LS_0x1dad9c0_0_8 .concat8 [ 1 1 0 0], L_0x1dad880, L_0x1dadf40;
L_0x1dad9c0 .concat8 [ 4 4 2 0], LS_0x1dad9c0_0_0, LS_0x1dad9c0_0_4, LS_0x1dad9c0_0_8;
L_0x1dadd30 .reduce/nor v0x1da6d70_0;
L_0x1dadea0 .part v0x1da70a0_0, 6, 1;
S_0x1da5ac0 .scope module, "stim1" "stimulus_gen" 3 166, 3 29 0, S_0x1d49a70;
 .timescale -12 -12;
    .port_info 0 /INPUT 1 "clk";
    .port_info 1 /OUTPUT 1 "in";
    .port_info 2 /OUTPUT 10 "state";
    .port_info 3 /INPUT 1 "tb_match";
    .port_info 4 /INPUT 10 "next_state_ref";
    .port_info 5 /INPUT 10 "next_state_dut";
    .port_info 6 /OUTPUT 512 "wavedrom_title";
    .port_info 7 /OUTPUT 1 "wavedrom_enable";
v0x1da6af0_0 .net "clk", 0 0, v0x1daa940_0;  1 drivers
v0x1da6bd0_0 .var/2s "errored1", 31 0;
v0x1da6cb0_0 .var/2s "errored2", 31 0;
v0x1da6d70_0 .var "in", 0 0;
v0x1da6e10_0 .net "next_state_dut", 9 0, L_0x1db0600;  alias, 1 drivers
v0x1da6f20_0 .net "next_state_ref", 9 0, L_0x1dad9c0;  alias, 1 drivers
v0x1da6fe0_0 .var/2s "onehot_error", 31 0;
v0x1da70a0_0 .var "state", 9 0;
v0x1da7160_0 .var "state_error", 9 0;
v0x1da7220_0 .net "tb_match", 0 0, L_0x1db10a0;  alias, 1 drivers
v0x1da72e0_0 .var "wavedrom_enable", 0 0;
v0x1da73a0_0 .var "wavedrom_title", 511 0;
E_0x1d454f0 .event negedge, v0x1da6af0_0;
E_0x1d45740 .event posedge, v0x1da6af0_0;
S_0x1da5d00 .scope begin, "$ivl_for_loop0" "$ivl_for_loop0" 3 69, 3 69 0, S_0x1da5ac0;
 .timescale -12 -12;
v0x1da5f40_0 .var/2s "i", 31 0;
E_0x1d44dc0/0 .event negedge, v0x1da6af0_0;
E_0x1d44dc0/1 .event posedge, v0x1da6af0_0;
E_0x1d44dc0 .event/or E_0x1d44dc0/0, E_0x1d44dc0/1;
S_0x1da6040 .scope begin, "$ivl_for_loop1" "$ivl_for_loop1" 3 74, 3 74 0, S_0x1da5ac0;
 .timescale -12 -12;
v0x1da6240_0 .var/2s "i", 31 0;
S_0x1da6320 .scope begin, "$ivl_for_loop2" "$ivl_for_loop2" 3 114, 3 114 0, S_0x1da5ac0;
 .timescale -12 -12;
v0x1da6500_0 .var/2s "i", 31 0;
S_0x1da65e0 .scope task, "wavedrom_start" "wavedrom_start" 3 45, 3 45 0, S_0x1da5ac0;
 .timescale -12 -12;
v0x1da67c0_0 .var "title", 511 0;
TD_tb.stim1.wavedrom_start ;
    %end;
S_0x1da68c0 .scope task, "wavedrom_stop" "wavedrom_stop" 3 48, 3 48 0, S_0x1da5ac0;
 .timescale -12 -12;
TD_tb.stim1.wavedrom_stop ;
    %delay 1, 0;
    %end;
S_0x1da7580 .scope module, "top_module1" "top_module" 3 178, 4 1 0, S_0x1d49a70;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "in";
    .port_info 1 /INPUT 10 "state";
    .port_info 2 /OUTPUT 10 "next_state";
    .port_info 3 /OUTPUT 1 "out1";
    .port_info 4 /OUTPUT 1 "out2";
L_0x1dae280 .functor OR 1, L_0x1dae140, L_0x1dae1e0, C4<0>, C4<0>;
L_0x1dae520 .functor OR 1, L_0x1dae3e0, L_0x1dae480, C4<0>, C4<0>;
L_0x1dae680 .functor NOT 1, v0x1da6d70_0, C4<0>, C4<0>, C4<0>;
L_0x1daed30 .functor AND 1, L_0x1dae680, L_0x1daebe0, C4<1>, C4<1>;
L_0x1daf3b0 .functor OR 1, L_0x1daedf0, L_0x1daf2a0, C4<0>, C4<0>;
L_0x1daf560 .functor OR 1, L_0x1daf3b0, L_0x1daf4c0, C4<0>, C4<0>;
L_0x1daf670 .functor AND 1, v0x1da6d70_0, L_0x1daf560, C4<1>, C4<1>;
L_0x1daf340 .functor AND 1, v0x1da6d70_0, L_0x1daf730, C4<1>, C4<1>;
L_0x1daf990 .functor AND 1, v0x1da6d70_0, L_0x1daf8f0, C4<1>, C4<1>;
L_0x1dafb80 .functor AND 1, v0x1da6d70_0, L_0x1dafa50, C4<1>, C4<1>;
L_0x1dafd40 .functor AND 1, v0x1da6d70_0, L_0x1dafca0, C4<1>, C4<1>;
L_0x1dafef0 .functor AND 1, v0x1da6d70_0, L_0x1dafdb0, C4<1>, C4<1>;
L_0x1db0210 .functor OR 1, L_0x1db0020, L_0x1db00c0, C4<0>, C4<0>;
L_0x1db0320 .functor AND 1, v0x1da6d70_0, L_0x1db0210, C4<1>, C4<1>;
L_0x1daffb0 .functor NOT 1, v0x1da6d70_0, C4<0>, C4<0>, C4<0>;
L_0x1db0460 .functor AND 1, L_0x1daffb0, L_0x1dafe50, C4<1>, C4<1>;
L_0x1db0a30 .functor NOT 1, v0x1da6d70_0, C4<0>, C4<0>, C4<0>;
L_0x1db0b40 .functor AND 1, L_0x1db0a30, L_0x1db0aa0, C4<1>, C4<1>;
v0x1da77f0_0 .net *"_ivl_1", 0 0, L_0x1dae140;  1 drivers
v0x1da78d0_0 .net *"_ivl_14", 0 0, L_0x1dae680;  1 drivers
v0x1da79b0_0 .net *"_ivl_17", 0 0, L_0x1dae6f0;  1 drivers
v0x1da7aa0_0 .net *"_ivl_19", 0 0, L_0x1dae790;  1 drivers
v0x1da7b80_0 .net *"_ivl_21", 0 0, L_0x1dae870;  1 drivers
v0x1da7cb0_0 .net *"_ivl_23", 6 0, L_0x1dae910;  1 drivers
v0x1da7d90_0 .net *"_ivl_24", 9 0, L_0x1daea00;  1 drivers
v0x1da7e70_0 .net *"_ivl_27", 0 0, L_0x1daebe0;  1 drivers
v0x1da7f30_0 .net *"_ivl_28", 0 0, L_0x1daed30;  1 drivers
v0x1da80a0_0 .net *"_ivl_3", 0 0, L_0x1dae1e0;  1 drivers
v0x1da8180_0 .net *"_ivl_33", 0 0, L_0x1daedf0;  1 drivers
v0x1da8260_0 .net *"_ivl_35", 0 0, L_0x1daf2a0;  1 drivers
v0x1da8340_0 .net *"_ivl_36", 0 0, L_0x1daf3b0;  1 drivers
v0x1da8420_0 .net *"_ivl_39", 0 0, L_0x1daf4c0;  1 drivers
v0x1da8500_0 .net *"_ivl_40", 0 0, L_0x1daf560;  1 drivers
v0x1da85e0_0 .net *"_ivl_42", 0 0, L_0x1daf670;  1 drivers
v0x1da86c0_0 .net *"_ivl_47", 0 0, L_0x1daf730;  1 drivers
v0x1da88b0_0 .net *"_ivl_48", 0 0, L_0x1daf340;  1 drivers
v0x1da8990_0 .net *"_ivl_53", 0 0, L_0x1daf8f0;  1 drivers
v0x1da8a70_0 .net *"_ivl_54", 0 0, L_0x1daf990;  1 drivers
v0x1da8b50_0 .net *"_ivl_59", 0 0, L_0x1dafa50;  1 drivers
v0x1da8c30_0 .net *"_ivl_60", 0 0, L_0x1dafb80;  1 drivers
v0x1da8d10_0 .net *"_ivl_65", 0 0, L_0x1dafca0;  1 drivers
v0x1da8df0_0 .net *"_ivl_66", 0 0, L_0x1dafd40;  1 drivers
v0x1da8ed0_0 .net *"_ivl_7", 0 0, L_0x1dae3e0;  1 drivers
v0x1da8fb0_0 .net *"_ivl_71", 0 0, L_0x1dafdb0;  1 drivers
v0x1da9090_0 .net *"_ivl_72", 0 0, L_0x1dafef0;  1 drivers
v0x1da9170_0 .net *"_ivl_77", 0 0, L_0x1db0020;  1 drivers
v0x1da9250_0 .net *"_ivl_79", 0 0, L_0x1db00c0;  1 drivers
v0x1da9330_0 .net *"_ivl_80", 0 0, L_0x1db0210;  1 drivers
v0x1da9410_0 .net *"_ivl_82", 0 0, L_0x1db0320;  1 drivers
v0x1da94f0_0 .net *"_ivl_86", 0 0, L_0x1daffb0;  1 drivers
v0x1da95d0_0 .net *"_ivl_89", 0 0, L_0x1dafe50;  1 drivers
v0x1da98c0_0 .net *"_ivl_9", 0 0, L_0x1dae480;  1 drivers
v0x1da99a0_0 .net *"_ivl_90", 0 0, L_0x1db0460;  1 drivers
v0x1da9a80_0 .net *"_ivl_95", 0 0, L_0x1db0a30;  1 drivers
v0x1da9b60_0 .net *"_ivl_98", 0 0, L_0x1db0aa0;  1 drivers
v0x1da9c40_0 .net *"_ivl_99", 0 0, L_0x1db0b40;  1 drivers
v0x1da9d20_0 .net "in", 0 0, v0x1da6d70_0;  alias, 1 drivers
v0x1da9dc0_0 .net "next_state", 9 0, L_0x1db0600;  alias, 1 drivers
v0x1da9e80_0 .net "out1", 0 0, L_0x1dae280;  alias, 1 drivers
v0x1da9f20_0 .net "out2", 0 0, L_0x1dae520;  alias, 1 drivers
v0x1da9fe0_0 .net "state", 9 0, v0x1da70a0_0;  alias, 1 drivers
L_0x1dae140 .part v0x1da70a0_0, 8, 1;
L_0x1dae1e0 .part v0x1da70a0_0, 9, 1;
L_0x1dae3e0 .part v0x1da70a0_0, 7, 1;
L_0x1dae480 .part v0x1da70a0_0, 9, 1;
L_0x1dae6f0 .part v0x1da70a0_0, 9, 1;
L_0x1dae790 .part v0x1da70a0_0, 8, 1;
L_0x1dae870 .part v0x1da70a0_0, 7, 1;
L_0x1dae910 .part v0x1da70a0_0, 0, 7;
L_0x1daea00 .concat [ 7 1 1 1], L_0x1dae910, L_0x1dae870, L_0x1dae790, L_0x1dae6f0;
L_0x1daebe0 .reduce/or L_0x1daea00;
L_0x1daedf0 .part v0x1da70a0_0, 9, 1;
L_0x1daf2a0 .part v0x1da70a0_0, 8, 1;
L_0x1daf4c0 .part v0x1da70a0_0, 0, 1;
L_0x1daf730 .part v0x1da70a0_0, 1, 1;
L_0x1daf8f0 .part v0x1da70a0_0, 2, 1;
L_0x1dafa50 .part v0x1da70a0_0, 3, 1;
L_0x1dafca0 .part v0x1da70a0_0, 4, 1;
L_0x1dafdb0 .part v0x1da70a0_0, 5, 1;
L_0x1db0020 .part v0x1da70a0_0, 6, 1;
L_0x1db00c0 .part v0x1da70a0_0, 7, 1;
L_0x1dafe50 .part v0x1da70a0_0, 5, 1;
LS_0x1db0600_0_0 .concat8 [ 1 1 1 1], L_0x1daed30, L_0x1daf670, L_0x1daf340, L_0x1daf990;
LS_0x1db0600_0_4 .concat8 [ 1 1 1 1], L_0x1dafb80, L_0x1dafd40, L_0x1dafef0, L_0x1db0320;
LS_0x1db0600_0_8 .concat8 [ 1 1 0 0], L_0x1db0460, L_0x1db0b40;
L_0x1db0600 .concat8 [ 4 4 2 0], LS_0x1db0600_0_0, LS_0x1db0600_0_4, LS_0x1db0600_0_8;
L_0x1db0aa0 .part v0x1da70a0_0, 6, 1;
S_0x1daa190 .scope task, "wait_for_end_of_timestep" "wait_for_end_of_timestep" 3 187, 3 187 0, S_0x1d49a70;
 .timescale -12 -12;
E_0x1d2ca20 .event anyedge, v0x1dab020_0;
TD_tb.wait_for_end_of_timestep ;
    %pushi/vec4 5, 0, 32;
T_2.0 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_2.1, 5;
    %jmp/1 T_2.1, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %load/vec4 v0x1dab020_0;
    %nor/r;
    %assign/vec4 v0x1dab020_0, 0;
    %wait E_0x1d2ca20;
    %jmp T_2.0;
T_2.1 ;
    %pop/vec4 1;
    %end;
    .scope S_0x1da5ac0;
T_3 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x1da6bd0_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x1da6cb0_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x1da6fe0_0, 0, 32;
    %pushi/vec4 0, 0, 10;
    %store/vec4 v0x1da7160_0, 0, 10;
    %end;
    .thread T_3, $init;
    .scope S_0x1da5ac0;
T_4 ;
    %pushi/vec4 2, 0, 32;
T_4.0 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_4.1, 5;
    %jmp/1 T_4.1, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_0x1d45740;
    %jmp T_4.0;
T_4.1 ;
    %pop/vec4 1;
T_4.2 ;
    %wait E_0x1d44dc0;
    %load/vec4 v0x1da7160_0;
    %load/vec4 v0x1da6f20_0;
    %load/vec4 v0x1da6e10_0;
    %xor;
    %or;
    %assign/vec4 v0x1da7160_0, 0;
    %jmp T_4.2;
T_4.3 ;
    %end;
    .thread T_4;
    .scope S_0x1da5ac0;
T_5 ;
    %pushi/vec4 0, 0, 10;
    %assign/vec4 v0x1da70a0_0, 0;
    %wait E_0x1d454f0;
    %fork t_1, S_0x1da5d00;
    %jmp t_0;
    .scope S_0x1da5d00;
t_1 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x1da5f40_0, 0, 32;
T_5.0 ; Top of for-loop 
    %load/vec4 v0x1da5f40_0;
    %cmpi/s 10, 0, 32;
    %jmp/0xz T_5.1, 5;
    %wait E_0x1d44dc0;
    %pushi/vec4 1, 0, 10;
    %load/vec4 v0x1da5f40_0;
    %ix/vec4 4;
    %shiftl 4;
    %assign/vec4 v0x1da70a0_0, 0;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0x1da6d70_0, 0;
T_5.2 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x1da5f40_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x1da5f40_0, 0, 32;
    %jmp T_5.0;
T_5.1 ; for-loop exit label
    %end;
    .scope S_0x1da5ac0;
t_0 %join;
    %fork t_3, S_0x1da6040;
    %jmp t_2;
    .scope S_0x1da6040;
t_3 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x1da6240_0, 0, 32;
T_5.3 ; Top of for-loop 
    %load/vec4 v0x1da6240_0;
    %cmpi/s 10, 0, 32;
    %jmp/0xz T_5.4, 5;
    %wait E_0x1d44dc0;
    %pushi/vec4 1, 0, 10;
    %load/vec4 v0x1da6240_0;
    %ix/vec4 4;
    %shiftl 4;
    %assign/vec4 v0x1da70a0_0, 0;
    %pushi/vec4 1, 0, 1;
    %assign/vec4 v0x1da6d70_0, 0;
T_5.5 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x1da6240_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x1da6240_0, 0, 32;
    %jmp T_5.3;
T_5.4 ; for-loop exit label
    %end;
    .scope S_0x1da5ac0;
t_2 %join;
    %wait E_0x1d454f0;
    %fork TD_tb.stim1.wavedrom_stop, S_0x1da68c0;
    %join;
    %pushi/vec4 200, 0, 32;
T_5.6 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_5.7, 5;
    %jmp/1 T_5.7, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_0x1d44dc0;
    %pushi/vec4 1, 0, 10;
    %vpi_func 3 83 "$random" 32 {0 0 0};
    %pushi/vec4 10, 0, 32;
    %mod;
    %ix/vec4 4;
    %shiftl 4;
    %assign/vec4 v0x1da70a0_0, 0;
    %vpi_func 3 84 "$random" 32 {0 0 0};
    %pad/s 1;
    %assign/vec4 v0x1da6d70_0, 0;
    %load/vec4 v0x1da7220_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.8, 8;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x1da6fe0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x1da6fe0_0, 0, 32;
T_5.8 ;
    %jmp T_5.6;
T_5.7 ;
    %pop/vec4 1;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x1da6bd0_0, 0, 32;
    %pushi/vec4 400, 0, 32;
T_5.10 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_5.11, 5;
    %jmp/1 T_5.11, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_0x1d44dc0;
    %pushi/vec4 1, 0, 10;
    %vpi_func 3 91 "$random" 32 {0 0 0};
    %pushi/vec4 10, 0, 32;
    %mod;
    %ix/vec4 4;
    %shiftl 4;
    %pushi/vec4 1, 0, 10;
    %vpi_func 3 91 "$random" 32 {0 0 0};
    %pushi/vec4 10, 0, 32;
    %mod;
    %ix/vec4 4;
    %shiftl 4;
    %or;
    %assign/vec4 v0x1da70a0_0, 0;
    %vpi_func 3 92 "$random" 32 {0 0 0};
    %pad/s 1;
    %assign/vec4 v0x1da6d70_0, 0;
    %load/vec4 v0x1da7220_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.12, 8;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x1da6bd0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x1da6bd0_0, 0, 32;
T_5.12 ;
    %jmp T_5.10;
T_5.11 ;
    %pop/vec4 1;
    %load/vec4 v0x1da6fe0_0;
    %nor/r;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_5.16, 9;
    %load/vec4 v0x1da6bd0_0;
    %pushi/vec4 0, 0, 32;
    %cmp/ne;
    %flag_get/vec4 4;
    %and;
T_5.16;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.14, 8;
    %vpi_call/w 3 98 "$display", "Hint: Your circuit passed when given only one-hot inputs, but not with two-hot inputs." {0 0 0};
T_5.14 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x1da6cb0_0, 0, 32;
    %pushi/vec4 800, 0, 32;
T_5.17 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_5.18, 5;
    %jmp/1 T_5.18, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_0x1d44dc0;
    %vpi_func 3 103 "$random" 32 {0 0 0};
    %pad/s 10;
    %assign/vec4 v0x1da70a0_0, 0;
    %vpi_func 3 104 "$random" 32 {0 0 0};
    %pad/s 1;
    %assign/vec4 v0x1da6d70_0, 0;
    %load/vec4 v0x1da7220_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.19, 8;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x1da6cb0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x1da6cb0_0, 0, 32;
T_5.19 ;
    %jmp T_5.17;
T_5.18 ;
    %pop/vec4 1;
    %load/vec4 v0x1da6fe0_0;
    %nor/r;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_5.23, 9;
    %load/vec4 v0x1da6cb0_0;
    %pushi/vec4 0, 0, 32;
    %cmp/ne;
    %flag_get/vec4 4;
    %and;
T_5.23;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.21, 8;
    %vpi_call/w 3 109 "$display", "Hint: Your circuit passed when given only one-hot inputs, but not with random inputs." {0 0 0};
T_5.21 ;
    %load/vec4 v0x1da6fe0_0;
    %nor/r;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_5.26, 9;
    %load/vec4 v0x1da6bd0_0;
    %cmpi/ne 0, 0, 32;
    %flag_get/vec4 4;
    %jmp/1 T_5.27, 4;
    %load/vec4 v0x1da6cb0_0;
    %pushi/vec4 0, 0, 32;
    %cmp/ne;
    %flag_get/vec4 4;
    %or;
T_5.27;
    %and;
T_5.26;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.24, 8;
    %vpi_call/w 3 112 "$display", "Hint: Are you doing something more complicated than deriving state transition equations by inspection?\012" {0 0 0};
T_5.24 ;
    %fork t_5, S_0x1da6320;
    %jmp t_4;
    .scope S_0x1da6320;
t_5 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x1da6500_0, 0, 32;
T_5.28 ; Top of for-loop 
    %load/vec4 v0x1da6500_0;
    %cmpi/u 10, 0, 32;
    %jmp/0xz T_5.29, 5;
    %load/vec4 v0x1da7160_0;
    %load/vec4 v0x1da6500_0;
    %part/s 1;
    %cmpi/e 0, 0, 1;
    %flag_mov 8, 6;
    %jmp/0 T_5.31, 8;
    %pushi/vec4 25455, 0, 32; draw_string_vec4
    %pushi/vec4 1920099683, 0, 32; draw_string_vec4
    %concat/vec4; draw_string_vec4
    %pushi/vec4 116, 0, 8; draw_string_vec4
    %concat/vec4; draw_string_vec4
    %jmp/1 T_5.32, 8;
T_5.31 ; End of true expr.
    %pushi/vec4 1768842095, 0, 32; draw_string_vec4
    %pushi/vec4 1920099683, 0, 32; draw_string_vec4
    %concat/vec4; draw_string_vec4
    %pushi/vec4 116, 0, 8; draw_string_vec4
    %concat/vec4; draw_string_vec4
    %jmp/0 T_5.32, 8;
 ; End of false expr.
    %blend;
T_5.32;
    %vpi_call/w 3 115 "$display", "Hint: next_state[%0d] is %s.", v0x1da6500_0, S<0,vec4,u72> {1 0 0};
T_5.30 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x1da6500_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x1da6500_0, 0, 32;
    %jmp T_5.28;
T_5.29 ; for-loop exit label
    %end;
    .scope S_0x1da5ac0;
t_4 %join;
    %delay 1, 0;
    %vpi_call/w 3 117 "$finish" {0 0 0};
    %end;
    .thread T_5;
    .scope S_0x1d49a70;
T_6 ;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x1daa940_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x1dab020_0, 0, 1;
    %end;
    .thread T_6, $init;
    .scope S_0x1d49a70;
T_7 ;
T_7.0 ;
    %delay 5, 0;
    %load/vec4 v0x1daa940_0;
    %inv;
    %store/vec4 v0x1daa940_0, 0, 1;
    %jmp T_7.0;
T_7.1 ;
    %end;
    .thread T_7;
    .scope S_0x1d49a70;
T_8 ;
    %vpi_call/w 3 158 "$dumpfile", "wave.vcd" {0 0 0};
    %vpi_call/w 3 159 "$dumpvars", 32'sb00000000000000000000000000000001, v0x1da6af0_0, v0x1dab190_0, v0x1daa9e0_0, v0x1daaee0_0, v0x1daab20_0, v0x1daaa80_0, v0x1daacd0_0, v0x1daac30_0, v0x1daae10_0, v0x1daad70_0 {0 0 0};
    %end;
    .thread T_8;
    .scope S_0x1d49a70;
T_9 ;
    %load/vec4 v0x1daaf80_0;
    %parti/u 32, 192, 32;
    %cmpi/ne 0, 0, 32;
    %jmp/0xz  T_9.0, 4;
    %load/vec4 v0x1daaf80_0;
    %parti/u 32, 192, 32;
    %load/vec4 v0x1daaf80_0;
    %parti/u 32, 160, 32;
    %vpi_call/w 3 196 "$display", "Hint: Output '%s' has %0d mismatches. First mismatch occurred at time %0d.", "next_state", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %jmp T_9.1;
T_9.0 ;
    %vpi_call/w 3 197 "$display", "Hint: Output '%s' has no mismatches.", "next_state" {0 0 0};
T_9.1 ;
    %load/vec4 v0x1daaf80_0;
    %parti/u 32, 128, 32;
    %cmpi/ne 0, 0, 32;
    %jmp/0xz  T_9.2, 4;
    %load/vec4 v0x1daaf80_0;
    %parti/u 32, 128, 32;
    %load/vec4 v0x1daaf80_0;
    %parti/u 32, 96, 32;
    %vpi_call/w 3 198 "$display", "Hint: Output '%s' has %0d mismatches. First mismatch occurred at time %0d.", "out1", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %jmp T_9.3;
T_9.2 ;
    %vpi_call/w 3 199 "$display", "Hint: Output '%s' has no mismatches.", "out1" {0 0 0};
T_9.3 ;
    %load/vec4 v0x1daaf80_0;
    %parti/u 32, 64, 32;
    %cmpi/ne 0, 0, 32;
    %jmp/0xz  T_9.4, 4;
    %load/vec4 v0x1daaf80_0;
    %parti/u 32, 64, 32;
    %load/vec4 v0x1daaf80_0;
    %parti/u 32, 32, 32;
    %vpi_call/w 3 200 "$display", "Hint: Output '%s' has %0d mismatches. First mismatch occurred at time %0d.", "out2", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %jmp T_9.5;
T_9.4 ;
    %vpi_call/w 3 201 "$display", "Hint: Output '%s' has no mismatches.", "out2" {0 0 0};
T_9.5 ;
    %load/vec4 v0x1daaf80_0;
    %parti/u 32, 256, 32;
    %load/vec4 v0x1daaf80_0;
    %parti/u 32, 0, 32;
    %vpi_call/w 3 203 "$display", "Hint: Total mismatched samples is %1d out of %1d samples\012", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %vpi_call/w 3 204 "$display", "Simulation finished at %0d ps", $time {0 0 0};
    %load/vec4 v0x1daaf80_0;
    %parti/u 32, 256, 32;
    %load/vec4 v0x1daaf80_0;
    %parti/u 32, 0, 32;
    %vpi_call/w 3 205 "$display", "Mismatches: %1d in %1d samples", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %end;
    .thread T_9, $final;
    .scope S_0x1d49a70;
T_10 ;
    %wait E_0x1d44dc0;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x1daaf80_0;
    %pushi/vec4 0, 0, 32;
    %part/u 32;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x1daaf80_0, 4, 32;
    %load/vec4 v0x1dab0c0_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_10.0, 8;
    %load/vec4 v0x1daaf80_0;
    %parti/u 32, 256, 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_10.2, 4;
    %vpi_func 3 216 "$time" 64 {0 0 0};
    %cast2;
    %pad/u 32;
    %ix/load 4, 224, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x1daaf80_0, 4, 32;
T_10.2 ;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x1daaf80_0;
    %pushi/vec4 256, 0, 32;
    %part/u 32;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %ix/load 4, 256, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x1daaf80_0, 4, 32;
T_10.0 ;
    %load/vec4 v0x1daab20_0;
    %load/vec4 v0x1daab20_0;
    %load/vec4 v0x1daaa80_0;
    %xor;
    %load/vec4 v0x1daab20_0;
    %xor;
    %cmp/ne;
    %jmp/0xz  T_10.4, 6;
    %load/vec4 v0x1daaf80_0;
    %parti/u 32, 192, 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_10.6, 4;
    %vpi_func 3 220 "$time" 64 {0 0 0};
    %cast2;
    %pad/u 32;
    %ix/load 4, 160, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x1daaf80_0, 4, 32;
T_10.6 ;
    %load/vec4 v0x1daaf80_0;
    %parti/u 32, 192, 32;
    %addi 1, 0, 32;
    %ix/load 4, 192, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x1daaf80_0, 4, 32;
T_10.4 ;
    %load/vec4 v0x1daacd0_0;
    %load/vec4 v0x1daacd0_0;
    %load/vec4 v0x1daac30_0;
    %xor;
    %load/vec4 v0x1daacd0_0;
    %xor;
    %cmp/ne;
    %jmp/0xz  T_10.8, 6;
    %load/vec4 v0x1daaf80_0;
    %parti/u 32, 128, 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_10.10, 4;
    %vpi_func 3 223 "$time" 64 {0 0 0};
    %cast2;
    %pad/u 32;
    %ix/load 4, 96, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x1daaf80_0, 4, 32;
T_10.10 ;
    %load/vec4 v0x1daaf80_0;
    %parti/u 32, 128, 32;
    %addi 1, 0, 32;
    %ix/load 4, 128, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x1daaf80_0, 4, 32;
T_10.8 ;
    %load/vec4 v0x1daae10_0;
    %load/vec4 v0x1daae10_0;
    %load/vec4 v0x1daad70_0;
    %xor;
    %load/vec4 v0x1daae10_0;
    %xor;
    %cmp/ne;
    %jmp/0xz  T_10.12, 6;
    %load/vec4 v0x1daaf80_0;
    %parti/u 32, 64, 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_10.14, 4;
    %vpi_func 3 226 "$time" 64 {0 0 0};
    %cast2;
    %pad/u 32;
    %ix/load 4, 32, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x1daaf80_0, 4, 32;
T_10.14 ;
    %load/vec4 v0x1daaf80_0;
    %parti/u 32, 64, 32;
    %addi 1, 0, 32;
    %ix/load 4, 64, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x1daaf80_0, 4, 32;
T_10.12 ;
    %jmp T_10;
    .thread T_10;
# The file index is used to find the file name in the following table.
:file_names 5;
    "N/A";
    "<interactive>";
    "-";
    "/home/jmb9986/AutoChip/autochip_scripts/../verilogeval_prompts_tbs/ve_testbenches_machine/fsm_onehot/fsm_onehot_tb.sv";
    "/home/jmb9986/AutoChip/autochip_scripts/outputs/gpt3.5_turbo_16k/machine/fsm_onehot/iter1/response3/top_module.sv";
