module top_module (
	input [3:0] a, 
	input [3:0] b, 
	input [3:0] c, 
	input [3:0] d,
	input [3:0] e,
	output reg [3:0] q
);
	always @(a, b, c, d, e) begin
		case({c[0], a[0], b[0]})
			3'b000 : q[0] = b[0];
			3'b001 : q[0] = e[0];
			3'b010 : q[0] = a[0];
			3'b011 : q[0] = d[0];
			3'b100 : q[0] = f[0];
			3'b101 : q[0] = f[0];
			3'b110 : q[0] = f[0];
			3'b111 : q[0] = f[0];
		endcase
		
		case({c[1], a[1], b[1]})
			3'b000 : q[1] = b[1];
			3'b001 : q[1] = e[1];
			3'b010 : q[1] = a[1];
			3'b011 : q[1] = d[1];
			3'b100 : q[1] = f[1];
			3'b101 : q[1] = f[1];
			3'b110 : q[1] = f[1];
			3'b111 : q[1] = f[1];
		endcase
		
		case({c[2], a[2], b[2]})
			3'b000 : q[2] = b[2];
			3'b001 : q[2] = e[2];
			3'b010 : q[2] = a[2];
			3'b011 : q[2] = d[2];
			3'b100 : q[2] = f[2];
			3'b101 : q[2] = f[2];
			3'b110 : q[2] = f[2];
			3'b111 : q[2] = f[2];
		endcase
		
		case({c[3], a[3], b[3]})
			3'b000 : q[3] = b[3];
			3'b001 : q[3] = e[3];
			3'b010 : q[3] = a[3];
			3'b011 : q[3] = d[3];
			3'b100 : q[3] = f[3];
			3'b101 : q[3] = f[3];
			3'b110 : q[3] = f[3];
			3'b111 : q[3] = f[3];
		endcase
	end
endmodule
