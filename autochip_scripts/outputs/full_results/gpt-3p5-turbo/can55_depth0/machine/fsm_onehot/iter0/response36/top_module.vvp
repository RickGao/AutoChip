#! /usr/local/bin/vvp
:ivl_version "13.0 (devel)" "(s20221226-331-g77d7f0b8f)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision - 12;
:vpi_module "/usr/local/lib/ivl/system.vpi";
:vpi_module "/usr/local/lib/ivl/vhdl_sys.vpi";
:vpi_module "/usr/local/lib/ivl/vhdl_textio.vpi";
:vpi_module "/usr/local/lib/ivl/v2005_math.vpi";
:vpi_module "/usr/local/lib/ivl/va_math.vpi";
:vpi_module "/usr/local/lib/ivl/v2009.vpi";
S_0x127d230 .scope package, "$unit" "$unit" 2 1;
 .timescale 0 0;
S_0x1291310 .scope module, "tb" "tb" 3 122;
 .timescale -12 -12;
L_0x127d6c0 .functor NOT 1, L_0x12fdcb0, C4<0>, C4<0>, C4<0>;
L_0x12fdb30 .functor XOR 12, L_0x12fd9f0, L_0x12fda90, C4<000000000000>, C4<000000000000>;
L_0x12fdc40 .functor XOR 12, L_0x12fdb30, L_0x12fdba0, C4<000000000000>, C4<000000000000>;
v0x12f60d0_0 .net *"_ivl_10", 11 0, L_0x12fdba0;  1 drivers
v0x12f61d0_0 .net *"_ivl_12", 11 0, L_0x12fdc40;  1 drivers
v0x12f62b0_0 .net *"_ivl_2", 11 0, L_0x12fd950;  1 drivers
v0x12f6370_0 .net *"_ivl_4", 11 0, L_0x12fd9f0;  1 drivers
v0x12f6450_0 .net *"_ivl_6", 11 0, L_0x12fda90;  1 drivers
v0x12f6580_0 .net *"_ivl_8", 11 0, L_0x12fdb30;  1 drivers
v0x12f6660_0 .var "clk", 0 0;
v0x12f6700_0 .net "in", 0 0, v0x12f1f10_0;  1 drivers
v0x12f67a0_0 .net "next_state_dut", 9 0, L_0x12fd1b0;  1 drivers
v0x12f6840_0 .net "next_state_ref", 9 0, L_0x12f96e0;  1 drivers
v0x12f6950_0 .net "out1_dut", 0 0, L_0x12f9fa0;  1 drivers
v0x12f69f0_0 .net "out1_ref", 0 0, L_0x1280510;  1 drivers
v0x12f6a90_0 .net "out2_dut", 0 0, L_0x12fa240;  1 drivers
v0x12f6b30_0 .net "out2_ref", 0 0, L_0x12813b0;  1 drivers
v0x12f6c00_0 .net "state", 9 0, v0x12f2240_0;  1 drivers
v0x12f6ca0_0 .var/2u "stats1", 287 0;
v0x12f6d40_0 .var/2u "strobe", 0 0;
v0x12f6de0_0 .net "tb_match", 0 0, L_0x12fdcb0;  1 drivers
v0x12f6eb0_0 .net "tb_mismatch", 0 0, L_0x127d6c0;  1 drivers
v0x12f6f50_0 .net "wavedrom_enable", 0 0, v0x12f2480_0;  1 drivers
v0x12f7020_0 .net "wavedrom_title", 511 0, v0x12f2540_0;  1 drivers
L_0x12fd950 .concat [ 1 1 10 0], L_0x12813b0, L_0x1280510, L_0x12f96e0;
L_0x12fd9f0 .concat [ 1 1 10 0], L_0x12813b0, L_0x1280510, L_0x12f96e0;
L_0x12fda90 .concat [ 1 1 10 0], L_0x12fa240, L_0x12f9fa0, L_0x12fd1b0;
L_0x12fdba0 .concat [ 1 1 10 0], L_0x12813b0, L_0x1280510, L_0x12f96e0;
L_0x12fdcb0 .cmp/eeq 12, L_0x12fd950, L_0x12fdc40;
S_0x12914a0 .scope module, "good1" "reference_module" 3 171, 3 4 0, S_0x1291310;
 .timescale -12 -12;
    .port_info 0 /INPUT 1 "in";
    .port_info 1 /INPUT 10 "state";
    .port_info 2 /OUTPUT 10 "next_state";
    .port_info 3 /OUTPUT 1 "out1";
    .port_info 4 /OUTPUT 1 "out2";
L_0x1280510 .functor OR 1, L_0x12f7170, L_0x12f7210, C4<0>, C4<0>;
L_0x12813b0 .functor OR 1, L_0x12f73a0, L_0x12f7440, C4<0>, C4<0>;
L_0x1281b00 .functor OR 1, L_0x12f7920, L_0x12f79c0, C4<0>, C4<0>;
L_0x127e510 .functor OR 1, L_0x1281b00, L_0x12f7b50, C4<0>, C4<0>;
L_0x129ee40 .functor OR 1, L_0x127e510, L_0x12f7cc0, C4<0>, C4<0>;
L_0x12c8880 .functor AND 1, L_0x12f7600, L_0x129ee40, C4<1>, C4<1>;
L_0x12f80a0 .functor OR 1, L_0x12f7ef0, L_0x12f7f90, C4<0>, C4<0>;
L_0x12f8250 .functor OR 1, L_0x12f80a0, L_0x12f81b0, C4<0>, C4<0>;
L_0x12f83b0 .functor AND 1, v0x12f1f10_0, L_0x12f8250, C4<1>, C4<1>;
L_0x12f8030 .functor AND 1, v0x12f1f10_0, L_0x12f8470, C4<1>, C4<1>;
L_0x12f88f0 .functor AND 1, v0x12f1f10_0, L_0x12f8640, C4<1>, C4<1>;
L_0x12f8a90 .functor AND 1, v0x12f1f10_0, L_0x12f8960, C4<1>, C4<1>;
L_0x12f8c60 .functor AND 1, v0x12f1f10_0, L_0x12f8bc0, C4<1>, C4<1>;
L_0x12f8e90 .functor AND 1, v0x12f1f10_0, L_0x12f8d50, C4<1>, C4<1>;
L_0x12f8b50 .functor OR 1, L_0x12f9000, L_0x12f90a0, C4<0>, C4<0>;
L_0x12f92f0 .functor AND 1, v0x12f1f10_0, L_0x12f8b50, C4<1>, C4<1>;
L_0x12f95a0 .functor AND 1, L_0x12f8df0, L_0x12f9440, C4<1>, C4<1>;
L_0x12f9c60 .functor AND 1, L_0x12f9a50, L_0x12f9bc0, C4<1>, C4<1>;
v0x12806c0_0 .net *"_ivl_1", 0 0, L_0x12f7170;  1 drivers
v0x12814c0_0 .net *"_ivl_100", 0 0, L_0x12f9a50;  1 drivers
v0x1281560_0 .net *"_ivl_102", 0 0, L_0x12f9bc0;  1 drivers
v0x1281d70_0 .net *"_ivl_104", 0 0, L_0x12f9c60;  1 drivers
v0x1281e10_0 .net *"_ivl_15", 0 0, L_0x12f7600;  1 drivers
v0x127e660_0 .net *"_ivl_17", 4 0, L_0x12f7730;  1 drivers
v0x127e700_0 .net *"_ivl_19", 0 0, L_0x12f7920;  1 drivers
v0x12eea10_0 .net *"_ivl_21", 0 0, L_0x12f79c0;  1 drivers
v0x12eeaf0_0 .net *"_ivl_22", 0 0, L_0x1281b00;  1 drivers
v0x12eebd0_0 .net *"_ivl_25", 0 0, L_0x12f7b50;  1 drivers
v0x12eecb0_0 .net *"_ivl_26", 0 0, L_0x127e510;  1 drivers
v0x12eed90_0 .net *"_ivl_29", 0 0, L_0x12f7cc0;  1 drivers
v0x12eee70_0 .net *"_ivl_3", 0 0, L_0x12f7210;  1 drivers
v0x12eef50_0 .net *"_ivl_30", 0 0, L_0x129ee40;  1 drivers
v0x12ef030_0 .net *"_ivl_33", 0 0, L_0x12c8880;  1 drivers
v0x12ef0f0_0 .net *"_ivl_37", 0 0, L_0x12f7ef0;  1 drivers
v0x12ef1d0_0 .net *"_ivl_39", 0 0, L_0x12f7f90;  1 drivers
v0x12ef2b0_0 .net *"_ivl_40", 0 0, L_0x12f80a0;  1 drivers
v0x12ef390_0 .net *"_ivl_43", 0 0, L_0x12f81b0;  1 drivers
v0x12ef470_0 .net *"_ivl_44", 0 0, L_0x12f8250;  1 drivers
v0x12ef550_0 .net *"_ivl_47", 0 0, L_0x12f83b0;  1 drivers
v0x12ef610_0 .net *"_ivl_51", 0 0, L_0x12f8470;  1 drivers
v0x12ef6f0_0 .net *"_ivl_53", 0 0, L_0x12f8030;  1 drivers
v0x12ef7b0_0 .net *"_ivl_57", 0 0, L_0x12f8640;  1 drivers
v0x12ef890_0 .net *"_ivl_59", 0 0, L_0x12f88f0;  1 drivers
v0x12ef950_0 .net *"_ivl_63", 0 0, L_0x12f8960;  1 drivers
v0x12efa30_0 .net *"_ivl_65", 0 0, L_0x12f8a90;  1 drivers
v0x12efaf0_0 .net *"_ivl_69", 0 0, L_0x12f8bc0;  1 drivers
v0x12efbd0_0 .net *"_ivl_7", 0 0, L_0x12f73a0;  1 drivers
v0x12efcb0_0 .net *"_ivl_71", 0 0, L_0x12f8c60;  1 drivers
v0x12efd70_0 .net *"_ivl_75", 0 0, L_0x12f8d50;  1 drivers
v0x12efe50_0 .net *"_ivl_77", 0 0, L_0x12f8e90;  1 drivers
v0x12eff10_0 .net *"_ivl_81", 0 0, L_0x12f9000;  1 drivers
v0x12f0200_0 .net *"_ivl_83", 0 0, L_0x12f90a0;  1 drivers
v0x12f02e0_0 .net *"_ivl_84", 0 0, L_0x12f8b50;  1 drivers
v0x12f03c0_0 .net *"_ivl_87", 0 0, L_0x12f92f0;  1 drivers
v0x12f0480_0 .net *"_ivl_9", 0 0, L_0x12f7440;  1 drivers
v0x12f0560_0 .net *"_ivl_91", 0 0, L_0x12f8df0;  1 drivers
v0x12f0620_0 .net *"_ivl_93", 0 0, L_0x12f9440;  1 drivers
v0x12f0700_0 .net *"_ivl_95", 0 0, L_0x12f95a0;  1 drivers
v0x12f07c0_0 .net "in", 0 0, v0x12f1f10_0;  alias, 1 drivers
v0x12f0880_0 .net "next_state", 9 0, L_0x12f96e0;  alias, 1 drivers
v0x12f0960_0 .net "out1", 0 0, L_0x1280510;  alias, 1 drivers
v0x12f0a20_0 .net "out2", 0 0, L_0x12813b0;  alias, 1 drivers
v0x12f0ae0_0 .net "state", 9 0, v0x12f2240_0;  alias, 1 drivers
L_0x12f7170 .part v0x12f2240_0, 8, 1;
L_0x12f7210 .part v0x12f2240_0, 9, 1;
L_0x12f73a0 .part v0x12f2240_0, 7, 1;
L_0x12f7440 .part v0x12f2240_0, 9, 1;
L_0x12f7600 .reduce/nor v0x12f1f10_0;
L_0x12f7730 .part v0x12f2240_0, 0, 5;
L_0x12f7920 .reduce/or L_0x12f7730;
L_0x12f79c0 .part v0x12f2240_0, 7, 1;
L_0x12f7b50 .part v0x12f2240_0, 8, 1;
L_0x12f7cc0 .part v0x12f2240_0, 9, 1;
L_0x12f7ef0 .part v0x12f2240_0, 0, 1;
L_0x12f7f90 .part v0x12f2240_0, 8, 1;
L_0x12f81b0 .part v0x12f2240_0, 9, 1;
L_0x12f8470 .part v0x12f2240_0, 1, 1;
L_0x12f8640 .part v0x12f2240_0, 2, 1;
L_0x12f8960 .part v0x12f2240_0, 3, 1;
L_0x12f8bc0 .part v0x12f2240_0, 4, 1;
L_0x12f8d50 .part v0x12f2240_0, 5, 1;
L_0x12f9000 .part v0x12f2240_0, 6, 1;
L_0x12f90a0 .part v0x12f2240_0, 7, 1;
L_0x12f8df0 .reduce/nor v0x12f1f10_0;
L_0x12f9440 .part v0x12f2240_0, 5, 1;
LS_0x12f96e0_0_0 .concat8 [ 1 1 1 1], L_0x12c8880, L_0x12f83b0, L_0x12f8030, L_0x12f88f0;
LS_0x12f96e0_0_4 .concat8 [ 1 1 1 1], L_0x12f8a90, L_0x12f8c60, L_0x12f8e90, L_0x12f92f0;
LS_0x12f96e0_0_8 .concat8 [ 1 1 0 0], L_0x12f95a0, L_0x12f9c60;
L_0x12f96e0 .concat8 [ 4 4 2 0], LS_0x12f96e0_0_0, LS_0x12f96e0_0_4, LS_0x12f96e0_0_8;
L_0x12f9a50 .reduce/nor v0x12f1f10_0;
L_0x12f9bc0 .part v0x12f2240_0, 6, 1;
S_0x12f0c60 .scope module, "stim1" "stimulus_gen" 3 166, 3 29 0, S_0x1291310;
 .timescale -12 -12;
    .port_info 0 /INPUT 1 "clk";
    .port_info 1 /OUTPUT 1 "in";
    .port_info 2 /OUTPUT 10 "state";
    .port_info 3 /INPUT 1 "tb_match";
    .port_info 4 /INPUT 10 "next_state_ref";
    .port_info 5 /INPUT 10 "next_state_dut";
    .port_info 6 /OUTPUT 512 "wavedrom_title";
    .port_info 7 /OUTPUT 1 "wavedrom_enable";
v0x12f1c90_0 .net "clk", 0 0, v0x12f6660_0;  1 drivers
v0x12f1d70_0 .var/2s "errored1", 31 0;
v0x12f1e50_0 .var/2s "errored2", 31 0;
v0x12f1f10_0 .var "in", 0 0;
v0x12f1fb0_0 .net "next_state_dut", 9 0, L_0x12fd1b0;  alias, 1 drivers
v0x12f20c0_0 .net "next_state_ref", 9 0, L_0x12f96e0;  alias, 1 drivers
v0x12f2180_0 .var/2s "onehot_error", 31 0;
v0x12f2240_0 .var "state", 9 0;
v0x12f2300_0 .var "state_error", 9 0;
v0x12f23c0_0 .net "tb_match", 0 0, L_0x12fdcb0;  alias, 1 drivers
v0x12f2480_0 .var "wavedrom_enable", 0 0;
v0x12f2540_0 .var "wavedrom_title", 511 0;
E_0x128cd90 .event negedge, v0x12f1c90_0;
E_0x128cfe0 .event posedge, v0x12f1c90_0;
S_0x12f0ea0 .scope begin, "$ivl_for_loop0" "$ivl_for_loop0" 3 69, 3 69 0, S_0x12f0c60;
 .timescale -12 -12;
v0x12f10e0_0 .var/2s "i", 31 0;
E_0x128c660/0 .event negedge, v0x12f1c90_0;
E_0x128c660/1 .event posedge, v0x12f1c90_0;
E_0x128c660 .event/or E_0x128c660/0, E_0x128c660/1;
S_0x12f11e0 .scope begin, "$ivl_for_loop1" "$ivl_for_loop1" 3 74, 3 74 0, S_0x12f0c60;
 .timescale -12 -12;
v0x12f13e0_0 .var/2s "i", 31 0;
S_0x12f14c0 .scope begin, "$ivl_for_loop2" "$ivl_for_loop2" 3 114, 3 114 0, S_0x12f0c60;
 .timescale -12 -12;
v0x12f16a0_0 .var/2s "i", 31 0;
S_0x12f1780 .scope task, "wavedrom_start" "wavedrom_start" 3 45, 3 45 0, S_0x12f0c60;
 .timescale -12 -12;
v0x12f1960_0 .var "title", 511 0;
TD_tb.stim1.wavedrom_start ;
    %end;
S_0x12f1a60 .scope task, "wavedrom_stop" "wavedrom_stop" 3 48, 3 48 0, S_0x12f0c60;
 .timescale -12 -12;
TD_tb.stim1.wavedrom_stop ;
    %delay 1, 0;
    %end;
S_0x12f2720 .scope module, "top_module1" "top_module" 3 178, 4 1 0, S_0x1291310;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "in";
    .port_info 1 /INPUT 10 "state";
    .port_info 2 /OUTPUT 10 "next_state";
    .port_info 3 /OUTPUT 1 "out1";
    .port_info 4 /OUTPUT 1 "out2";
L_0x12f9fa0 .functor OR 1, L_0x12f9e60, L_0x12f9f00, C4<0>, C4<0>;
L_0x12fa240 .functor OR 1, L_0x12fa100, L_0x12fa1a0, C4<0>, C4<0>;
L_0x12fa3a0 .functor NOT 1, v0x12f1f10_0, C4<0>, C4<0>, C4<0>;
L_0x12fa590 .functor OR 1, L_0x12fa410, L_0x12fa4b0, C4<0>, C4<0>;
L_0x12fa740 .functor OR 1, L_0x12fa590, L_0x12fa6a0, C4<0>, C4<0>;
L_0x12fa940 .functor OR 1, L_0x12fa740, L_0x12fa850, C4<0>, C4<0>;
L_0x12faf40 .functor OR 1, L_0x12fa940, L_0x12faa90, C4<0>, C4<0>;
L_0x12fb150 .functor OR 1, L_0x12faf40, L_0x12fb050, C4<0>, C4<0>;
L_0x12fb300 .functor OR 1, L_0x12fb150, L_0x12fb260, C4<0>, C4<0>;
L_0x12fb520 .functor OR 1, L_0x12fb300, L_0x12fb410, C4<0>, C4<0>;
L_0x12fb730 .functor OR 1, L_0x12fb520, L_0x12fb690, C4<0>, C4<0>;
L_0x12fb4b0 .functor OR 1, L_0x12fb730, L_0x12fb7f0, C4<0>, C4<0>;
L_0x12fba20 .functor AND 1, L_0x12fa3a0, L_0x12fb4b0, C4<1>, C4<1>;
L_0x12fbd00 .functor OR 1, L_0x12fbb30, L_0x12fbbd0, C4<0>, C4<0>;
L_0x12fb9b0 .functor OR 1, L_0x12fbd00, L_0x12fbe90, C4<0>, C4<0>;
L_0x12fbfd0 .functor AND 1, v0x12f1f10_0, L_0x12fb9b0, C4<1>, C4<1>;
L_0x12fc260 .functor AND 1, v0x12f1f10_0, L_0x12fc120, C4<1>, C4<1>;
L_0x12fc3c0 .functor AND 1, v0x12f1f10_0, L_0x12fc320, C4<1>, C4<1>;
L_0x12fc670 .functor AND 1, v0x12f1f10_0, L_0x12fc520, C4<1>, C4<1>;
L_0x12fc730 .functor AND 1, v0x12f1f10_0, L_0x12fc1c0, C4<1>, C4<1>;
L_0x12fc960 .functor AND 1, v0x12f1f10_0, L_0x12fc480, C4<1>, C4<1>;
L_0x12fcc30 .functor OR 1, L_0x12fca20, L_0x12fcac0, C4<0>, C4<0>;
L_0x12fce00 .functor AND 1, v0x12f1f10_0, L_0x12fcc30, C4<1>, C4<1>;
L_0x12fcec0 .functor NOT 1, v0x12f1f10_0, C4<0>, C4<0>, C4<0>;
L_0x12fd0a0 .functor AND 1, L_0x12fcec0, L_0x12fd000, C4<1>, C4<1>;
L_0x12fd600 .functor NOT 1, v0x12f1f10_0, C4<0>, C4<0>, C4<0>;
L_0x12fd7f0 .functor AND 1, L_0x12fd600, L_0x12fd750, C4<1>, C4<1>;
v0x12f2990_0 .net *"_ivl_1", 0 0, L_0x12f9e60;  1 drivers
v0x12f2a70_0 .net *"_ivl_103", 0 0, L_0x12fca20;  1 drivers
v0x12f2b50_0 .net *"_ivl_105", 0 0, L_0x12fcac0;  1 drivers
v0x12f2c40_0 .net *"_ivl_106", 0 0, L_0x12fcc30;  1 drivers
v0x12f2d20_0 .net *"_ivl_108", 0 0, L_0x12fce00;  1 drivers
v0x12f2e50_0 .net *"_ivl_112", 0 0, L_0x12fcec0;  1 drivers
v0x12f2f30_0 .net *"_ivl_115", 0 0, L_0x12fd000;  1 drivers
v0x12f3010_0 .net *"_ivl_116", 0 0, L_0x12fd0a0;  1 drivers
v0x12f30f0_0 .net *"_ivl_121", 0 0, L_0x12fd600;  1 drivers
v0x12f3260_0 .net *"_ivl_124", 0 0, L_0x12fd750;  1 drivers
v0x12f3340_0 .net *"_ivl_125", 0 0, L_0x12fd7f0;  1 drivers
v0x12f3420_0 .net *"_ivl_14", 0 0, L_0x12fa3a0;  1 drivers
v0x12f3500_0 .net *"_ivl_17", 0 0, L_0x12fa410;  1 drivers
v0x12f35e0_0 .net *"_ivl_19", 0 0, L_0x12fa4b0;  1 drivers
v0x12f36c0_0 .net *"_ivl_20", 0 0, L_0x12fa590;  1 drivers
v0x12f37a0_0 .net *"_ivl_23", 0 0, L_0x12fa6a0;  1 drivers
v0x12f3880_0 .net *"_ivl_24", 0 0, L_0x12fa740;  1 drivers
v0x12f3a70_0 .net *"_ivl_27", 0 0, L_0x12fa850;  1 drivers
v0x12f3b50_0 .net *"_ivl_28", 0 0, L_0x12fa940;  1 drivers
v0x12f3c30_0 .net *"_ivl_3", 0 0, L_0x12f9f00;  1 drivers
v0x12f3d10_0 .net *"_ivl_31", 0 0, L_0x12faa90;  1 drivers
v0x12f3df0_0 .net *"_ivl_32", 0 0, L_0x12faf40;  1 drivers
v0x12f3ed0_0 .net *"_ivl_35", 0 0, L_0x12fb050;  1 drivers
v0x12f3fb0_0 .net *"_ivl_36", 0 0, L_0x12fb150;  1 drivers
v0x12f4090_0 .net *"_ivl_39", 0 0, L_0x12fb260;  1 drivers
v0x12f4170_0 .net *"_ivl_40", 0 0, L_0x12fb300;  1 drivers
v0x12f4250_0 .net *"_ivl_43", 0 0, L_0x12fb410;  1 drivers
v0x12f4330_0 .net *"_ivl_44", 0 0, L_0x12fb520;  1 drivers
v0x12f4410_0 .net *"_ivl_47", 0 0, L_0x12fb690;  1 drivers
v0x12f44f0_0 .net *"_ivl_48", 0 0, L_0x12fb730;  1 drivers
v0x12f45d0_0 .net *"_ivl_51", 0 0, L_0x12fb7f0;  1 drivers
v0x12f46b0_0 .net *"_ivl_52", 0 0, L_0x12fb4b0;  1 drivers
v0x12f4790_0 .net *"_ivl_54", 0 0, L_0x12fba20;  1 drivers
v0x12f4a80_0 .net *"_ivl_59", 0 0, L_0x12fbb30;  1 drivers
v0x12f4b60_0 .net *"_ivl_61", 0 0, L_0x12fbbd0;  1 drivers
v0x12f4c40_0 .net *"_ivl_62", 0 0, L_0x12fbd00;  1 drivers
v0x12f4d20_0 .net *"_ivl_65", 0 0, L_0x12fbe90;  1 drivers
v0x12f4e00_0 .net *"_ivl_66", 0 0, L_0x12fb9b0;  1 drivers
v0x12f4ee0_0 .net *"_ivl_68", 0 0, L_0x12fbfd0;  1 drivers
v0x12f4fc0_0 .net *"_ivl_7", 0 0, L_0x12fa100;  1 drivers
v0x12f50a0_0 .net *"_ivl_73", 0 0, L_0x12fc120;  1 drivers
v0x12f5180_0 .net *"_ivl_74", 0 0, L_0x12fc260;  1 drivers
v0x12f5260_0 .net *"_ivl_79", 0 0, L_0x12fc320;  1 drivers
v0x12f5340_0 .net *"_ivl_80", 0 0, L_0x12fc3c0;  1 drivers
v0x12f5420_0 .net *"_ivl_85", 0 0, L_0x12fc520;  1 drivers
v0x12f5500_0 .net *"_ivl_86", 0 0, L_0x12fc670;  1 drivers
v0x12f55e0_0 .net *"_ivl_9", 0 0, L_0x12fa1a0;  1 drivers
v0x12f56c0_0 .net *"_ivl_91", 0 0, L_0x12fc1c0;  1 drivers
v0x12f57a0_0 .net *"_ivl_92", 0 0, L_0x12fc730;  1 drivers
v0x12f5880_0 .net *"_ivl_97", 0 0, L_0x12fc480;  1 drivers
v0x12f5960_0 .net *"_ivl_98", 0 0, L_0x12fc960;  1 drivers
v0x12f5a40_0 .net "in", 0 0, v0x12f1f10_0;  alias, 1 drivers
v0x12f5ae0_0 .net "next_state", 9 0, L_0x12fd1b0;  alias, 1 drivers
v0x12f5ba0_0 .net "out1", 0 0, L_0x12f9fa0;  alias, 1 drivers
v0x12f5c40_0 .net "out2", 0 0, L_0x12fa240;  alias, 1 drivers
v0x12f5d00_0 .net "state", 9 0, v0x12f2240_0;  alias, 1 drivers
L_0x12f9e60 .part v0x12f2240_0, 9, 1;
L_0x12f9f00 .part v0x12f2240_0, 8, 1;
L_0x12fa100 .part v0x12f2240_0, 9, 1;
L_0x12fa1a0 .part v0x12f2240_0, 7, 1;
L_0x12fa410 .part v0x12f2240_0, 9, 1;
L_0x12fa4b0 .part v0x12f2240_0, 8, 1;
L_0x12fa6a0 .part v0x12f2240_0, 7, 1;
L_0x12fa850 .part v0x12f2240_0, 6, 1;
L_0x12faa90 .part v0x12f2240_0, 5, 1;
L_0x12fb050 .part v0x12f2240_0, 4, 1;
L_0x12fb260 .part v0x12f2240_0, 3, 1;
L_0x12fb410 .part v0x12f2240_0, 2, 1;
L_0x12fb690 .part v0x12f2240_0, 1, 1;
L_0x12fb7f0 .part v0x12f2240_0, 0, 1;
L_0x12fbb30 .part v0x12f2240_0, 9, 1;
L_0x12fbbd0 .part v0x12f2240_0, 8, 1;
L_0x12fbe90 .part v0x12f2240_0, 0, 1;
L_0x12fc120 .part v0x12f2240_0, 1, 1;
L_0x12fc320 .part v0x12f2240_0, 2, 1;
L_0x12fc520 .part v0x12f2240_0, 3, 1;
L_0x12fc1c0 .part v0x12f2240_0, 4, 1;
L_0x12fc480 .part v0x12f2240_0, 5, 1;
L_0x12fca20 .part v0x12f2240_0, 7, 1;
L_0x12fcac0 .part v0x12f2240_0, 6, 1;
L_0x12fd000 .part v0x12f2240_0, 5, 1;
LS_0x12fd1b0_0_0 .concat8 [ 1 1 1 1], L_0x12fba20, L_0x12fbfd0, L_0x12fc260, L_0x12fc3c0;
LS_0x12fd1b0_0_4 .concat8 [ 1 1 1 1], L_0x12fc670, L_0x12fc730, L_0x12fc960, L_0x12fce00;
LS_0x12fd1b0_0_8 .concat8 [ 1 1 0 0], L_0x12fd0a0, L_0x12fd7f0;
L_0x12fd1b0 .concat8 [ 4 4 2 0], LS_0x12fd1b0_0_0, LS_0x12fd1b0_0_4, LS_0x12fd1b0_0_8;
L_0x12fd750 .part v0x12f2240_0, 6, 1;
S_0x12f5eb0 .scope task, "wait_for_end_of_timestep" "wait_for_end_of_timestep" 3 187, 3 187 0, S_0x1291310;
 .timescale -12 -12;
E_0x1273a20 .event anyedge, v0x12f6d40_0;
TD_tb.wait_for_end_of_timestep ;
    %pushi/vec4 5, 0, 32;
T_2.0 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_2.1, 5;
    %jmp/1 T_2.1, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %load/vec4 v0x12f6d40_0;
    %nor/r;
    %assign/vec4 v0x12f6d40_0, 0;
    %wait E_0x1273a20;
    %jmp T_2.0;
T_2.1 ;
    %pop/vec4 1;
    %end;
    .scope S_0x12f0c60;
T_3 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x12f1d70_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x12f1e50_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x12f2180_0, 0, 32;
    %pushi/vec4 0, 0, 10;
    %store/vec4 v0x12f2300_0, 0, 10;
    %end;
    .thread T_3, $init;
    .scope S_0x12f0c60;
T_4 ;
    %pushi/vec4 2, 0, 32;
T_4.0 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_4.1, 5;
    %jmp/1 T_4.1, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_0x128cfe0;
    %jmp T_4.0;
T_4.1 ;
    %pop/vec4 1;
T_4.2 ;
    %wait E_0x128c660;
    %load/vec4 v0x12f2300_0;
    %load/vec4 v0x12f20c0_0;
    %load/vec4 v0x12f1fb0_0;
    %xor;
    %or;
    %assign/vec4 v0x12f2300_0, 0;
    %jmp T_4.2;
T_4.3 ;
    %end;
    .thread T_4;
    .scope S_0x12f0c60;
T_5 ;
    %pushi/vec4 0, 0, 10;
    %assign/vec4 v0x12f2240_0, 0;
    %wait E_0x128cd90;
    %fork t_1, S_0x12f0ea0;
    %jmp t_0;
    .scope S_0x12f0ea0;
t_1 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x12f10e0_0, 0, 32;
T_5.0 ; Top of for-loop 
    %load/vec4 v0x12f10e0_0;
    %cmpi/s 10, 0, 32;
    %jmp/0xz T_5.1, 5;
    %wait E_0x128c660;
    %pushi/vec4 1, 0, 10;
    %load/vec4 v0x12f10e0_0;
    %ix/vec4 4;
    %shiftl 4;
    %assign/vec4 v0x12f2240_0, 0;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0x12f1f10_0, 0;
T_5.2 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x12f10e0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x12f10e0_0, 0, 32;
    %jmp T_5.0;
T_5.1 ; for-loop exit label
    %end;
    .scope S_0x12f0c60;
t_0 %join;
    %fork t_3, S_0x12f11e0;
    %jmp t_2;
    .scope S_0x12f11e0;
t_3 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x12f13e0_0, 0, 32;
T_5.3 ; Top of for-loop 
    %load/vec4 v0x12f13e0_0;
    %cmpi/s 10, 0, 32;
    %jmp/0xz T_5.4, 5;
    %wait E_0x128c660;
    %pushi/vec4 1, 0, 10;
    %load/vec4 v0x12f13e0_0;
    %ix/vec4 4;
    %shiftl 4;
    %assign/vec4 v0x12f2240_0, 0;
    %pushi/vec4 1, 0, 1;
    %assign/vec4 v0x12f1f10_0, 0;
T_5.5 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x12f13e0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x12f13e0_0, 0, 32;
    %jmp T_5.3;
T_5.4 ; for-loop exit label
    %end;
    .scope S_0x12f0c60;
t_2 %join;
    %wait E_0x128cd90;
    %fork TD_tb.stim1.wavedrom_stop, S_0x12f1a60;
    %join;
    %pushi/vec4 200, 0, 32;
T_5.6 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_5.7, 5;
    %jmp/1 T_5.7, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_0x128c660;
    %pushi/vec4 1, 0, 10;
    %vpi_func 3 83 "$random" 32 {0 0 0};
    %pushi/vec4 10, 0, 32;
    %mod;
    %ix/vec4 4;
    %shiftl 4;
    %assign/vec4 v0x12f2240_0, 0;
    %vpi_func 3 84 "$random" 32 {0 0 0};
    %pad/s 1;
    %assign/vec4 v0x12f1f10_0, 0;
    %load/vec4 v0x12f23c0_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.8, 8;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x12f2180_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x12f2180_0, 0, 32;
T_5.8 ;
    %jmp T_5.6;
T_5.7 ;
    %pop/vec4 1;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x12f1d70_0, 0, 32;
    %pushi/vec4 400, 0, 32;
T_5.10 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_5.11, 5;
    %jmp/1 T_5.11, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_0x128c660;
    %pushi/vec4 1, 0, 10;
    %vpi_func 3 91 "$random" 32 {0 0 0};
    %pushi/vec4 10, 0, 32;
    %mod;
    %ix/vec4 4;
    %shiftl 4;
    %pushi/vec4 1, 0, 10;
    %vpi_func 3 91 "$random" 32 {0 0 0};
    %pushi/vec4 10, 0, 32;
    %mod;
    %ix/vec4 4;
    %shiftl 4;
    %or;
    %assign/vec4 v0x12f2240_0, 0;
    %vpi_func 3 92 "$random" 32 {0 0 0};
    %pad/s 1;
    %assign/vec4 v0x12f1f10_0, 0;
    %load/vec4 v0x12f23c0_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.12, 8;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x12f1d70_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x12f1d70_0, 0, 32;
T_5.12 ;
    %jmp T_5.10;
T_5.11 ;
    %pop/vec4 1;
    %load/vec4 v0x12f2180_0;
    %nor/r;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_5.16, 9;
    %load/vec4 v0x12f1d70_0;
    %pushi/vec4 0, 0, 32;
    %cmp/ne;
    %flag_get/vec4 4;
    %and;
T_5.16;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.14, 8;
    %vpi_call/w 3 98 "$display", "Hint: Your circuit passed when given only one-hot inputs, but not with two-hot inputs." {0 0 0};
T_5.14 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x12f1e50_0, 0, 32;
    %pushi/vec4 800, 0, 32;
T_5.17 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_5.18, 5;
    %jmp/1 T_5.18, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_0x128c660;
    %vpi_func 3 103 "$random" 32 {0 0 0};
    %pad/s 10;
    %assign/vec4 v0x12f2240_0, 0;
    %vpi_func 3 104 "$random" 32 {0 0 0};
    %pad/s 1;
    %assign/vec4 v0x12f1f10_0, 0;
    %load/vec4 v0x12f23c0_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.19, 8;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x12f1e50_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x12f1e50_0, 0, 32;
T_5.19 ;
    %jmp T_5.17;
T_5.18 ;
    %pop/vec4 1;
    %load/vec4 v0x12f2180_0;
    %nor/r;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_5.23, 9;
    %load/vec4 v0x12f1e50_0;
    %pushi/vec4 0, 0, 32;
    %cmp/ne;
    %flag_get/vec4 4;
    %and;
T_5.23;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.21, 8;
    %vpi_call/w 3 109 "$display", "Hint: Your circuit passed when given only one-hot inputs, but not with random inputs." {0 0 0};
T_5.21 ;
    %load/vec4 v0x12f2180_0;
    %nor/r;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_5.26, 9;
    %load/vec4 v0x12f1d70_0;
    %cmpi/ne 0, 0, 32;
    %flag_get/vec4 4;
    %jmp/1 T_5.27, 4;
    %load/vec4 v0x12f1e50_0;
    %pushi/vec4 0, 0, 32;
    %cmp/ne;
    %flag_get/vec4 4;
    %or;
T_5.27;
    %and;
T_5.26;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.24, 8;
    %vpi_call/w 3 112 "$display", "Hint: Are you doing something more complicated than deriving state transition equations by inspection?\012" {0 0 0};
T_5.24 ;
    %fork t_5, S_0x12f14c0;
    %jmp t_4;
    .scope S_0x12f14c0;
t_5 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x12f16a0_0, 0, 32;
T_5.28 ; Top of for-loop 
    %load/vec4 v0x12f16a0_0;
    %cmpi/u 10, 0, 32;
    %jmp/0xz T_5.29, 5;
    %load/vec4 v0x12f2300_0;
    %load/vec4 v0x12f16a0_0;
    %part/s 1;
    %cmpi/e 0, 0, 1;
    %flag_mov 8, 6;
    %jmp/0 T_5.31, 8;
    %pushi/vec4 25455, 0, 32; draw_string_vec4
    %pushi/vec4 1920099683, 0, 32; draw_string_vec4
    %concat/vec4; draw_string_vec4
    %pushi/vec4 116, 0, 8; draw_string_vec4
    %concat/vec4; draw_string_vec4
    %jmp/1 T_5.32, 8;
T_5.31 ; End of true expr.
    %pushi/vec4 1768842095, 0, 32; draw_string_vec4
    %pushi/vec4 1920099683, 0, 32; draw_string_vec4
    %concat/vec4; draw_string_vec4
    %pushi/vec4 116, 0, 8; draw_string_vec4
    %concat/vec4; draw_string_vec4
    %jmp/0 T_5.32, 8;
 ; End of false expr.
    %blend;
T_5.32;
    %vpi_call/w 3 115 "$display", "Hint: next_state[%0d] is %s.", v0x12f16a0_0, S<0,vec4,u72> {1 0 0};
T_5.30 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x12f16a0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x12f16a0_0, 0, 32;
    %jmp T_5.28;
T_5.29 ; for-loop exit label
    %end;
    .scope S_0x12f0c60;
t_4 %join;
    %delay 1, 0;
    %vpi_call/w 3 117 "$finish" {0 0 0};
    %end;
    .thread T_5;
    .scope S_0x1291310;
T_6 ;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x12f6660_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x12f6d40_0, 0, 1;
    %end;
    .thread T_6, $init;
    .scope S_0x1291310;
T_7 ;
T_7.0 ;
    %delay 5, 0;
    %load/vec4 v0x12f6660_0;
    %inv;
    %store/vec4 v0x12f6660_0, 0, 1;
    %jmp T_7.0;
T_7.1 ;
    %end;
    .thread T_7;
    .scope S_0x1291310;
T_8 ;
    %vpi_call/w 3 158 "$dumpfile", "wave.vcd" {0 0 0};
    %vpi_call/w 3 159 "$dumpvars", 32'sb00000000000000000000000000000001, v0x12f1c90_0, v0x12f6eb0_0, v0x12f6700_0, v0x12f6c00_0, v0x12f6840_0, v0x12f67a0_0, v0x12f69f0_0, v0x12f6950_0, v0x12f6b30_0, v0x12f6a90_0 {0 0 0};
    %end;
    .thread T_8;
    .scope S_0x1291310;
T_9 ;
    %load/vec4 v0x12f6ca0_0;
    %parti/u 32, 192, 32;
    %cmpi/ne 0, 0, 32;
    %jmp/0xz  T_9.0, 4;
    %load/vec4 v0x12f6ca0_0;
    %parti/u 32, 192, 32;
    %load/vec4 v0x12f6ca0_0;
    %parti/u 32, 160, 32;
    %vpi_call/w 3 196 "$display", "Hint: Output '%s' has %0d mismatches. First mismatch occurred at time %0d.", "next_state", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %jmp T_9.1;
T_9.0 ;
    %vpi_call/w 3 197 "$display", "Hint: Output '%s' has no mismatches.", "next_state" {0 0 0};
T_9.1 ;
    %load/vec4 v0x12f6ca0_0;
    %parti/u 32, 128, 32;
    %cmpi/ne 0, 0, 32;
    %jmp/0xz  T_9.2, 4;
    %load/vec4 v0x12f6ca0_0;
    %parti/u 32, 128, 32;
    %load/vec4 v0x12f6ca0_0;
    %parti/u 32, 96, 32;
    %vpi_call/w 3 198 "$display", "Hint: Output '%s' has %0d mismatches. First mismatch occurred at time %0d.", "out1", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %jmp T_9.3;
T_9.2 ;
    %vpi_call/w 3 199 "$display", "Hint: Output '%s' has no mismatches.", "out1" {0 0 0};
T_9.3 ;
    %load/vec4 v0x12f6ca0_0;
    %parti/u 32, 64, 32;
    %cmpi/ne 0, 0, 32;
    %jmp/0xz  T_9.4, 4;
    %load/vec4 v0x12f6ca0_0;
    %parti/u 32, 64, 32;
    %load/vec4 v0x12f6ca0_0;
    %parti/u 32, 32, 32;
    %vpi_call/w 3 200 "$display", "Hint: Output '%s' has %0d mismatches. First mismatch occurred at time %0d.", "out2", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %jmp T_9.5;
T_9.4 ;
    %vpi_call/w 3 201 "$display", "Hint: Output '%s' has no mismatches.", "out2" {0 0 0};
T_9.5 ;
    %load/vec4 v0x12f6ca0_0;
    %parti/u 32, 256, 32;
    %load/vec4 v0x12f6ca0_0;
    %parti/u 32, 0, 32;
    %vpi_call/w 3 203 "$display", "Hint: Total mismatched samples is %1d out of %1d samples\012", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %vpi_call/w 3 204 "$display", "Simulation finished at %0d ps", $time {0 0 0};
    %load/vec4 v0x12f6ca0_0;
    %parti/u 32, 256, 32;
    %load/vec4 v0x12f6ca0_0;
    %parti/u 32, 0, 32;
    %vpi_call/w 3 205 "$display", "Mismatches: %1d in %1d samples", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %end;
    .thread T_9, $final;
    .scope S_0x1291310;
T_10 ;
    %wait E_0x128c660;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x12f6ca0_0;
    %pushi/vec4 0, 0, 32;
    %part/u 32;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x12f6ca0_0, 4, 32;
    %load/vec4 v0x12f6de0_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_10.0, 8;
    %load/vec4 v0x12f6ca0_0;
    %parti/u 32, 256, 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_10.2, 4;
    %vpi_func 3 216 "$time" 64 {0 0 0};
    %cast2;
    %pad/u 32;
    %ix/load 4, 224, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x12f6ca0_0, 4, 32;
T_10.2 ;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x12f6ca0_0;
    %pushi/vec4 256, 0, 32;
    %part/u 32;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %ix/load 4, 256, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x12f6ca0_0, 4, 32;
T_10.0 ;
    %load/vec4 v0x12f6840_0;
    %load/vec4 v0x12f6840_0;
    %load/vec4 v0x12f67a0_0;
    %xor;
    %load/vec4 v0x12f6840_0;
    %xor;
    %cmp/ne;
    %jmp/0xz  T_10.4, 6;
    %load/vec4 v0x12f6ca0_0;
    %parti/u 32, 192, 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_10.6, 4;
    %vpi_func 3 220 "$time" 64 {0 0 0};
    %cast2;
    %pad/u 32;
    %ix/load 4, 160, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x12f6ca0_0, 4, 32;
T_10.6 ;
    %load/vec4 v0x12f6ca0_0;
    %parti/u 32, 192, 32;
    %addi 1, 0, 32;
    %ix/load 4, 192, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x12f6ca0_0, 4, 32;
T_10.4 ;
    %load/vec4 v0x12f69f0_0;
    %load/vec4 v0x12f69f0_0;
    %load/vec4 v0x12f6950_0;
    %xor;
    %load/vec4 v0x12f69f0_0;
    %xor;
    %cmp/ne;
    %jmp/0xz  T_10.8, 6;
    %load/vec4 v0x12f6ca0_0;
    %parti/u 32, 128, 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_10.10, 4;
    %vpi_func 3 223 "$time" 64 {0 0 0};
    %cast2;
    %pad/u 32;
    %ix/load 4, 96, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x12f6ca0_0, 4, 32;
T_10.10 ;
    %load/vec4 v0x12f6ca0_0;
    %parti/u 32, 128, 32;
    %addi 1, 0, 32;
    %ix/load 4, 128, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x12f6ca0_0, 4, 32;
T_10.8 ;
    %load/vec4 v0x12f6b30_0;
    %load/vec4 v0x12f6b30_0;
    %load/vec4 v0x12f6a90_0;
    %xor;
    %load/vec4 v0x12f6b30_0;
    %xor;
    %cmp/ne;
    %jmp/0xz  T_10.12, 6;
    %load/vec4 v0x12f6ca0_0;
    %parti/u 32, 64, 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_10.14, 4;
    %vpi_func 3 226 "$time" 64 {0 0 0};
    %cast2;
    %pad/u 32;
    %ix/load 4, 32, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x12f6ca0_0, 4, 32;
T_10.14 ;
    %load/vec4 v0x12f6ca0_0;
    %parti/u 32, 64, 32;
    %addi 1, 0, 32;
    %ix/load 4, 64, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x12f6ca0_0, 4, 32;
T_10.12 ;
    %jmp T_10;
    .thread T_10;
# The file index is used to find the file name in the following table.
:file_names 5;
    "N/A";
    "<interactive>";
    "-";
    "/home/jmb9986/AutoChip/autochip_scripts/../verilogeval_prompts_tbs/ve_testbenches_machine/fsm_onehot/fsm_onehot_tb.sv";
    "/home/jmb9986/AutoChip/autochip_scripts/outputs/gpt3p5/can55_depth0/machine/fsm_onehot/iter0/response36/top_module.sv";
