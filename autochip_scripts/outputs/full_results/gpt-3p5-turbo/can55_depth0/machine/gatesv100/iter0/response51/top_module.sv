module top_module (
    input [99:0] in,
    output [98:0] out_both,
    output [99:0] out_any,
    output [99:0] out_different
);

  wire [99:0] shifted_in;
  assign shifted_in = {in[98:0], in[99]}; // Shift the input signal by one bit

  assign out_both = in[98:0] & shifted_in[98:0]; // Perform bitwise AND operation for the first 99 bits

  assign out_any = in | shifted_in; // Perform bitwise OR operation for all bits

  assign out_different = {in[0] ^ shifted_in[99], in[99:1] ^ shifted_in[98:0]}; // First bit generated by XORing first bit of in and last bit of shifted_in

endmodule
