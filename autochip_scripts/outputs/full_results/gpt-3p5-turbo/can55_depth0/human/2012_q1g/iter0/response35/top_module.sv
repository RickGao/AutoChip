module top_module (
	input [4:1] x,
	output logic f
);

// Define your truth table
//  00 | 1 | 0 | 0 | 1 |
//  01 | 0 | 0 | 0 | 0 |
//  11 | 1 | 1 | 1 | 0 |
//  10 | 1 | 1 | 0 | 1 |

// Implement the function f using combination logic
always_comb begin
    case (x)
        // x[1]=0, x[2]=0, x[3]=0, x[4]=0
        4'b0000: f = 1;
        
        // x[1]=0, x[2]=0, x[3]=0, x[4]=1
        4'b0001: f = 0;
        
        // x[1]=0, x[2]=0, x[3]=1, x[4]=1
        4'b0011: f = 1;
        
        // x[1]=0, x[2]=0, x[3]=1, x[4]=0
        4'b0010: f = 1;
        
        // x[1]=0, x[2]=1, x[3]=0, x[4]=0
        4'b0100: f = 0;
        
        // x[1]=0, x[2]=1, x[3]=0, x[4]=1
        4'b0101: f = 0;
        
        // x[1]=0, x[2]=1, x[3]=1, x[4]=1
        4'b0111: f = 1;
        
        // x[1]=0, x[2]=1, x[3]=1, x[4]=0
        4'b0110: f = 1;
        
        // x[1]=1, x[2]=0, x[3]=0, x[4]=0
        4'b1000: f = 1;
        
        // x[1]=1, x[2]=0, x[3]=0, x[4]=1
        4'b1001: f = 1;
        
        // x[1]=1, x[2]=0, x[3]=1, x[4]=1
        4'b1011: f = 1;
        
        // x[1]=1, x[2]=0, x[3]=1, x[4]=0
        4'b1010: f = 0;
        
        // x[1]=1, x[2]=1, x[3]=0, x[4]=0
        4'b1100: f = 0;
        
        // x[1]=1, x[2]=1, x[3]=0, x[4]=1
        4'b1101: f = 1;
        
        // x[1]=1, x[2]=1, x[3]=1, x[4]=1
        4'b1111: f = 0;
        
        // x[1]=1, x[2]=1, x[3]=1, x[4]=0
        4'b1110: f = 1;
        
        default: f = 0;
    endcase
end

endmodule
