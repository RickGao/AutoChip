#! /usr/local/bin/vvp
:ivl_version "13.0 (devel)" "(s20221226-331-g77d7f0b8f)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision - 12;
:vpi_module "/usr/local/lib/ivl/system.vpi";
:vpi_module "/usr/local/lib/ivl/vhdl_sys.vpi";
:vpi_module "/usr/local/lib/ivl/vhdl_textio.vpi";
:vpi_module "/usr/local/lib/ivl/v2005_math.vpi";
:vpi_module "/usr/local/lib/ivl/va_math.vpi";
:vpi_module "/usr/local/lib/ivl/v2009.vpi";
S_0x24fb230 .scope package, "$unit" "$unit" 2 1;
 .timescale 0 0;
S_0x250e9f0 .scope module, "tb" "tb" 3 122;
 .timescale -12 -12;
L_0x24fb6c0 .functor NOT 1, L_0x2577520, C4<0>, C4<0>, C4<0>;
L_0x25773a0 .functor XOR 12, L_0x2577260, L_0x2577300, C4<000000000000>, C4<000000000000>;
L_0x25774b0 .functor XOR 12, L_0x25773a0, L_0x2577410, C4<000000000000>, C4<000000000000>;
v0x25701d0_0 .net *"_ivl_10", 11 0, L_0x2577410;  1 drivers
v0x25702d0_0 .net *"_ivl_12", 11 0, L_0x25774b0;  1 drivers
v0x25703b0_0 .net *"_ivl_2", 11 0, L_0x25771c0;  1 drivers
v0x2570470_0 .net *"_ivl_4", 11 0, L_0x2577260;  1 drivers
v0x2570550_0 .net *"_ivl_6", 11 0, L_0x2577300;  1 drivers
v0x2570680_0 .net *"_ivl_8", 11 0, L_0x25773a0;  1 drivers
v0x2570760_0 .var "clk", 0 0;
v0x2570800_0 .net "in", 0 0, v0x256c7f0_0;  1 drivers
v0x25708a0_0 .net "next_state_dut", 9 0, L_0x2575a90;  1 drivers
v0x2570940_0 .net "next_state_ref", 9 0, L_0x25737e0;  1 drivers
v0x2570a50_0 .net "out1_dut", 0 0, L_0x2576850;  1 drivers
v0x2570af0_0 .net "out1_ref", 0 0, L_0x24fe510;  1 drivers
v0x2570b90_0 .net "out2_dut", 0 0, L_0x2576f70;  1 drivers
v0x2570c30_0 .net "out2_ref", 0 0, L_0x24ff3b0;  1 drivers
v0x2570d00_0 .net "state", 9 0, v0x256cb20_0;  1 drivers
v0x2570da0_0 .var/2u "stats1", 287 0;
v0x2570e40_0 .var/2u "strobe", 0 0;
v0x2570ee0_0 .net "tb_match", 0 0, L_0x2577520;  1 drivers
v0x2570fb0_0 .net "tb_mismatch", 0 0, L_0x24fb6c0;  1 drivers
v0x2571050_0 .net "wavedrom_enable", 0 0, v0x256cd60_0;  1 drivers
v0x2571120_0 .net "wavedrom_title", 511 0, v0x256ce20_0;  1 drivers
L_0x25771c0 .concat [ 1 1 10 0], L_0x24ff3b0, L_0x24fe510, L_0x25737e0;
L_0x2577260 .concat [ 1 1 10 0], L_0x24ff3b0, L_0x24fe510, L_0x25737e0;
L_0x2577300 .concat [ 1 1 10 0], L_0x2576f70, L_0x2576850, L_0x2575a90;
L_0x2577410 .concat [ 1 1 10 0], L_0x24ff3b0, L_0x24fe510, L_0x25737e0;
L_0x2577520 .cmp/eeq 12, L_0x25771c0, L_0x25774b0;
S_0x250eb80 .scope module, "good1" "reference_module" 3 171, 3 4 0, S_0x250e9f0;
 .timescale -12 -12;
    .port_info 0 /INPUT 1 "in";
    .port_info 1 /INPUT 10 "state";
    .port_info 2 /OUTPUT 10 "next_state";
    .port_info 3 /OUTPUT 1 "out1";
    .port_info 4 /OUTPUT 1 "out2";
L_0x24fe510 .functor OR 1, L_0x2571270, L_0x2571310, C4<0>, C4<0>;
L_0x24ff3b0 .functor OR 1, L_0x25714a0, L_0x2571540, C4<0>, C4<0>;
L_0x24ffb00 .functor OR 1, L_0x2571a20, L_0x2571ac0, C4<0>, C4<0>;
L_0x24fc510 .functor OR 1, L_0x24ffb00, L_0x2571c50, C4<0>, C4<0>;
L_0x251c520 .functor OR 1, L_0x24fc510, L_0x2571dc0, C4<0>, C4<0>;
L_0x2543020 .functor AND 1, L_0x2571700, L_0x251c520, C4<1>, C4<1>;
L_0x25721a0 .functor OR 1, L_0x2571ff0, L_0x2572090, C4<0>, C4<0>;
L_0x2572350 .functor OR 1, L_0x25721a0, L_0x25722b0, C4<0>, C4<0>;
L_0x25724b0 .functor AND 1, v0x256c7f0_0, L_0x2572350, C4<1>, C4<1>;
L_0x2572130 .functor AND 1, v0x256c7f0_0, L_0x2572570, C4<1>, C4<1>;
L_0x25729f0 .functor AND 1, v0x256c7f0_0, L_0x2572740, C4<1>, C4<1>;
L_0x2572b90 .functor AND 1, v0x256c7f0_0, L_0x2572a60, C4<1>, C4<1>;
L_0x2572d60 .functor AND 1, v0x256c7f0_0, L_0x2572cc0, C4<1>, C4<1>;
L_0x2572f90 .functor AND 1, v0x256c7f0_0, L_0x2572e50, C4<1>, C4<1>;
L_0x2572c50 .functor OR 1, L_0x2573100, L_0x25731a0, C4<0>, C4<0>;
L_0x25733f0 .functor AND 1, v0x256c7f0_0, L_0x2572c50, C4<1>, C4<1>;
L_0x25736a0 .functor AND 1, L_0x2572ef0, L_0x2573540, C4<1>, C4<1>;
L_0x2573d60 .functor AND 1, L_0x2573b50, L_0x2573cc0, C4<1>, C4<1>;
v0x24fe6c0_0 .net *"_ivl_1", 0 0, L_0x2571270;  1 drivers
v0x24ff4c0_0 .net *"_ivl_100", 0 0, L_0x2573b50;  1 drivers
v0x24ff560_0 .net *"_ivl_102", 0 0, L_0x2573cc0;  1 drivers
v0x24ffd70_0 .net *"_ivl_104", 0 0, L_0x2573d60;  1 drivers
v0x24ffe10_0 .net *"_ivl_15", 0 0, L_0x2571700;  1 drivers
v0x24fc660_0 .net *"_ivl_17", 4 0, L_0x2571830;  1 drivers
v0x24fc700_0 .net *"_ivl_19", 0 0, L_0x2571a20;  1 drivers
v0x25692f0_0 .net *"_ivl_21", 0 0, L_0x2571ac0;  1 drivers
v0x25693d0_0 .net *"_ivl_22", 0 0, L_0x24ffb00;  1 drivers
v0x25694b0_0 .net *"_ivl_25", 0 0, L_0x2571c50;  1 drivers
v0x2569590_0 .net *"_ivl_26", 0 0, L_0x24fc510;  1 drivers
v0x2569670_0 .net *"_ivl_29", 0 0, L_0x2571dc0;  1 drivers
v0x2569750_0 .net *"_ivl_3", 0 0, L_0x2571310;  1 drivers
v0x2569830_0 .net *"_ivl_30", 0 0, L_0x251c520;  1 drivers
v0x2569910_0 .net *"_ivl_33", 0 0, L_0x2543020;  1 drivers
v0x25699d0_0 .net *"_ivl_37", 0 0, L_0x2571ff0;  1 drivers
v0x2569ab0_0 .net *"_ivl_39", 0 0, L_0x2572090;  1 drivers
v0x2569b90_0 .net *"_ivl_40", 0 0, L_0x25721a0;  1 drivers
v0x2569c70_0 .net *"_ivl_43", 0 0, L_0x25722b0;  1 drivers
v0x2569d50_0 .net *"_ivl_44", 0 0, L_0x2572350;  1 drivers
v0x2569e30_0 .net *"_ivl_47", 0 0, L_0x25724b0;  1 drivers
v0x2569ef0_0 .net *"_ivl_51", 0 0, L_0x2572570;  1 drivers
v0x2569fd0_0 .net *"_ivl_53", 0 0, L_0x2572130;  1 drivers
v0x256a090_0 .net *"_ivl_57", 0 0, L_0x2572740;  1 drivers
v0x256a170_0 .net *"_ivl_59", 0 0, L_0x25729f0;  1 drivers
v0x256a230_0 .net *"_ivl_63", 0 0, L_0x2572a60;  1 drivers
v0x256a310_0 .net *"_ivl_65", 0 0, L_0x2572b90;  1 drivers
v0x256a3d0_0 .net *"_ivl_69", 0 0, L_0x2572cc0;  1 drivers
v0x256a4b0_0 .net *"_ivl_7", 0 0, L_0x25714a0;  1 drivers
v0x256a590_0 .net *"_ivl_71", 0 0, L_0x2572d60;  1 drivers
v0x256a650_0 .net *"_ivl_75", 0 0, L_0x2572e50;  1 drivers
v0x256a730_0 .net *"_ivl_77", 0 0, L_0x2572f90;  1 drivers
v0x256a7f0_0 .net *"_ivl_81", 0 0, L_0x2573100;  1 drivers
v0x256aae0_0 .net *"_ivl_83", 0 0, L_0x25731a0;  1 drivers
v0x256abc0_0 .net *"_ivl_84", 0 0, L_0x2572c50;  1 drivers
v0x256aca0_0 .net *"_ivl_87", 0 0, L_0x25733f0;  1 drivers
v0x256ad60_0 .net *"_ivl_9", 0 0, L_0x2571540;  1 drivers
v0x256ae40_0 .net *"_ivl_91", 0 0, L_0x2572ef0;  1 drivers
v0x256af00_0 .net *"_ivl_93", 0 0, L_0x2573540;  1 drivers
v0x256afe0_0 .net *"_ivl_95", 0 0, L_0x25736a0;  1 drivers
v0x256b0a0_0 .net "in", 0 0, v0x256c7f0_0;  alias, 1 drivers
v0x256b160_0 .net "next_state", 9 0, L_0x25737e0;  alias, 1 drivers
v0x256b240_0 .net "out1", 0 0, L_0x24fe510;  alias, 1 drivers
v0x256b300_0 .net "out2", 0 0, L_0x24ff3b0;  alias, 1 drivers
v0x256b3c0_0 .net "state", 9 0, v0x256cb20_0;  alias, 1 drivers
L_0x2571270 .part v0x256cb20_0, 8, 1;
L_0x2571310 .part v0x256cb20_0, 9, 1;
L_0x25714a0 .part v0x256cb20_0, 7, 1;
L_0x2571540 .part v0x256cb20_0, 9, 1;
L_0x2571700 .reduce/nor v0x256c7f0_0;
L_0x2571830 .part v0x256cb20_0, 0, 5;
L_0x2571a20 .reduce/or L_0x2571830;
L_0x2571ac0 .part v0x256cb20_0, 7, 1;
L_0x2571c50 .part v0x256cb20_0, 8, 1;
L_0x2571dc0 .part v0x256cb20_0, 9, 1;
L_0x2571ff0 .part v0x256cb20_0, 0, 1;
L_0x2572090 .part v0x256cb20_0, 8, 1;
L_0x25722b0 .part v0x256cb20_0, 9, 1;
L_0x2572570 .part v0x256cb20_0, 1, 1;
L_0x2572740 .part v0x256cb20_0, 2, 1;
L_0x2572a60 .part v0x256cb20_0, 3, 1;
L_0x2572cc0 .part v0x256cb20_0, 4, 1;
L_0x2572e50 .part v0x256cb20_0, 5, 1;
L_0x2573100 .part v0x256cb20_0, 6, 1;
L_0x25731a0 .part v0x256cb20_0, 7, 1;
L_0x2572ef0 .reduce/nor v0x256c7f0_0;
L_0x2573540 .part v0x256cb20_0, 5, 1;
LS_0x25737e0_0_0 .concat8 [ 1 1 1 1], L_0x2543020, L_0x25724b0, L_0x2572130, L_0x25729f0;
LS_0x25737e0_0_4 .concat8 [ 1 1 1 1], L_0x2572b90, L_0x2572d60, L_0x2572f90, L_0x25733f0;
LS_0x25737e0_0_8 .concat8 [ 1 1 0 0], L_0x25736a0, L_0x2573d60;
L_0x25737e0 .concat8 [ 4 4 2 0], LS_0x25737e0_0_0, LS_0x25737e0_0_4, LS_0x25737e0_0_8;
L_0x2573b50 .reduce/nor v0x256c7f0_0;
L_0x2573cc0 .part v0x256cb20_0, 6, 1;
S_0x256b540 .scope module, "stim1" "stimulus_gen" 3 166, 3 29 0, S_0x250e9f0;
 .timescale -12 -12;
    .port_info 0 /INPUT 1 "clk";
    .port_info 1 /OUTPUT 1 "in";
    .port_info 2 /OUTPUT 10 "state";
    .port_info 3 /INPUT 1 "tb_match";
    .port_info 4 /INPUT 10 "next_state_ref";
    .port_info 5 /INPUT 10 "next_state_dut";
    .port_info 6 /OUTPUT 512 "wavedrom_title";
    .port_info 7 /OUTPUT 1 "wavedrom_enable";
v0x256c570_0 .net "clk", 0 0, v0x2570760_0;  1 drivers
v0x256c650_0 .var/2s "errored1", 31 0;
v0x256c730_0 .var/2s "errored2", 31 0;
v0x256c7f0_0 .var "in", 0 0;
v0x256c890_0 .net "next_state_dut", 9 0, L_0x2575a90;  alias, 1 drivers
v0x256c9a0_0 .net "next_state_ref", 9 0, L_0x25737e0;  alias, 1 drivers
v0x256ca60_0 .var/2s "onehot_error", 31 0;
v0x256cb20_0 .var "state", 9 0;
v0x256cbe0_0 .var "state_error", 9 0;
v0x256cca0_0 .net "tb_match", 0 0, L_0x2577520;  alias, 1 drivers
v0x256cd60_0 .var "wavedrom_enable", 0 0;
v0x256ce20_0 .var "wavedrom_title", 511 0;
E_0x250a470 .event negedge, v0x256c570_0;
E_0x250a6c0 .event posedge, v0x256c570_0;
S_0x256b780 .scope begin, "$ivl_for_loop0" "$ivl_for_loop0" 3 69, 3 69 0, S_0x256b540;
 .timescale -12 -12;
v0x256b9c0_0 .var/2s "i", 31 0;
E_0x2509d40/0 .event negedge, v0x256c570_0;
E_0x2509d40/1 .event posedge, v0x256c570_0;
E_0x2509d40 .event/or E_0x2509d40/0, E_0x2509d40/1;
S_0x256bac0 .scope begin, "$ivl_for_loop1" "$ivl_for_loop1" 3 74, 3 74 0, S_0x256b540;
 .timescale -12 -12;
v0x256bcc0_0 .var/2s "i", 31 0;
S_0x256bda0 .scope begin, "$ivl_for_loop2" "$ivl_for_loop2" 3 114, 3 114 0, S_0x256b540;
 .timescale -12 -12;
v0x256bf80_0 .var/2s "i", 31 0;
S_0x256c060 .scope task, "wavedrom_start" "wavedrom_start" 3 45, 3 45 0, S_0x256b540;
 .timescale -12 -12;
v0x256c240_0 .var "title", 511 0;
TD_tb.stim1.wavedrom_start ;
    %end;
S_0x256c340 .scope task, "wavedrom_stop" "wavedrom_stop" 3 48, 3 48 0, S_0x256b540;
 .timescale -12 -12;
TD_tb.stim1.wavedrom_stop ;
    %delay 1, 0;
    %end;
S_0x256d000 .scope module, "top_module1" "top_module" 3 178, 4 1 0, S_0x250e9f0;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "in";
    .port_info 1 /INPUT 10 "state";
    .port_info 2 /OUTPUT 10 "next_state";
    .port_info 3 /OUTPUT 1 "out1";
    .port_info 4 /OUTPUT 1 "out2";
L_0x2574000 .functor NOT 1, v0x256c7f0_0, C4<0>, C4<0>, C4<0>;
L_0x2574070 .functor AND 1, L_0x2573f60, L_0x2574000, C4<1>, C4<1>;
L_0x2574220 .functor AND 1, L_0x2574180, v0x256c7f0_0, C4<1>, C4<1>;
L_0x2574380 .functor NOT 1, v0x256c7f0_0, C4<0>, C4<0>, C4<0>;
L_0x2574600 .functor AND 1, L_0x25742e0, L_0x2574380, C4<1>, C4<1>;
L_0x25747e0 .functor AND 1, L_0x2574710, v0x256c7f0_0, C4<1>, C4<1>;
L_0x2574980 .functor NOT 1, v0x256c7f0_0, C4<0>, C4<0>, C4<0>;
L_0x25749f0 .functor AND 1, L_0x25748e0, L_0x2574980, C4<1>, C4<1>;
L_0x2574c30 .functor AND 1, L_0x2574b50, v0x256c7f0_0, C4<1>, C4<1>;
L_0x2574d90 .functor NOT 1, v0x256c7f0_0, C4<0>, C4<0>, C4<0>;
L_0x2574e60 .functor AND 1, L_0x2574cf0, L_0x2574d90, C4<1>, C4<1>;
L_0x2575010 .functor AND 1, L_0x2574f20, v0x256c7f0_0, C4<1>, C4<1>;
L_0x25755f0 .functor NOT 1, v0x256c7f0_0, C4<0>, C4<0>, C4<0>;
L_0x2575660 .functor AND 1, L_0x2575140, L_0x25755f0, C4<1>, C4<1>;
L_0x25750d0 .functor AND 1, L_0x25757f0, v0x256c7f0_0, C4<1>, C4<1>;
L_0x25758f0 .functor OR 1, L_0x2575660, L_0x25750d0, C4<0>, C4<0>;
L_0x2575f10 .functor NOT 1, v0x256c7f0_0, C4<0>, C4<0>, C4<0>;
L_0x2575f80 .functor AND 1, L_0x2575e00, L_0x2575f10, C4<1>, C4<1>;
L_0x25761d0 .functor AND 1, L_0x2576130, v0x256c7f0_0, C4<1>, C4<1>;
L_0x2576290 .functor OR 1, L_0x2575f80, L_0x25761d0, C4<0>, C4<0>;
L_0x2575ea0 .functor NOT 1, v0x256c7f0_0, C4<0>, C4<0>, C4<0>;
L_0x2576520 .functor AND 1, L_0x2576090, L_0x2575ea0, C4<1>, C4<1>;
L_0x2576790 .functor AND 1, L_0x25766f0, v0x256c7f0_0, C4<1>, C4<1>;
L_0x2576850 .functor OR 1, L_0x2576520, L_0x2576790, C4<0>, C4<0>;
L_0x2576bb0 .functor NOT 1, v0x256c7f0_0, C4<0>, C4<0>, C4<0>;
L_0x2576c20 .functor AND 1, L_0x2576a80, L_0x2576bb0, C4<1>, C4<1>;
L_0x2576eb0 .functor AND 1, L_0x2576e10, v0x256c7f0_0, C4<1>, C4<1>;
L_0x2576f70 .functor OR 1, L_0x2576c20, L_0x2576eb0, C4<0>, C4<0>;
v0x256d270_0 .net *"_ivl_101", 0 0, L_0x2576c20;  1 drivers
v0x256d350_0 .net *"_ivl_104", 0 0, L_0x2576e10;  1 drivers
v0x256d430_0 .net *"_ivl_105", 0 0, L_0x2576eb0;  1 drivers
v0x256d520_0 .net *"_ivl_11", 0 0, L_0x2574180;  1 drivers
v0x256d600_0 .net *"_ivl_12", 0 0, L_0x2574220;  1 drivers
v0x256d730_0 .net *"_ivl_17", 0 0, L_0x25742e0;  1 drivers
v0x256d810_0 .net *"_ivl_18", 0 0, L_0x2574380;  1 drivers
v0x256d8f0_0 .net *"_ivl_20", 0 0, L_0x2574600;  1 drivers
v0x256d9d0_0 .net *"_ivl_25", 0 0, L_0x2574710;  1 drivers
v0x256db40_0 .net *"_ivl_26", 0 0, L_0x25747e0;  1 drivers
v0x256dc20_0 .net *"_ivl_3", 0 0, L_0x2573f60;  1 drivers
v0x256dd00_0 .net *"_ivl_31", 0 0, L_0x25748e0;  1 drivers
v0x256dde0_0 .net *"_ivl_32", 0 0, L_0x2574980;  1 drivers
v0x256dec0_0 .net *"_ivl_34", 0 0, L_0x25749f0;  1 drivers
v0x256dfa0_0 .net *"_ivl_39", 0 0, L_0x2574b50;  1 drivers
v0x256e080_0 .net *"_ivl_4", 0 0, L_0x2574000;  1 drivers
v0x256e160_0 .net *"_ivl_40", 0 0, L_0x2574c30;  1 drivers
v0x256e350_0 .net *"_ivl_45", 0 0, L_0x2574cf0;  1 drivers
v0x256e430_0 .net *"_ivl_46", 0 0, L_0x2574d90;  1 drivers
v0x256e510_0 .net *"_ivl_48", 0 0, L_0x2574e60;  1 drivers
v0x256e5f0_0 .net *"_ivl_53", 0 0, L_0x2574f20;  1 drivers
v0x256e6d0_0 .net *"_ivl_54", 0 0, L_0x2575010;  1 drivers
v0x256e7b0_0 .net *"_ivl_59", 0 0, L_0x2575140;  1 drivers
v0x256e890_0 .net *"_ivl_6", 0 0, L_0x2574070;  1 drivers
v0x256e970_0 .net *"_ivl_60", 0 0, L_0x25755f0;  1 drivers
v0x256ea50_0 .net *"_ivl_62", 0 0, L_0x2575660;  1 drivers
v0x256eb30_0 .net *"_ivl_65", 0 0, L_0x25757f0;  1 drivers
v0x256ec10_0 .net *"_ivl_66", 0 0, L_0x25750d0;  1 drivers
v0x256ecf0_0 .net *"_ivl_68", 0 0, L_0x25758f0;  1 drivers
v0x256edd0_0 .net *"_ivl_74", 0 0, L_0x2575e00;  1 drivers
v0x256eeb0_0 .net *"_ivl_75", 0 0, L_0x2575f10;  1 drivers
v0x256ef90_0 .net *"_ivl_77", 0 0, L_0x2575f80;  1 drivers
v0x256f070_0 .net *"_ivl_80", 0 0, L_0x2576130;  1 drivers
v0x256f360_0 .net *"_ivl_81", 0 0, L_0x25761d0;  1 drivers
v0x256f440_0 .net *"_ivl_83", 0 0, L_0x2576290;  1 drivers
v0x256f520_0 .net *"_ivl_86", 0 0, L_0x2576090;  1 drivers
v0x256f600_0 .net *"_ivl_87", 0 0, L_0x2575ea0;  1 drivers
v0x256f6e0_0 .net *"_ivl_89", 0 0, L_0x2576520;  1 drivers
v0x256f7c0_0 .net *"_ivl_92", 0 0, L_0x25766f0;  1 drivers
v0x256f8a0_0 .net *"_ivl_93", 0 0, L_0x2576790;  1 drivers
v0x256f980_0 .net *"_ivl_98", 0 0, L_0x2576a80;  1 drivers
v0x256fa60_0 .net *"_ivl_99", 0 0, L_0x2576bb0;  1 drivers
v0x256fb40_0 .net "in", 0 0, v0x256c7f0_0;  alias, 1 drivers
v0x256fbe0_0 .net "next_state", 9 0, L_0x2575a90;  alias, 1 drivers
v0x256fca0_0 .net "out1", 0 0, L_0x2576850;  alias, 1 drivers
v0x256fd40_0 .net "out2", 0 0, L_0x2576f70;  alias, 1 drivers
v0x256fe00_0 .net "state", 9 0, v0x256cb20_0;  alias, 1 drivers
L_0x2573f60 .part v0x256cb20_0, 0, 1;
L_0x2574180 .part v0x256cb20_0, 0, 1;
L_0x25742e0 .part v0x256cb20_0, 1, 1;
L_0x2574710 .part v0x256cb20_0, 1, 1;
L_0x25748e0 .part v0x256cb20_0, 2, 1;
L_0x2574b50 .part v0x256cb20_0, 2, 1;
L_0x2574cf0 .part v0x256cb20_0, 3, 1;
L_0x2574f20 .part v0x256cb20_0, 3, 1;
L_0x2575140 .part v0x256cb20_0, 4, 1;
L_0x25757f0 .part v0x256cb20_0, 5, 1;
LS_0x2575a90_0_0 .concat8 [ 1 1 1 1], L_0x2574070, L_0x2574220, L_0x2574600, L_0x25747e0;
LS_0x2575a90_0_4 .concat8 [ 1 1 1 1], L_0x25749f0, L_0x2574c30, L_0x2574e60, L_0x2575010;
LS_0x2575a90_0_8 .concat8 [ 1 1 0 0], L_0x25758f0, L_0x2576290;
L_0x2575a90 .concat8 [ 4 4 2 0], LS_0x2575a90_0_0, LS_0x2575a90_0_4, LS_0x2575a90_0_8;
L_0x2575e00 .part v0x256cb20_0, 5, 1;
L_0x2576130 .part v0x256cb20_0, 6, 1;
L_0x2576090 .part v0x256cb20_0, 7, 1;
L_0x25766f0 .part v0x256cb20_0, 8, 1;
L_0x2576a80 .part v0x256cb20_0, 9, 1;
L_0x2576e10 .part v0x256cb20_0, 7, 1;
S_0x256ffb0 .scope task, "wait_for_end_of_timestep" "wait_for_end_of_timestep" 3 187, 3 187 0, S_0x250e9f0;
 .timescale -12 -12;
E_0x24f1a20 .event anyedge, v0x2570e40_0;
TD_tb.wait_for_end_of_timestep ;
    %pushi/vec4 5, 0, 32;
T_2.0 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_2.1, 5;
    %jmp/1 T_2.1, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %load/vec4 v0x2570e40_0;
    %nor/r;
    %assign/vec4 v0x2570e40_0, 0;
    %wait E_0x24f1a20;
    %jmp T_2.0;
T_2.1 ;
    %pop/vec4 1;
    %end;
    .scope S_0x256b540;
T_3 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x256c650_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x256c730_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x256ca60_0, 0, 32;
    %pushi/vec4 0, 0, 10;
    %store/vec4 v0x256cbe0_0, 0, 10;
    %end;
    .thread T_3, $init;
    .scope S_0x256b540;
T_4 ;
    %pushi/vec4 2, 0, 32;
T_4.0 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_4.1, 5;
    %jmp/1 T_4.1, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_0x250a6c0;
    %jmp T_4.0;
T_4.1 ;
    %pop/vec4 1;
T_4.2 ;
    %wait E_0x2509d40;
    %load/vec4 v0x256cbe0_0;
    %load/vec4 v0x256c9a0_0;
    %load/vec4 v0x256c890_0;
    %xor;
    %or;
    %assign/vec4 v0x256cbe0_0, 0;
    %jmp T_4.2;
T_4.3 ;
    %end;
    .thread T_4;
    .scope S_0x256b540;
T_5 ;
    %pushi/vec4 0, 0, 10;
    %assign/vec4 v0x256cb20_0, 0;
    %wait E_0x250a470;
    %fork t_1, S_0x256b780;
    %jmp t_0;
    .scope S_0x256b780;
t_1 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x256b9c0_0, 0, 32;
T_5.0 ; Top of for-loop 
    %load/vec4 v0x256b9c0_0;
    %cmpi/s 10, 0, 32;
    %jmp/0xz T_5.1, 5;
    %wait E_0x2509d40;
    %pushi/vec4 1, 0, 10;
    %load/vec4 v0x256b9c0_0;
    %ix/vec4 4;
    %shiftl 4;
    %assign/vec4 v0x256cb20_0, 0;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0x256c7f0_0, 0;
T_5.2 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x256b9c0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x256b9c0_0, 0, 32;
    %jmp T_5.0;
T_5.1 ; for-loop exit label
    %end;
    .scope S_0x256b540;
t_0 %join;
    %fork t_3, S_0x256bac0;
    %jmp t_2;
    .scope S_0x256bac0;
t_3 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x256bcc0_0, 0, 32;
T_5.3 ; Top of for-loop 
    %load/vec4 v0x256bcc0_0;
    %cmpi/s 10, 0, 32;
    %jmp/0xz T_5.4, 5;
    %wait E_0x2509d40;
    %pushi/vec4 1, 0, 10;
    %load/vec4 v0x256bcc0_0;
    %ix/vec4 4;
    %shiftl 4;
    %assign/vec4 v0x256cb20_0, 0;
    %pushi/vec4 1, 0, 1;
    %assign/vec4 v0x256c7f0_0, 0;
T_5.5 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x256bcc0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x256bcc0_0, 0, 32;
    %jmp T_5.3;
T_5.4 ; for-loop exit label
    %end;
    .scope S_0x256b540;
t_2 %join;
    %wait E_0x250a470;
    %fork TD_tb.stim1.wavedrom_stop, S_0x256c340;
    %join;
    %pushi/vec4 200, 0, 32;
T_5.6 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_5.7, 5;
    %jmp/1 T_5.7, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_0x2509d40;
    %pushi/vec4 1, 0, 10;
    %vpi_func 3 83 "$random" 32 {0 0 0};
    %pushi/vec4 10, 0, 32;
    %mod;
    %ix/vec4 4;
    %shiftl 4;
    %assign/vec4 v0x256cb20_0, 0;
    %vpi_func 3 84 "$random" 32 {0 0 0};
    %pad/s 1;
    %assign/vec4 v0x256c7f0_0, 0;
    %load/vec4 v0x256cca0_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.8, 8;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x256ca60_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x256ca60_0, 0, 32;
T_5.8 ;
    %jmp T_5.6;
T_5.7 ;
    %pop/vec4 1;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x256c650_0, 0, 32;
    %pushi/vec4 400, 0, 32;
T_5.10 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_5.11, 5;
    %jmp/1 T_5.11, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_0x2509d40;
    %pushi/vec4 1, 0, 10;
    %vpi_func 3 91 "$random" 32 {0 0 0};
    %pushi/vec4 10, 0, 32;
    %mod;
    %ix/vec4 4;
    %shiftl 4;
    %pushi/vec4 1, 0, 10;
    %vpi_func 3 91 "$random" 32 {0 0 0};
    %pushi/vec4 10, 0, 32;
    %mod;
    %ix/vec4 4;
    %shiftl 4;
    %or;
    %assign/vec4 v0x256cb20_0, 0;
    %vpi_func 3 92 "$random" 32 {0 0 0};
    %pad/s 1;
    %assign/vec4 v0x256c7f0_0, 0;
    %load/vec4 v0x256cca0_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.12, 8;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x256c650_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x256c650_0, 0, 32;
T_5.12 ;
    %jmp T_5.10;
T_5.11 ;
    %pop/vec4 1;
    %load/vec4 v0x256ca60_0;
    %nor/r;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_5.16, 9;
    %load/vec4 v0x256c650_0;
    %pushi/vec4 0, 0, 32;
    %cmp/ne;
    %flag_get/vec4 4;
    %and;
T_5.16;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.14, 8;
    %vpi_call/w 3 98 "$display", "Hint: Your circuit passed when given only one-hot inputs, but not with two-hot inputs." {0 0 0};
T_5.14 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x256c730_0, 0, 32;
    %pushi/vec4 800, 0, 32;
T_5.17 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_5.18, 5;
    %jmp/1 T_5.18, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_0x2509d40;
    %vpi_func 3 103 "$random" 32 {0 0 0};
    %pad/s 10;
    %assign/vec4 v0x256cb20_0, 0;
    %vpi_func 3 104 "$random" 32 {0 0 0};
    %pad/s 1;
    %assign/vec4 v0x256c7f0_0, 0;
    %load/vec4 v0x256cca0_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.19, 8;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x256c730_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x256c730_0, 0, 32;
T_5.19 ;
    %jmp T_5.17;
T_5.18 ;
    %pop/vec4 1;
    %load/vec4 v0x256ca60_0;
    %nor/r;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_5.23, 9;
    %load/vec4 v0x256c730_0;
    %pushi/vec4 0, 0, 32;
    %cmp/ne;
    %flag_get/vec4 4;
    %and;
T_5.23;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.21, 8;
    %vpi_call/w 3 109 "$display", "Hint: Your circuit passed when given only one-hot inputs, but not with random inputs." {0 0 0};
T_5.21 ;
    %load/vec4 v0x256ca60_0;
    %nor/r;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_5.26, 9;
    %load/vec4 v0x256c650_0;
    %cmpi/ne 0, 0, 32;
    %flag_get/vec4 4;
    %jmp/1 T_5.27, 4;
    %load/vec4 v0x256c730_0;
    %pushi/vec4 0, 0, 32;
    %cmp/ne;
    %flag_get/vec4 4;
    %or;
T_5.27;
    %and;
T_5.26;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.24, 8;
    %vpi_call/w 3 112 "$display", "Hint: Are you doing something more complicated than deriving state transition equations by inspection?\012" {0 0 0};
T_5.24 ;
    %fork t_5, S_0x256bda0;
    %jmp t_4;
    .scope S_0x256bda0;
t_5 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x256bf80_0, 0, 32;
T_5.28 ; Top of for-loop 
    %load/vec4 v0x256bf80_0;
    %cmpi/u 10, 0, 32;
    %jmp/0xz T_5.29, 5;
    %load/vec4 v0x256cbe0_0;
    %load/vec4 v0x256bf80_0;
    %part/s 1;
    %cmpi/e 0, 0, 1;
    %flag_mov 8, 6;
    %jmp/0 T_5.31, 8;
    %pushi/vec4 25455, 0, 32; draw_string_vec4
    %pushi/vec4 1920099683, 0, 32; draw_string_vec4
    %concat/vec4; draw_string_vec4
    %pushi/vec4 116, 0, 8; draw_string_vec4
    %concat/vec4; draw_string_vec4
    %jmp/1 T_5.32, 8;
T_5.31 ; End of true expr.
    %pushi/vec4 1768842095, 0, 32; draw_string_vec4
    %pushi/vec4 1920099683, 0, 32; draw_string_vec4
    %concat/vec4; draw_string_vec4
    %pushi/vec4 116, 0, 8; draw_string_vec4
    %concat/vec4; draw_string_vec4
    %jmp/0 T_5.32, 8;
 ; End of false expr.
    %blend;
T_5.32;
    %vpi_call/w 3 115 "$display", "Hint: next_state[%0d] is %s.", v0x256bf80_0, S<0,vec4,u72> {1 0 0};
T_5.30 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x256bf80_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x256bf80_0, 0, 32;
    %jmp T_5.28;
T_5.29 ; for-loop exit label
    %end;
    .scope S_0x256b540;
t_4 %join;
    %delay 1, 0;
    %vpi_call/w 3 117 "$finish" {0 0 0};
    %end;
    .thread T_5;
    .scope S_0x250e9f0;
T_6 ;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x2570760_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x2570e40_0, 0, 1;
    %end;
    .thread T_6, $init;
    .scope S_0x250e9f0;
T_7 ;
T_7.0 ;
    %delay 5, 0;
    %load/vec4 v0x2570760_0;
    %inv;
    %store/vec4 v0x2570760_0, 0, 1;
    %jmp T_7.0;
T_7.1 ;
    %end;
    .thread T_7;
    .scope S_0x250e9f0;
T_8 ;
    %vpi_call/w 3 158 "$dumpfile", "wave.vcd" {0 0 0};
    %vpi_call/w 3 159 "$dumpvars", 32'sb00000000000000000000000000000001, v0x256c570_0, v0x2570fb0_0, v0x2570800_0, v0x2570d00_0, v0x2570940_0, v0x25708a0_0, v0x2570af0_0, v0x2570a50_0, v0x2570c30_0, v0x2570b90_0 {0 0 0};
    %end;
    .thread T_8;
    .scope S_0x250e9f0;
T_9 ;
    %load/vec4 v0x2570da0_0;
    %parti/u 32, 192, 32;
    %cmpi/ne 0, 0, 32;
    %jmp/0xz  T_9.0, 4;
    %load/vec4 v0x2570da0_0;
    %parti/u 32, 192, 32;
    %load/vec4 v0x2570da0_0;
    %parti/u 32, 160, 32;
    %vpi_call/w 3 196 "$display", "Hint: Output '%s' has %0d mismatches. First mismatch occurred at time %0d.", "next_state", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %jmp T_9.1;
T_9.0 ;
    %vpi_call/w 3 197 "$display", "Hint: Output '%s' has no mismatches.", "next_state" {0 0 0};
T_9.1 ;
    %load/vec4 v0x2570da0_0;
    %parti/u 32, 128, 32;
    %cmpi/ne 0, 0, 32;
    %jmp/0xz  T_9.2, 4;
    %load/vec4 v0x2570da0_0;
    %parti/u 32, 128, 32;
    %load/vec4 v0x2570da0_0;
    %parti/u 32, 96, 32;
    %vpi_call/w 3 198 "$display", "Hint: Output '%s' has %0d mismatches. First mismatch occurred at time %0d.", "out1", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %jmp T_9.3;
T_9.2 ;
    %vpi_call/w 3 199 "$display", "Hint: Output '%s' has no mismatches.", "out1" {0 0 0};
T_9.3 ;
    %load/vec4 v0x2570da0_0;
    %parti/u 32, 64, 32;
    %cmpi/ne 0, 0, 32;
    %jmp/0xz  T_9.4, 4;
    %load/vec4 v0x2570da0_0;
    %parti/u 32, 64, 32;
    %load/vec4 v0x2570da0_0;
    %parti/u 32, 32, 32;
    %vpi_call/w 3 200 "$display", "Hint: Output '%s' has %0d mismatches. First mismatch occurred at time %0d.", "out2", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %jmp T_9.5;
T_9.4 ;
    %vpi_call/w 3 201 "$display", "Hint: Output '%s' has no mismatches.", "out2" {0 0 0};
T_9.5 ;
    %load/vec4 v0x2570da0_0;
    %parti/u 32, 256, 32;
    %load/vec4 v0x2570da0_0;
    %parti/u 32, 0, 32;
    %vpi_call/w 3 203 "$display", "Hint: Total mismatched samples is %1d out of %1d samples\012", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %vpi_call/w 3 204 "$display", "Simulation finished at %0d ps", $time {0 0 0};
    %load/vec4 v0x2570da0_0;
    %parti/u 32, 256, 32;
    %load/vec4 v0x2570da0_0;
    %parti/u 32, 0, 32;
    %vpi_call/w 3 205 "$display", "Mismatches: %1d in %1d samples", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %end;
    .thread T_9, $final;
    .scope S_0x250e9f0;
T_10 ;
    %wait E_0x2509d40;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x2570da0_0;
    %pushi/vec4 0, 0, 32;
    %part/u 32;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x2570da0_0, 4, 32;
    %load/vec4 v0x2570ee0_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_10.0, 8;
    %load/vec4 v0x2570da0_0;
    %parti/u 32, 256, 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_10.2, 4;
    %vpi_func 3 216 "$time" 64 {0 0 0};
    %cast2;
    %pad/u 32;
    %ix/load 4, 224, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x2570da0_0, 4, 32;
T_10.2 ;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x2570da0_0;
    %pushi/vec4 256, 0, 32;
    %part/u 32;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %ix/load 4, 256, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x2570da0_0, 4, 32;
T_10.0 ;
    %load/vec4 v0x2570940_0;
    %load/vec4 v0x2570940_0;
    %load/vec4 v0x25708a0_0;
    %xor;
    %load/vec4 v0x2570940_0;
    %xor;
    %cmp/ne;
    %jmp/0xz  T_10.4, 6;
    %load/vec4 v0x2570da0_0;
    %parti/u 32, 192, 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_10.6, 4;
    %vpi_func 3 220 "$time" 64 {0 0 0};
    %cast2;
    %pad/u 32;
    %ix/load 4, 160, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x2570da0_0, 4, 32;
T_10.6 ;
    %load/vec4 v0x2570da0_0;
    %parti/u 32, 192, 32;
    %addi 1, 0, 32;
    %ix/load 4, 192, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x2570da0_0, 4, 32;
T_10.4 ;
    %load/vec4 v0x2570af0_0;
    %load/vec4 v0x2570af0_0;
    %load/vec4 v0x2570a50_0;
    %xor;
    %load/vec4 v0x2570af0_0;
    %xor;
    %cmp/ne;
    %jmp/0xz  T_10.8, 6;
    %load/vec4 v0x2570da0_0;
    %parti/u 32, 128, 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_10.10, 4;
    %vpi_func 3 223 "$time" 64 {0 0 0};
    %cast2;
    %pad/u 32;
    %ix/load 4, 96, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x2570da0_0, 4, 32;
T_10.10 ;
    %load/vec4 v0x2570da0_0;
    %parti/u 32, 128, 32;
    %addi 1, 0, 32;
    %ix/load 4, 128, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x2570da0_0, 4, 32;
T_10.8 ;
    %load/vec4 v0x2570c30_0;
    %load/vec4 v0x2570c30_0;
    %load/vec4 v0x2570b90_0;
    %xor;
    %load/vec4 v0x2570c30_0;
    %xor;
    %cmp/ne;
    %jmp/0xz  T_10.12, 6;
    %load/vec4 v0x2570da0_0;
    %parti/u 32, 64, 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_10.14, 4;
    %vpi_func 3 226 "$time" 64 {0 0 0};
    %cast2;
    %pad/u 32;
    %ix/load 4, 32, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x2570da0_0, 4, 32;
T_10.14 ;
    %load/vec4 v0x2570da0_0;
    %parti/u 32, 64, 32;
    %addi 1, 0, 32;
    %ix/load 4, 64, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x2570da0_0, 4, 32;
T_10.12 ;
    %jmp T_10;
    .thread T_10;
# The file index is used to find the file name in the following table.
:file_names 5;
    "N/A";
    "<interactive>";
    "-";
    "/home/jmb9986/AutoChip/autochip_scripts/../verilogeval_prompts_tbs/ve_testbenches_human/fsm_onehot/fsm_onehot_tb.sv";
    "/home/jmb9986/AutoChip/autochip_scripts/outputs/gpt3p5/can55_depth0/human/fsm_onehot/iter0/response37/top_module.sv";
