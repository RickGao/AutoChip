#! /usr/local/bin/vvp
:ivl_version "13.0 (devel)" "(s20221226-331-g77d7f0b8f)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision - 12;
:vpi_module "/usr/local/lib/ivl/system.vpi";
:vpi_module "/usr/local/lib/ivl/vhdl_sys.vpi";
:vpi_module "/usr/local/lib/ivl/vhdl_textio.vpi";
:vpi_module "/usr/local/lib/ivl/v2005_math.vpi";
:vpi_module "/usr/local/lib/ivl/va_math.vpi";
:vpi_module "/usr/local/lib/ivl/v2009.vpi";
S_0x1f07cb0 .scope package, "$unit" "$unit" 2 1;
 .timescale 0 0;
S_0x1ed6320 .scope module, "tb" "tb" 3 84;
 .timescale -12 -12;
L_0x1edd8a0 .functor NOT 1, L_0x1f33e50, C4<0>, C4<0>, C4<0>;
L_0x1f33c30 .functor XOR 2, L_0x1f33ad0, L_0x1f33b90, C4<00>, C4<00>;
L_0x1f33d40 .functor XOR 2, L_0x1f33c30, L_0x1f33ca0, C4<00>, C4<00>;
v0x1f30470_0 .net *"_ivl_10", 1 0, L_0x1f33ca0;  1 drivers
v0x1f30570_0 .net *"_ivl_12", 1 0, L_0x1f33d40;  1 drivers
v0x1f30650_0 .net *"_ivl_2", 1 0, L_0x1f33a10;  1 drivers
v0x1f30710_0 .net *"_ivl_4", 1 0, L_0x1f33ad0;  1 drivers
v0x1f307f0_0 .net *"_ivl_6", 1 0, L_0x1f33b90;  1 drivers
v0x1f30920_0 .net *"_ivl_8", 1 0, L_0x1f33c30;  1 drivers
v0x1f30a00_0 .net "a", 0 0, v0x1f2e2b0_0;  1 drivers
v0x1f30aa0_0 .net "b", 0 0, v0x1f2e350_0;  1 drivers
v0x1f30b40_0 .net "c", 0 0, v0x1f2e3f0_0;  1 drivers
v0x1f30be0_0 .var "clk", 0 0;
v0x1f30c80_0 .net "d", 0 0, v0x1f2e530_0;  1 drivers
v0x1f30d20_0 .net "out_pos_dut", 0 0, L_0x1f33880;  1 drivers
v0x1f30dc0_0 .net "out_pos_ref", 0 0, L_0x1f32400;  1 drivers
v0x1f30e60_0 .net "out_sop_dut", 0 0, L_0x1f32dc0;  1 drivers
v0x1f30f00_0 .net "out_sop_ref", 0 0, L_0x1f091c0;  1 drivers
v0x1f30fa0_0 .var/2u "stats1", 223 0;
v0x1f31040_0 .var/2u "strobe", 0 0;
v0x1f311f0_0 .net "tb_match", 0 0, L_0x1f33e50;  1 drivers
v0x1f312c0_0 .net "tb_mismatch", 0 0, L_0x1edd8a0;  1 drivers
v0x1f31360_0 .net "wavedrom_enable", 0 0, v0x1f2e800_0;  1 drivers
v0x1f31430_0 .net "wavedrom_title", 511 0, v0x1f2e8a0_0;  1 drivers
L_0x1f33a10 .concat [ 1 1 0 0], L_0x1f32400, L_0x1f091c0;
L_0x1f33ad0 .concat [ 1 1 0 0], L_0x1f32400, L_0x1f091c0;
L_0x1f33b90 .concat [ 1 1 0 0], L_0x1f33880, L_0x1f32dc0;
L_0x1f33ca0 .concat [ 1 1 0 0], L_0x1f32400, L_0x1f091c0;
L_0x1f33e50 .cmp/eeq 2, L_0x1f33a10, L_0x1f33d40;
S_0x1eda5d0 .scope module, "good1" "reference_module" 3 133, 3 4 0, S_0x1ed6320;
 .timescale -12 -12;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /INPUT 1 "c";
    .port_info 3 /INPUT 1 "d";
    .port_info 4 /OUTPUT 1 "out_sop";
    .port_info 5 /OUTPUT 1 "out_pos";
L_0x1eddc80 .functor AND 1, v0x1f2e3f0_0, v0x1f2e530_0, C4<1>, C4<1>;
L_0x1ede060 .functor NOT 1, v0x1f2e2b0_0, C4<0>, C4<0>, C4<0>;
L_0x1ede440 .functor NOT 1, v0x1f2e350_0, C4<0>, C4<0>, C4<0>;
L_0x1ede6c0 .functor AND 1, L_0x1ede060, L_0x1ede440, C4<1>, C4<1>;
L_0x1ef5680 .functor AND 1, L_0x1ede6c0, v0x1f2e3f0_0, C4<1>, C4<1>;
L_0x1f091c0 .functor OR 1, L_0x1eddc80, L_0x1ef5680, C4<0>, C4<0>;
L_0x1f31880 .functor NOT 1, v0x1f2e350_0, C4<0>, C4<0>, C4<0>;
L_0x1f318f0 .functor OR 1, L_0x1f31880, v0x1f2e530_0, C4<0>, C4<0>;
L_0x1f31a00 .functor AND 1, v0x1f2e3f0_0, L_0x1f318f0, C4<1>, C4<1>;
L_0x1f31ac0 .functor NOT 1, v0x1f2e2b0_0, C4<0>, C4<0>, C4<0>;
L_0x1f31b90 .functor OR 1, L_0x1f31ac0, v0x1f2e350_0, C4<0>, C4<0>;
L_0x1f31c00 .functor AND 1, L_0x1f31a00, L_0x1f31b90, C4<1>, C4<1>;
L_0x1f31d80 .functor NOT 1, v0x1f2e350_0, C4<0>, C4<0>, C4<0>;
L_0x1f31df0 .functor OR 1, L_0x1f31d80, v0x1f2e530_0, C4<0>, C4<0>;
L_0x1f31d10 .functor AND 1, v0x1f2e3f0_0, L_0x1f31df0, C4<1>, C4<1>;
L_0x1f31f80 .functor NOT 1, v0x1f2e2b0_0, C4<0>, C4<0>, C4<0>;
L_0x1f32080 .functor OR 1, L_0x1f31f80, v0x1f2e530_0, C4<0>, C4<0>;
L_0x1f32140 .functor AND 1, L_0x1f31d10, L_0x1f32080, C4<1>, C4<1>;
L_0x1f322f0 .functor XNOR 1, L_0x1f31c00, L_0x1f32140, C4<0>, C4<0>;
v0x1edd1d0_0 .net *"_ivl_0", 0 0, L_0x1eddc80;  1 drivers
v0x1edd5d0_0 .net *"_ivl_12", 0 0, L_0x1f31880;  1 drivers
v0x1edd9b0_0 .net *"_ivl_14", 0 0, L_0x1f318f0;  1 drivers
v0x1eddd90_0 .net *"_ivl_16", 0 0, L_0x1f31a00;  1 drivers
v0x1ede170_0 .net *"_ivl_18", 0 0, L_0x1f31ac0;  1 drivers
v0x1ede550_0 .net *"_ivl_2", 0 0, L_0x1ede060;  1 drivers
v0x1ede7d0_0 .net *"_ivl_20", 0 0, L_0x1f31b90;  1 drivers
v0x1f2c820_0 .net *"_ivl_24", 0 0, L_0x1f31d80;  1 drivers
v0x1f2c900_0 .net *"_ivl_26", 0 0, L_0x1f31df0;  1 drivers
v0x1f2c9e0_0 .net *"_ivl_28", 0 0, L_0x1f31d10;  1 drivers
v0x1f2cac0_0 .net *"_ivl_30", 0 0, L_0x1f31f80;  1 drivers
v0x1f2cba0_0 .net *"_ivl_32", 0 0, L_0x1f32080;  1 drivers
v0x1f2cc80_0 .net *"_ivl_36", 0 0, L_0x1f322f0;  1 drivers
L_0x7f116dabe018 .functor BUFT 1, C4<x>, C4<0>, C4<0>, C4<0>;
v0x1f2cd40_0 .net *"_ivl_38", 0 0, L_0x7f116dabe018;  1 drivers
v0x1f2ce20_0 .net *"_ivl_4", 0 0, L_0x1ede440;  1 drivers
v0x1f2cf00_0 .net *"_ivl_6", 0 0, L_0x1ede6c0;  1 drivers
v0x1f2cfe0_0 .net *"_ivl_8", 0 0, L_0x1ef5680;  1 drivers
v0x1f2d0c0_0 .net "a", 0 0, v0x1f2e2b0_0;  alias, 1 drivers
v0x1f2d180_0 .net "b", 0 0, v0x1f2e350_0;  alias, 1 drivers
v0x1f2d240_0 .net "c", 0 0, v0x1f2e3f0_0;  alias, 1 drivers
v0x1f2d300_0 .net "d", 0 0, v0x1f2e530_0;  alias, 1 drivers
v0x1f2d3c0_0 .net "out_pos", 0 0, L_0x1f32400;  alias, 1 drivers
v0x1f2d480_0 .net "out_sop", 0 0, L_0x1f091c0;  alias, 1 drivers
v0x1f2d540_0 .net "pos0", 0 0, L_0x1f31c00;  1 drivers
v0x1f2d600_0 .net "pos1", 0 0, L_0x1f32140;  1 drivers
L_0x1f32400 .functor MUXZ 1, L_0x7f116dabe018, L_0x1f31c00, L_0x1f322f0, C4<>;
S_0x1f2d780 .scope module, "stim1" "stimulus_gen" 3 126, 3 22 0, S_0x1ed6320;
 .timescale -12 -12;
    .port_info 0 /INPUT 1 "clk";
    .port_info 1 /OUTPUT 1 "a";
    .port_info 2 /OUTPUT 1 "b";
    .port_info 3 /OUTPUT 1 "c";
    .port_info 4 /OUTPUT 1 "d";
    .port_info 5 /OUTPUT 512 "wavedrom_title";
    .port_info 6 /OUTPUT 1 "wavedrom_enable";
    .port_info 7 /INPUT 1 "tb_match";
v0x1f2e2b0_0 .var "a", 0 0;
v0x1f2e350_0 .var "b", 0 0;
v0x1f2e3f0_0 .var "c", 0 0;
v0x1f2e490_0 .net "clk", 0 0, v0x1f30be0_0;  1 drivers
v0x1f2e530_0 .var "d", 0 0;
v0x1f2e620_0 .var/2u "fail", 0 0;
v0x1f2e6c0_0 .var/2u "fail1", 0 0;
v0x1f2e760_0 .net "tb_match", 0 0, L_0x1f33e50;  alias, 1 drivers
v0x1f2e800_0 .var "wavedrom_enable", 0 0;
v0x1f2e8a0_0 .var "wavedrom_title", 511 0;
E_0x1ee9040/0 .event negedge, v0x1f2e490_0;
E_0x1ee9040/1 .event posedge, v0x1f2e490_0;
E_0x1ee9040 .event/or E_0x1ee9040/0, E_0x1ee9040/1;
S_0x1f2dab0 .scope begin, "$ivl_for_loop0" "$ivl_for_loop0" 3 68, 3 68 0, S_0x1f2d780;
 .timescale -12 -12;
v0x1f2dcf0_0 .var/2s "i", 31 0;
E_0x1ee8ee0 .event posedge, v0x1f2e490_0;
S_0x1f2ddf0 .scope task, "wavedrom_start" "wavedrom_start" 3 34, 3 34 0, S_0x1f2d780;
 .timescale -12 -12;
v0x1f2dff0_0 .var "title", 511 0;
TD_tb.stim1.wavedrom_start ;
    %end;
S_0x1f2e0d0 .scope task, "wavedrom_stop" "wavedrom_stop" 3 37, 3 37 0, S_0x1f2d780;
 .timescale -12 -12;
TD_tb.stim1.wavedrom_stop ;
    %delay 1, 0;
    %end;
S_0x1f2ea80 .scope module, "top_module1" "top_module" 3 141, 4 1 0, S_0x1ed6320;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /INPUT 1 "c";
    .port_info 3 /INPUT 1 "d";
    .port_info 4 /OUTPUT 1 "out_sop";
    .port_info 5 /OUTPUT 1 "out_pos";
L_0x1f325b0 .functor AND 1, v0x1f2e3f0_0, v0x1f2e530_0, C4<1>, C4<1>;
L_0x1f32860 .functor NOT 1, v0x1f2e2b0_0, C4<0>, C4<0>, C4<0>;
L_0x1f328f0 .functor NOT 1, v0x1f2e350_0, C4<0>, C4<0>, C4<0>;
L_0x1f32a70 .functor AND 1, L_0x1f32860, L_0x1f328f0, C4<1>, C4<1>;
L_0x1f32bb0 .functor AND 1, L_0x1f32a70, v0x1f2e3f0_0, C4<1>, C4<1>;
L_0x1f32c70 .functor OR 1, L_0x1f325b0, L_0x1f32bb0, C4<0>, C4<0>;
L_0x1f32dc0 .functor BUFZ 1, L_0x1f32c70, C4<0>, C4<0>, C4<0>;
L_0x1f32ed0 .functor NOT 1, v0x1f2e350_0, C4<0>, C4<0>, C4<0>;
L_0x1f32f90 .functor OR 1, L_0x1f32ed0, v0x1f2e530_0, C4<0>, C4<0>;
L_0x1f33050 .functor AND 1, v0x1f2e3f0_0, L_0x1f32f90, C4<1>, C4<1>;
L_0x1f33170 .functor NOT 1, v0x1f2e2b0_0, C4<0>, C4<0>, C4<0>;
L_0x1f332f0 .functor OR 1, L_0x1f33170, v0x1f2e350_0, C4<0>, C4<0>;
L_0x1f333d0 .functor AND 1, L_0x1f33050, L_0x1f332f0, C4<1>, C4<1>;
L_0x1f334e0 .functor NOT 1, v0x1f2e2b0_0, C4<0>, C4<0>, C4<0>;
L_0x1f33360 .functor OR 1, L_0x1f334e0, v0x1f2e530_0, C4<0>, C4<0>;
L_0x1f33620 .functor AND 1, v0x1f2e3f0_0, L_0x1f33360, C4<1>, C4<1>;
L_0x1f33770 .functor XNOR 1, L_0x1f333d0, L_0x1f33620, C4<0>, C4<0>;
v0x1f2ec40_0 .net *"_ivl_0", 0 0, L_0x1f325b0;  1 drivers
v0x1f2ed20_0 .net *"_ivl_14", 0 0, L_0x1f32ed0;  1 drivers
v0x1f2ee00_0 .net *"_ivl_16", 0 0, L_0x1f32f90;  1 drivers
v0x1f2eef0_0 .net *"_ivl_18", 0 0, L_0x1f33050;  1 drivers
v0x1f2efd0_0 .net *"_ivl_2", 0 0, L_0x1f32860;  1 drivers
v0x1f2f100_0 .net *"_ivl_20", 0 0, L_0x1f33170;  1 drivers
v0x1f2f1e0_0 .net *"_ivl_22", 0 0, L_0x1f332f0;  1 drivers
v0x1f2f2c0_0 .net *"_ivl_26", 0 0, L_0x1f334e0;  1 drivers
v0x1f2f3a0_0 .net *"_ivl_28", 0 0, L_0x1f33360;  1 drivers
v0x1f2f510_0 .net *"_ivl_32", 0 0, L_0x1f33770;  1 drivers
L_0x7f116dabe060 .functor BUFT 1, C4<x>, C4<0>, C4<0>, C4<0>;
v0x1f2f5d0_0 .net *"_ivl_34", 0 0, L_0x7f116dabe060;  1 drivers
v0x1f2f6b0_0 .net *"_ivl_4", 0 0, L_0x1f328f0;  1 drivers
v0x1f2f790_0 .net *"_ivl_6", 0 0, L_0x1f32a70;  1 drivers
v0x1f2f870_0 .net *"_ivl_8", 0 0, L_0x1f32bb0;  1 drivers
v0x1f2f950_0 .net "a", 0 0, v0x1f2e2b0_0;  alias, 1 drivers
v0x1f2f9f0_0 .net "b", 0 0, v0x1f2e350_0;  alias, 1 drivers
v0x1f2fae0_0 .net "c", 0 0, v0x1f2e3f0_0;  alias, 1 drivers
v0x1f2fce0_0 .net "d", 0 0, v0x1f2e530_0;  alias, 1 drivers
v0x1f2fdd0_0 .net "out_pos", 0 0, L_0x1f33880;  alias, 1 drivers
v0x1f2fe90_0 .net "out_sop", 0 0, L_0x1f32dc0;  alias, 1 drivers
v0x1f2ff50_0 .net "pos0", 0 0, L_0x1f333d0;  1 drivers
v0x1f30010_0 .net "pos1", 0 0, L_0x1f33620;  1 drivers
v0x1f300d0_0 .net "sop", 0 0, L_0x1f32c70;  1 drivers
L_0x1f33880 .functor MUXZ 1, L_0x7f116dabe060, L_0x1f333d0, L_0x1f33770, C4<>;
S_0x1f30250 .scope task, "wait_for_end_of_timestep" "wait_for_end_of_timestep" 3 151, 3 151 0, S_0x1ed6320;
 .timescale -12 -12;
E_0x1ed29f0 .event anyedge, v0x1f31040_0;
TD_tb.wait_for_end_of_timestep ;
    %pushi/vec4 5, 0, 32;
T_2.0 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_2.1, 5;
    %jmp/1 T_2.1, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %load/vec4 v0x1f31040_0;
    %nor/r;
    %assign/vec4 v0x1f31040_0, 0;
    %wait E_0x1ed29f0;
    %jmp T_2.0;
T_2.1 ;
    %pop/vec4 1;
    %end;
    .scope S_0x1f2d780;
T_3 ;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x1f2e620_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x1f2e6c0_0, 0, 1;
    %end;
    .thread T_3, $init;
    .scope S_0x1f2d780;
T_4 ;
    %wait E_0x1ee9040;
    %load/vec4 v0x1f2e760_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_4.0, 8;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x1f2e620_0, 0, 1;
T_4.0 ;
    %jmp T_4;
    .thread T_4;
    .scope S_0x1f2d780;
T_5 ;
    %wait E_0x1ee8ee0;
    %pushi/vec4 0, 0, 4;
    %split/vec4 1;
    %assign/vec4 v0x1f2e530_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x1f2e3f0_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x1f2e350_0, 0;
    %assign/vec4 v0x1f2e2b0_0, 0;
    %wait E_0x1ee8ee0;
    %pushi/vec4 1, 0, 4;
    %split/vec4 1;
    %assign/vec4 v0x1f2e530_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x1f2e3f0_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x1f2e350_0, 0;
    %assign/vec4 v0x1f2e2b0_0, 0;
    %wait E_0x1ee8ee0;
    %pushi/vec4 2, 0, 4;
    %split/vec4 1;
    %assign/vec4 v0x1f2e530_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x1f2e3f0_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x1f2e350_0, 0;
    %assign/vec4 v0x1f2e2b0_0, 0;
    %wait E_0x1ee8ee0;
    %pushi/vec4 4, 0, 4;
    %split/vec4 1;
    %assign/vec4 v0x1f2e530_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x1f2e3f0_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x1f2e350_0, 0;
    %assign/vec4 v0x1f2e2b0_0, 0;
    %wait E_0x1ee8ee0;
    %pushi/vec4 5, 0, 4;
    %split/vec4 1;
    %assign/vec4 v0x1f2e530_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x1f2e3f0_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x1f2e350_0, 0;
    %assign/vec4 v0x1f2e2b0_0, 0;
    %wait E_0x1ee8ee0;
    %pushi/vec4 6, 0, 4;
    %split/vec4 1;
    %assign/vec4 v0x1f2e530_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x1f2e3f0_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x1f2e350_0, 0;
    %assign/vec4 v0x1f2e2b0_0, 0;
    %wait E_0x1ee8ee0;
    %pushi/vec4 7, 0, 4;
    %split/vec4 1;
    %assign/vec4 v0x1f2e530_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x1f2e3f0_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x1f2e350_0, 0;
    %assign/vec4 v0x1f2e2b0_0, 0;
    %wait E_0x1ee8ee0;
    %pushi/vec4 9, 0, 4;
    %split/vec4 1;
    %assign/vec4 v0x1f2e530_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x1f2e3f0_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x1f2e350_0, 0;
    %assign/vec4 v0x1f2e2b0_0, 0;
    %wait E_0x1ee8ee0;
    %pushi/vec4 10, 0, 4;
    %split/vec4 1;
    %assign/vec4 v0x1f2e530_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x1f2e3f0_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x1f2e350_0, 0;
    %assign/vec4 v0x1f2e2b0_0, 0;
    %wait E_0x1ee8ee0;
    %pushi/vec4 13, 0, 4;
    %split/vec4 1;
    %assign/vec4 v0x1f2e530_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x1f2e3f0_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x1f2e350_0, 0;
    %assign/vec4 v0x1f2e2b0_0, 0;
    %wait E_0x1ee8ee0;
    %pushi/vec4 14, 0, 4;
    %split/vec4 1;
    %assign/vec4 v0x1f2e530_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x1f2e3f0_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x1f2e350_0, 0;
    %assign/vec4 v0x1f2e2b0_0, 0;
    %wait E_0x1ee8ee0;
    %pushi/vec4 15, 0, 4;
    %split/vec4 1;
    %assign/vec4 v0x1f2e530_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x1f2e3f0_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x1f2e350_0, 0;
    %assign/vec4 v0x1f2e2b0_0, 0;
    %wait E_0x1ee8ee0;
    %load/vec4 v0x1f2e620_0;
    %store/vec4 v0x1f2e6c0_0, 0, 1;
    %fork t_1, S_0x1f2dab0;
    %jmp t_0;
    .scope S_0x1f2dab0;
t_1 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x1f2dcf0_0, 0, 32;
T_5.0 ; Top of for-loop 
    %load/vec4 v0x1f2dcf0_0;
    %cmpi/s 16, 0, 32;
    %jmp/0xz T_5.1, 5;
    %wait E_0x1ee8ee0;
    %load/vec4 v0x1f2dcf0_0;
    %pad/s 4;
    %split/vec4 1;
    %assign/vec4 v0x1f2e530_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x1f2e3f0_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x1f2e350_0, 0;
    %assign/vec4 v0x1f2e2b0_0, 0;
T_5.2 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x1f2dcf0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x1f2dcf0_0, 0, 32;
    %jmp T_5.0;
T_5.1 ; for-loop exit label
    %end;
    .scope S_0x1f2d780;
t_0 %join;
    %pushi/vec4 50, 0, 32;
T_5.3 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_5.4, 5;
    %jmp/1 T_5.4, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_0x1ee9040;
    %vpi_func 3 74 "$random" 32 {0 0 0};
    %pad/s 4;
    %split/vec4 1;
    %assign/vec4 v0x1f2e530_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x1f2e3f0_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x1f2e350_0, 0;
    %assign/vec4 v0x1f2e2b0_0, 0;
    %jmp T_5.3;
T_5.4 ;
    %pop/vec4 1;
    %load/vec4 v0x1f2e620_0;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_5.7, 9;
    %load/vec4 v0x1f2e6c0_0;
    %inv;
    %and;
T_5.7;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.5, 8;
    %vpi_call/w 3 77 "$display", "Hint: Your circuit passes on the 12 required input combinations, but doesn't match the don't-care cases. Are you using minimal SOP and POS?" {0 0 0};
T_5.5 ;
    %vpi_call/w 3 79 "$finish" {0 0 0};
    %end;
    .thread T_5;
    .scope S_0x1ed6320;
T_6 ;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x1f30be0_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x1f31040_0, 0, 1;
    %end;
    .thread T_6, $init;
    .scope S_0x1ed6320;
T_7 ;
T_7.0 ;
    %delay 5, 0;
    %load/vec4 v0x1f30be0_0;
    %inv;
    %store/vec4 v0x1f30be0_0, 0, 1;
    %jmp T_7.0;
T_7.1 ;
    %end;
    .thread T_7;
    .scope S_0x1ed6320;
T_8 ;
    %vpi_call/w 3 118 "$dumpfile", "wave.vcd" {0 0 0};
    %vpi_call/w 3 119 "$dumpvars", 32'sb00000000000000000000000000000001, v0x1f2e490_0, v0x1f312c0_0, v0x1f30a00_0, v0x1f30aa0_0, v0x1f30b40_0, v0x1f30c80_0, v0x1f30f00_0, v0x1f30e60_0, v0x1f30dc0_0, v0x1f30d20_0 {0 0 0};
    %end;
    .thread T_8;
    .scope S_0x1ed6320;
T_9 ;
    %load/vec4 v0x1f30fa0_0;
    %parti/u 32, 128, 32;
    %cmpi/ne 0, 0, 32;
    %jmp/0xz  T_9.0, 4;
    %load/vec4 v0x1f30fa0_0;
    %parti/u 32, 128, 32;
    %load/vec4 v0x1f30fa0_0;
    %parti/u 32, 96, 32;
    %vpi_call/w 3 160 "$display", "Hint: Output '%s' has %0d mismatches. First mismatch occurred at time %0d.", "out_sop", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %jmp T_9.1;
T_9.0 ;
    %vpi_call/w 3 161 "$display", "Hint: Output '%s' has no mismatches.", "out_sop" {0 0 0};
T_9.1 ;
    %load/vec4 v0x1f30fa0_0;
    %parti/u 32, 64, 32;
    %cmpi/ne 0, 0, 32;
    %jmp/0xz  T_9.2, 4;
    %load/vec4 v0x1f30fa0_0;
    %parti/u 32, 64, 32;
    %load/vec4 v0x1f30fa0_0;
    %parti/u 32, 32, 32;
    %vpi_call/w 3 162 "$display", "Hint: Output '%s' has %0d mismatches. First mismatch occurred at time %0d.", "out_pos", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %jmp T_9.3;
T_9.2 ;
    %vpi_call/w 3 163 "$display", "Hint: Output '%s' has no mismatches.", "out_pos" {0 0 0};
T_9.3 ;
    %load/vec4 v0x1f30fa0_0;
    %parti/u 32, 192, 32;
    %load/vec4 v0x1f30fa0_0;
    %parti/u 32, 0, 32;
    %vpi_call/w 3 165 "$display", "Hint: Total mismatched samples is %1d out of %1d samples\012", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %vpi_call/w 3 166 "$display", "Simulation finished at %0d ps", $time {0 0 0};
    %load/vec4 v0x1f30fa0_0;
    %parti/u 32, 192, 32;
    %load/vec4 v0x1f30fa0_0;
    %parti/u 32, 0, 32;
    %vpi_call/w 3 167 "$display", "Mismatches: %1d in %1d samples", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %end;
    .thread T_9, $final;
    .scope S_0x1ed6320;
T_10 ;
    %wait E_0x1ee9040;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x1f30fa0_0;
    %pushi/vec4 0, 0, 32;
    %part/u 32;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x1f30fa0_0, 4, 32;
    %load/vec4 v0x1f311f0_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_10.0, 8;
    %load/vec4 v0x1f30fa0_0;
    %parti/u 32, 192, 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_10.2, 4;
    %vpi_func 3 178 "$time" 64 {0 0 0};
    %cast2;
    %pad/u 32;
    %ix/load 4, 160, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x1f30fa0_0, 4, 32;
T_10.2 ;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x1f30fa0_0;
    %pushi/vec4 192, 0, 32;
    %part/u 32;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %ix/load 4, 192, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x1f30fa0_0, 4, 32;
T_10.0 ;
    %load/vec4 v0x1f30f00_0;
    %load/vec4 v0x1f30f00_0;
    %load/vec4 v0x1f30e60_0;
    %xor;
    %load/vec4 v0x1f30f00_0;
    %xor;
    %cmp/ne;
    %jmp/0xz  T_10.4, 6;
    %load/vec4 v0x1f30fa0_0;
    %parti/u 32, 128, 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_10.6, 4;
    %vpi_func 3 182 "$time" 64 {0 0 0};
    %cast2;
    %pad/u 32;
    %ix/load 4, 96, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x1f30fa0_0, 4, 32;
T_10.6 ;
    %load/vec4 v0x1f30fa0_0;
    %parti/u 32, 128, 32;
    %addi 1, 0, 32;
    %ix/load 4, 128, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x1f30fa0_0, 4, 32;
T_10.4 ;
    %load/vec4 v0x1f30dc0_0;
    %load/vec4 v0x1f30dc0_0;
    %load/vec4 v0x1f30d20_0;
    %xor;
    %load/vec4 v0x1f30dc0_0;
    %xor;
    %cmp/ne;
    %jmp/0xz  T_10.8, 6;
    %load/vec4 v0x1f30fa0_0;
    %parti/u 32, 64, 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_10.10, 4;
    %vpi_func 3 185 "$time" 64 {0 0 0};
    %cast2;
    %pad/u 32;
    %ix/load 4, 32, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x1f30fa0_0, 4, 32;
T_10.10 ;
    %load/vec4 v0x1f30fa0_0;
    %parti/u 32, 64, 32;
    %addi 1, 0, 32;
    %ix/load 4, 64, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x1f30fa0_0, 4, 32;
T_10.8 ;
    %jmp T_10;
    .thread T_10;
# The file index is used to find the file name in the following table.
:file_names 5;
    "N/A";
    "<interactive>";
    "-";
    "/home/jmb9986/AutoChip/autochip_scripts/../verilogeval_prompts_tbs/ve_testbenches_machine/ece241_2013_q2/ece241_2013_q2_tb.sv";
    "/home/jmb9986/AutoChip/autochip_scripts/outputs/claude-3-haiku-20240307_full_feedback/can1_depth10/machine/ece241_2013_q2/iter1/response0/top_module.sv";
