#! /usr/local/bin/vvp
:ivl_version "13.0 (devel)" "(s20221226-331-g77d7f0b8f)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision - 12;
:vpi_module "/usr/local/lib/ivl/system.vpi";
:vpi_module "/usr/local/lib/ivl/vhdl_sys.vpi";
:vpi_module "/usr/local/lib/ivl/vhdl_textio.vpi";
:vpi_module "/usr/local/lib/ivl/v2005_math.vpi";
:vpi_module "/usr/local/lib/ivl/va_math.vpi";
:vpi_module "/usr/local/lib/ivl/v2009.vpi";
S_0x18e6230 .scope package, "$unit" "$unit" 2 1;
 .timescale 0 0;
S_0x18fa8b0 .scope module, "tb" "tb" 3 122;
 .timescale -12 -12;
L_0x18e66c0 .functor NOT 1, L_0x196bf00, C4<0>, C4<0>, C4<0>;
L_0x196bd80 .functor XOR 12, L_0x196bc40, L_0x196bce0, C4<000000000000>, C4<000000000000>;
L_0x196be90 .functor XOR 12, L_0x196bd80, L_0x196bdf0, C4<000000000000>, C4<000000000000>;
v0x1962f50_0 .net *"_ivl_10", 11 0, L_0x196bdf0;  1 drivers
v0x1963050_0 .net *"_ivl_12", 11 0, L_0x196be90;  1 drivers
v0x1963130_0 .net *"_ivl_2", 11 0, L_0x196bba0;  1 drivers
v0x19631f0_0 .net *"_ivl_4", 11 0, L_0x196bc40;  1 drivers
v0x19632d0_0 .net *"_ivl_6", 11 0, L_0x196bce0;  1 drivers
v0x1963400_0 .net *"_ivl_8", 11 0, L_0x196bd80;  1 drivers
v0x19634e0_0 .var "clk", 0 0;
v0x1963580_0 .net "in", 0 0, v0x195df00_0;  1 drivers
v0x1963620_0 .net "next_state_dut", 9 0, L_0x196ade0;  1 drivers
v0x19636c0_0 .net "next_state_ref", 9 0, L_0x1966350;  1 drivers
v0x19637d0_0 .net "out1_dut", 0 0, L_0x196b720;  1 drivers
v0x1963870_0 .net "out1_ref", 0 0, L_0x18e9510;  1 drivers
v0x1963910_0 .net "out2_dut", 0 0, L_0x196b9e0;  1 drivers
v0x19639b0_0 .net "out2_ref", 0 0, L_0x18ea3b0;  1 drivers
v0x1963a80_0 .net "state", 9 0, v0x195e230_0;  1 drivers
v0x1963b20_0 .var/2u "stats1", 287 0;
v0x1963bc0_0 .var/2u "strobe", 0 0;
v0x1963c60_0 .net "tb_match", 0 0, L_0x196bf00;  1 drivers
v0x1963d30_0 .net "tb_mismatch", 0 0, L_0x18e66c0;  1 drivers
v0x1963dd0_0 .net "wavedrom_enable", 0 0, v0x195e470_0;  1 drivers
v0x1963ea0_0 .net "wavedrom_title", 511 0, v0x195e530_0;  1 drivers
L_0x196bba0 .concat [ 1 1 10 0], L_0x18ea3b0, L_0x18e9510, L_0x1966350;
L_0x196bc40 .concat [ 1 1 10 0], L_0x18ea3b0, L_0x18e9510, L_0x1966350;
L_0x196bce0 .concat [ 1 1 10 0], L_0x196b9e0, L_0x196b720, L_0x196ade0;
L_0x196bdf0 .concat [ 1 1 10 0], L_0x18ea3b0, L_0x18e9510, L_0x1966350;
L_0x196bf00 .cmp/eeq 12, L_0x196bba0, L_0x196be90;
S_0x18faa40 .scope module, "good1" "reference_module" 3 171, 3 4 0, S_0x18fa8b0;
 .timescale -12 -12;
    .port_info 0 /INPUT 1 "in";
    .port_info 1 /INPUT 10 "state";
    .port_info 2 /OUTPUT 10 "next_state";
    .port_info 3 /OUTPUT 1 "out1";
    .port_info 4 /OUTPUT 1 "out2";
L_0x18e9510 .functor OR 1, L_0x1963ff0, L_0x1964090, C4<0>, C4<0>;
L_0x18ea3b0 .functor OR 1, L_0x1964220, L_0x19642c0, C4<0>, C4<0>;
L_0x18eab00 .functor OR 1, L_0x19647a0, L_0x1964840, C4<0>, C4<0>;
L_0x18e7510 .functor OR 1, L_0x18eab00, L_0x19649d0, C4<0>, C4<0>;
L_0x1908480 .functor OR 1, L_0x18e7510, L_0x1964b40, C4<0>, C4<0>;
L_0x1934730 .functor AND 1, L_0x1964480, L_0x1908480, C4<1>, C4<1>;
L_0x1964f20 .functor OR 1, L_0x1964d70, L_0x1964e10, C4<0>, C4<0>;
L_0x19650d0 .functor OR 1, L_0x1964f20, L_0x1965030, C4<0>, C4<0>;
L_0x1965230 .functor AND 1, v0x195df00_0, L_0x19650d0, C4<1>, C4<1>;
L_0x1964eb0 .functor AND 1, v0x195df00_0, L_0x19652f0, C4<1>, C4<1>;
L_0x1965560 .functor AND 1, v0x195df00_0, L_0x19654c0, C4<1>, C4<1>;
L_0x1965700 .functor AND 1, v0x195df00_0, L_0x19655d0, C4<1>, C4<1>;
L_0x19658d0 .functor AND 1, v0x195df00_0, L_0x1965830, C4<1>, C4<1>;
L_0x1965b00 .functor AND 1, v0x195df00_0, L_0x19659c0, C4<1>, C4<1>;
L_0x19657c0 .functor OR 1, L_0x1965c70, L_0x1965d10, C4<0>, C4<0>;
L_0x1965f60 .functor AND 1, v0x195df00_0, L_0x19657c0, C4<1>, C4<1>;
L_0x1966210 .functor AND 1, L_0x1965a60, L_0x19660b0, C4<1>, C4<1>;
L_0x19668d0 .functor AND 1, L_0x19666c0, L_0x1966830, C4<1>, C4<1>;
v0x18e96c0_0 .net *"_ivl_1", 0 0, L_0x1963ff0;  1 drivers
v0x18ea4c0_0 .net *"_ivl_100", 0 0, L_0x19666c0;  1 drivers
v0x18ea560_0 .net *"_ivl_102", 0 0, L_0x1966830;  1 drivers
v0x18ead70_0 .net *"_ivl_104", 0 0, L_0x19668d0;  1 drivers
v0x18eae10_0 .net *"_ivl_15", 0 0, L_0x1964480;  1 drivers
v0x18e7660_0 .net *"_ivl_17", 4 0, L_0x19645b0;  1 drivers
v0x18e7700_0 .net *"_ivl_19", 0 0, L_0x19647a0;  1 drivers
v0x195aa00_0 .net *"_ivl_21", 0 0, L_0x1964840;  1 drivers
v0x195aae0_0 .net *"_ivl_22", 0 0, L_0x18eab00;  1 drivers
v0x195abc0_0 .net *"_ivl_25", 0 0, L_0x19649d0;  1 drivers
v0x195aca0_0 .net *"_ivl_26", 0 0, L_0x18e7510;  1 drivers
v0x195ad80_0 .net *"_ivl_29", 0 0, L_0x1964b40;  1 drivers
v0x195ae60_0 .net *"_ivl_3", 0 0, L_0x1964090;  1 drivers
v0x195af40_0 .net *"_ivl_30", 0 0, L_0x1908480;  1 drivers
v0x195b020_0 .net *"_ivl_33", 0 0, L_0x1934730;  1 drivers
v0x195b0e0_0 .net *"_ivl_37", 0 0, L_0x1964d70;  1 drivers
v0x195b1c0_0 .net *"_ivl_39", 0 0, L_0x1964e10;  1 drivers
v0x195b2a0_0 .net *"_ivl_40", 0 0, L_0x1964f20;  1 drivers
v0x195b380_0 .net *"_ivl_43", 0 0, L_0x1965030;  1 drivers
v0x195b460_0 .net *"_ivl_44", 0 0, L_0x19650d0;  1 drivers
v0x195b540_0 .net *"_ivl_47", 0 0, L_0x1965230;  1 drivers
v0x195b600_0 .net *"_ivl_51", 0 0, L_0x19652f0;  1 drivers
v0x195b6e0_0 .net *"_ivl_53", 0 0, L_0x1964eb0;  1 drivers
v0x195b7a0_0 .net *"_ivl_57", 0 0, L_0x19654c0;  1 drivers
v0x195b880_0 .net *"_ivl_59", 0 0, L_0x1965560;  1 drivers
v0x195b940_0 .net *"_ivl_63", 0 0, L_0x19655d0;  1 drivers
v0x195ba20_0 .net *"_ivl_65", 0 0, L_0x1965700;  1 drivers
v0x195bae0_0 .net *"_ivl_69", 0 0, L_0x1965830;  1 drivers
v0x195bbc0_0 .net *"_ivl_7", 0 0, L_0x1964220;  1 drivers
v0x195bca0_0 .net *"_ivl_71", 0 0, L_0x19658d0;  1 drivers
v0x195bd60_0 .net *"_ivl_75", 0 0, L_0x19659c0;  1 drivers
v0x195be40_0 .net *"_ivl_77", 0 0, L_0x1965b00;  1 drivers
v0x195bf00_0 .net *"_ivl_81", 0 0, L_0x1965c70;  1 drivers
v0x195c1f0_0 .net *"_ivl_83", 0 0, L_0x1965d10;  1 drivers
v0x195c2d0_0 .net *"_ivl_84", 0 0, L_0x19657c0;  1 drivers
v0x195c3b0_0 .net *"_ivl_87", 0 0, L_0x1965f60;  1 drivers
v0x195c470_0 .net *"_ivl_9", 0 0, L_0x19642c0;  1 drivers
v0x195c550_0 .net *"_ivl_91", 0 0, L_0x1965a60;  1 drivers
v0x195c610_0 .net *"_ivl_93", 0 0, L_0x19660b0;  1 drivers
v0x195c6f0_0 .net *"_ivl_95", 0 0, L_0x1966210;  1 drivers
v0x195c7b0_0 .net "in", 0 0, v0x195df00_0;  alias, 1 drivers
v0x195c870_0 .net "next_state", 9 0, L_0x1966350;  alias, 1 drivers
v0x195c950_0 .net "out1", 0 0, L_0x18e9510;  alias, 1 drivers
v0x195ca10_0 .net "out2", 0 0, L_0x18ea3b0;  alias, 1 drivers
v0x195cad0_0 .net "state", 9 0, v0x195e230_0;  alias, 1 drivers
L_0x1963ff0 .part v0x195e230_0, 8, 1;
L_0x1964090 .part v0x195e230_0, 9, 1;
L_0x1964220 .part v0x195e230_0, 7, 1;
L_0x19642c0 .part v0x195e230_0, 9, 1;
L_0x1964480 .reduce/nor v0x195df00_0;
L_0x19645b0 .part v0x195e230_0, 0, 5;
L_0x19647a0 .reduce/or L_0x19645b0;
L_0x1964840 .part v0x195e230_0, 7, 1;
L_0x19649d0 .part v0x195e230_0, 8, 1;
L_0x1964b40 .part v0x195e230_0, 9, 1;
L_0x1964d70 .part v0x195e230_0, 0, 1;
L_0x1964e10 .part v0x195e230_0, 8, 1;
L_0x1965030 .part v0x195e230_0, 9, 1;
L_0x19652f0 .part v0x195e230_0, 1, 1;
L_0x19654c0 .part v0x195e230_0, 2, 1;
L_0x19655d0 .part v0x195e230_0, 3, 1;
L_0x1965830 .part v0x195e230_0, 4, 1;
L_0x19659c0 .part v0x195e230_0, 5, 1;
L_0x1965c70 .part v0x195e230_0, 6, 1;
L_0x1965d10 .part v0x195e230_0, 7, 1;
L_0x1965a60 .reduce/nor v0x195df00_0;
L_0x19660b0 .part v0x195e230_0, 5, 1;
LS_0x1966350_0_0 .concat8 [ 1 1 1 1], L_0x1934730, L_0x1965230, L_0x1964eb0, L_0x1965560;
LS_0x1966350_0_4 .concat8 [ 1 1 1 1], L_0x1965700, L_0x19658d0, L_0x1965b00, L_0x1965f60;
LS_0x1966350_0_8 .concat8 [ 1 1 0 0], L_0x1966210, L_0x19668d0;
L_0x1966350 .concat8 [ 4 4 2 0], LS_0x1966350_0_0, LS_0x1966350_0_4, LS_0x1966350_0_8;
L_0x19666c0 .reduce/nor v0x195df00_0;
L_0x1966830 .part v0x195e230_0, 6, 1;
S_0x195cc50 .scope module, "stim1" "stimulus_gen" 3 166, 3 29 0, S_0x18fa8b0;
 .timescale -12 -12;
    .port_info 0 /INPUT 1 "clk";
    .port_info 1 /OUTPUT 1 "in";
    .port_info 2 /OUTPUT 10 "state";
    .port_info 3 /INPUT 1 "tb_match";
    .port_info 4 /INPUT 10 "next_state_ref";
    .port_info 5 /INPUT 10 "next_state_dut";
    .port_info 6 /OUTPUT 512 "wavedrom_title";
    .port_info 7 /OUTPUT 1 "wavedrom_enable";
v0x195dc80_0 .net "clk", 0 0, v0x19634e0_0;  1 drivers
v0x195dd60_0 .var/2s "errored1", 31 0;
v0x195de40_0 .var/2s "errored2", 31 0;
v0x195df00_0 .var "in", 0 0;
v0x195dfa0_0 .net "next_state_dut", 9 0, L_0x196ade0;  alias, 1 drivers
v0x195e0b0_0 .net "next_state_ref", 9 0, L_0x1966350;  alias, 1 drivers
v0x195e170_0 .var/2s "onehot_error", 31 0;
v0x195e230_0 .var "state", 9 0;
v0x195e2f0_0 .var "state_error", 9 0;
v0x195e3b0_0 .net "tb_match", 0 0, L_0x196bf00;  alias, 1 drivers
v0x195e470_0 .var "wavedrom_enable", 0 0;
v0x195e530_0 .var "wavedrom_title", 511 0;
E_0x18f6330 .event negedge, v0x195dc80_0;
E_0x18f6580 .event posedge, v0x195dc80_0;
S_0x195ce90 .scope begin, "$ivl_for_loop0" "$ivl_for_loop0" 3 69, 3 69 0, S_0x195cc50;
 .timescale -12 -12;
v0x195d0d0_0 .var/2s "i", 31 0;
E_0x18f5c00/0 .event negedge, v0x195dc80_0;
E_0x18f5c00/1 .event posedge, v0x195dc80_0;
E_0x18f5c00 .event/or E_0x18f5c00/0, E_0x18f5c00/1;
S_0x195d1d0 .scope begin, "$ivl_for_loop1" "$ivl_for_loop1" 3 74, 3 74 0, S_0x195cc50;
 .timescale -12 -12;
v0x195d3d0_0 .var/2s "i", 31 0;
S_0x195d4b0 .scope begin, "$ivl_for_loop2" "$ivl_for_loop2" 3 114, 3 114 0, S_0x195cc50;
 .timescale -12 -12;
v0x195d690_0 .var/2s "i", 31 0;
S_0x195d770 .scope task, "wavedrom_start" "wavedrom_start" 3 45, 3 45 0, S_0x195cc50;
 .timescale -12 -12;
v0x195d950_0 .var "title", 511 0;
TD_tb.stim1.wavedrom_start ;
    %end;
S_0x195da50 .scope task, "wavedrom_stop" "wavedrom_stop" 3 48, 3 48 0, S_0x195cc50;
 .timescale -12 -12;
TD_tb.stim1.wavedrom_stop ;
    %delay 1, 0;
    %end;
S_0x195e710 .scope module, "top_module1" "top_module" 3 178, 4 1 0, S_0x18fa8b0;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "in";
    .port_info 1 /INPUT 10 "state";
    .port_info 2 /OUTPUT 10 "next_state";
    .port_info 3 /OUTPUT 1 "out1";
    .port_info 4 /OUTPUT 1 "out2";
L_0x1966b70 .functor NOT 1, v0x195df00_0, C4<0>, C4<0>, C4<0>;
L_0x1966be0 .functor AND 1, L_0x1966ad0, L_0x1966b70, C4<1>, C4<1>;
L_0x1966d90 .functor NOT 1, v0x195df00_0, C4<0>, C4<0>, C4<0>;
L_0x1966e00 .functor AND 1, L_0x1966cf0, L_0x1966d90, C4<1>, C4<1>;
L_0x1966f10 .functor OR 1, L_0x1966be0, L_0x1966e00, C4<0>, C4<0>;
L_0x19670c0 .functor NOT 1, v0x195df00_0, C4<0>, C4<0>, C4<0>;
L_0x1967380 .functor AND 1, L_0x1967020, L_0x19670c0, C4<1>, C4<1>;
L_0x1967490 .functor OR 1, L_0x1966f10, L_0x1967380, C4<0>, C4<0>;
L_0x1967690 .functor NOT 1, v0x195df00_0, C4<0>, C4<0>, C4<0>;
L_0x1967700 .functor AND 1, L_0x19675f0, L_0x1967690, C4<1>, C4<1>;
L_0x1967870 .functor OR 1, L_0x1967490, L_0x1967700, C4<0>, C4<0>;
L_0x19679d0 .functor NOT 1, v0x195df00_0, C4<0>, C4<0>, C4<0>;
L_0x1967ab0 .functor AND 1, L_0x1967930, L_0x19679d0, C4<1>, C4<1>;
L_0x1967bc0 .functor OR 1, L_0x1967870, L_0x1967ab0, C4<0>, C4<0>;
L_0x1967a40 .functor NOT 1, v0x195df00_0, C4<0>, C4<0>, C4<0>;
L_0x1967e30 .functor AND 1, L_0x1967d50, L_0x1967a40, C4<1>, C4<1>;
L_0x1967fd0 .functor OR 1, L_0x1967bc0, L_0x1967e30, C4<0>, C4<0>;
L_0x1968180 .functor NOT 1, v0x195df00_0, C4<0>, C4<0>, C4<0>;
L_0x1968290 .functor AND 1, L_0x19680e0, L_0x1968180, C4<1>, C4<1>;
L_0x19683a0 .functor OR 1, L_0x1967fd0, L_0x1968290, C4<0>, C4<0>;
L_0x19685b0 .functor NOT 1, v0x195df00_0, C4<0>, C4<0>, C4<0>;
L_0x1968620 .functor AND 1, L_0x19681f0, L_0x19685b0, C4<1>, C4<1>;
L_0x19687f0 .functor OR 1, L_0x19683a0, L_0x1968620, C4<0>, C4<0>;
L_0x1968db0 .functor AND 1, L_0x1968900, v0x195df00_0, C4<1>, C4<1>;
L_0x1969040 .functor AND 1, L_0x1968f40, v0x195df00_0, C4<1>, C4<1>;
L_0x19690b0 .functor OR 1, L_0x1968db0, L_0x1969040, C4<0>, C4<0>;
L_0x1969340 .functor AND 1, L_0x19692a0, v0x195df00_0, C4<1>, C4<1>;
L_0x1969510 .functor AND 1, L_0x1969400, v0x195df00_0, C4<1>, C4<1>;
L_0x1969760 .functor AND 1, L_0x19696c0, v0x195df00_0, C4<1>, C4<1>;
L_0x19694a0 .functor AND 1, L_0x1969820, v0x195df00_0, C4<1>, C4<1>;
L_0x1969b30 .functor AND 1, L_0x1969a90, v0x195df00_0, C4<1>, C4<1>;
L_0x1969bf0 .functor OR 1, L_0x19694a0, L_0x1969b30, C4<0>, C4<0>;
L_0x1969f40 .functor NOT 1, v0x195df00_0, C4<0>, C4<0>, C4<0>;
L_0x1969fb0 .functor AND 1, L_0x1969e10, L_0x1969f40, C4<1>, C4<1>;
L_0x196a280 .functor AND 1, L_0x196a1e0, v0x195df00_0, C4<1>, C4<1>;
L_0x196a480 .functor AND 1, L_0x196a340, v0x195df00_0, C4<1>, C4<1>;
L_0x196a670 .functor OR 1, L_0x196a280, L_0x196a480, C4<0>, C4<0>;
L_0x196a820 .functor NOT 1, v0x195df00_0, C4<0>, C4<0>, C4<0>;
L_0x196a540 .functor AND 1, L_0x196a780, L_0x196a820, C4<1>, C4<1>;
L_0x196b200 .functor NOT 1, v0x195df00_0, C4<0>, C4<0>, C4<0>;
L_0x196b3c0 .functor AND 1, L_0x196a3e0, L_0x196b200, C4<1>, C4<1>;
L_0x196b720 .functor OR 1, L_0x196b520, L_0x196b680, C4<0>, C4<0>;
v0x195e980_0 .net *"_ivl_10", 0 0, L_0x1966d90;  1 drivers
v0x195ea60_0 .net *"_ivl_101", 0 0, L_0x1969a90;  1 drivers
v0x195eb40_0 .net *"_ivl_102", 0 0, L_0x1969b30;  1 drivers
v0x195ec30_0 .net *"_ivl_104", 0 0, L_0x1969bf0;  1 drivers
v0x195ed10_0 .net *"_ivl_109", 0 0, L_0x1969e10;  1 drivers
v0x195ee40_0 .net *"_ivl_110", 0 0, L_0x1969f40;  1 drivers
v0x195ef20_0 .net *"_ivl_112", 0 0, L_0x1969fb0;  1 drivers
v0x195f000_0 .net *"_ivl_117", 0 0, L_0x196a1e0;  1 drivers
v0x195f0e0_0 .net *"_ivl_118", 0 0, L_0x196a280;  1 drivers
v0x195f250_0 .net *"_ivl_12", 0 0, L_0x1966e00;  1 drivers
v0x195f330_0 .net *"_ivl_121", 0 0, L_0x196a340;  1 drivers
v0x195f410_0 .net *"_ivl_122", 0 0, L_0x196a480;  1 drivers
v0x195f4f0_0 .net *"_ivl_124", 0 0, L_0x196a670;  1 drivers
v0x195f5d0_0 .net *"_ivl_129", 0 0, L_0x196a780;  1 drivers
v0x195f6b0_0 .net *"_ivl_130", 0 0, L_0x196a820;  1 drivers
v0x195f790_0 .net *"_ivl_132", 0 0, L_0x196a540;  1 drivers
v0x195f870_0 .net *"_ivl_138", 0 0, L_0x196a3e0;  1 drivers
v0x195fa60_0 .net *"_ivl_139", 0 0, L_0x196b200;  1 drivers
v0x195fb40_0 .net *"_ivl_14", 0 0, L_0x1966f10;  1 drivers
v0x195fc20_0 .net *"_ivl_141", 0 0, L_0x196b3c0;  1 drivers
v0x195fd00_0 .net *"_ivl_144", 0 0, L_0x196b520;  1 drivers
v0x195fde0_0 .net *"_ivl_146", 0 0, L_0x196b680;  1 drivers
v0x195fec0_0 .net *"_ivl_17", 0 0, L_0x1967020;  1 drivers
v0x195ffa0_0 .net *"_ivl_18", 0 0, L_0x19670c0;  1 drivers
v0x1960080_0 .net *"_ivl_20", 0 0, L_0x1967380;  1 drivers
v0x1960160_0 .net *"_ivl_22", 0 0, L_0x1967490;  1 drivers
v0x1960240_0 .net *"_ivl_25", 0 0, L_0x19675f0;  1 drivers
v0x1960320_0 .net *"_ivl_26", 0 0, L_0x1967690;  1 drivers
v0x1960400_0 .net *"_ivl_28", 0 0, L_0x1967700;  1 drivers
v0x19604e0_0 .net *"_ivl_3", 0 0, L_0x1966ad0;  1 drivers
v0x19605c0_0 .net *"_ivl_30", 0 0, L_0x1967870;  1 drivers
v0x19606a0_0 .net *"_ivl_33", 0 0, L_0x1967930;  1 drivers
v0x1960780_0 .net *"_ivl_34", 0 0, L_0x19679d0;  1 drivers
v0x1960a70_0 .net *"_ivl_36", 0 0, L_0x1967ab0;  1 drivers
v0x1960b50_0 .net *"_ivl_38", 0 0, L_0x1967bc0;  1 drivers
v0x1960c30_0 .net *"_ivl_4", 0 0, L_0x1966b70;  1 drivers
v0x1960d10_0 .net *"_ivl_41", 0 0, L_0x1967d50;  1 drivers
v0x1960df0_0 .net *"_ivl_42", 0 0, L_0x1967a40;  1 drivers
v0x1960ed0_0 .net *"_ivl_44", 0 0, L_0x1967e30;  1 drivers
v0x1960fb0_0 .net *"_ivl_46", 0 0, L_0x1967fd0;  1 drivers
v0x1961090_0 .net *"_ivl_49", 0 0, L_0x19680e0;  1 drivers
v0x1961170_0 .net *"_ivl_50", 0 0, L_0x1968180;  1 drivers
v0x1961250_0 .net *"_ivl_52", 0 0, L_0x1968290;  1 drivers
v0x1961330_0 .net *"_ivl_54", 0 0, L_0x19683a0;  1 drivers
v0x1961410_0 .net *"_ivl_57", 0 0, L_0x19681f0;  1 drivers
v0x19614f0_0 .net *"_ivl_58", 0 0, L_0x19685b0;  1 drivers
v0x19615d0_0 .net *"_ivl_6", 0 0, L_0x1966be0;  1 drivers
v0x19616b0_0 .net *"_ivl_60", 0 0, L_0x1968620;  1 drivers
v0x1961790_0 .net *"_ivl_62", 0 0, L_0x19687f0;  1 drivers
v0x1961870_0 .net *"_ivl_67", 0 0, L_0x1968900;  1 drivers
v0x1961950_0 .net *"_ivl_68", 0 0, L_0x1968db0;  1 drivers
v0x1961a30_0 .net *"_ivl_71", 0 0, L_0x1968f40;  1 drivers
v0x1961b10_0 .net *"_ivl_72", 0 0, L_0x1969040;  1 drivers
v0x1961bf0_0 .net *"_ivl_74", 0 0, L_0x19690b0;  1 drivers
v0x1961cd0_0 .net *"_ivl_79", 0 0, L_0x19692a0;  1 drivers
v0x1961db0_0 .net *"_ivl_80", 0 0, L_0x1969340;  1 drivers
v0x1961e90_0 .net *"_ivl_85", 0 0, L_0x1969400;  1 drivers
v0x1961f70_0 .net *"_ivl_86", 0 0, L_0x1969510;  1 drivers
v0x1962050_0 .net *"_ivl_9", 0 0, L_0x1966cf0;  1 drivers
v0x1962130_0 .net *"_ivl_91", 0 0, L_0x19696c0;  1 drivers
v0x1962210_0 .net *"_ivl_92", 0 0, L_0x1969760;  1 drivers
v0x19622f0_0 .net *"_ivl_97", 0 0, L_0x1969820;  1 drivers
v0x19623d0_0 .net *"_ivl_98", 0 0, L_0x19694a0;  1 drivers
v0x19624b0_0 .net "in", 0 0, v0x195df00_0;  alias, 1 drivers
v0x1962550_0 .net "next_state", 9 0, L_0x196ade0;  alias, 1 drivers
v0x1962a20_0 .net "out1", 0 0, L_0x196b720;  alias, 1 drivers
v0x1962ac0_0 .net "out2", 0 0, L_0x196b9e0;  alias, 1 drivers
v0x1962b80_0 .net "state", 9 0, v0x195e230_0;  alias, 1 drivers
L_0x1966ad0 .part v0x195e230_0, 0, 1;
L_0x1966cf0 .part v0x195e230_0, 1, 1;
L_0x1967020 .part v0x195e230_0, 2, 1;
L_0x19675f0 .part v0x195e230_0, 3, 1;
L_0x1967930 .part v0x195e230_0, 4, 1;
L_0x1967d50 .part v0x195e230_0, 7, 1;
L_0x19680e0 .part v0x195e230_0, 8, 1;
L_0x19681f0 .part v0x195e230_0, 9, 1;
L_0x1968900 .part v0x195e230_0, 0, 1;
L_0x1968f40 .part v0x195e230_0, 8, 1;
L_0x19692a0 .part v0x195e230_0, 1, 1;
L_0x1969400 .part v0x195e230_0, 2, 1;
L_0x19696c0 .part v0x195e230_0, 3, 1;
L_0x1969820 .part v0x195e230_0, 4, 1;
L_0x1969a90 .part v0x195e230_0, 6, 1;
L_0x1969e10 .part v0x195e230_0, 5, 1;
L_0x196a1e0 .part v0x195e230_0, 6, 1;
L_0x196a340 .part v0x195e230_0, 7, 1;
L_0x196a780 .part v0x195e230_0, 5, 1;
LS_0x196ade0_0_0 .concat8 [ 1 1 1 1], L_0x19687f0, L_0x19690b0, L_0x1969340, L_0x1969510;
LS_0x196ade0_0_4 .concat8 [ 1 1 1 1], L_0x1969760, L_0x1969bf0, L_0x1969fb0, L_0x196a670;
LS_0x196ade0_0_8 .concat8 [ 1 1 0 0], L_0x196a540, L_0x196b3c0;
L_0x196ade0 .concat8 [ 4 4 2 0], LS_0x196ade0_0_0, LS_0x196ade0_0_4, LS_0x196ade0_0_8;
L_0x196a3e0 .part v0x195e230_0, 6, 1;
L_0x196b520 .part v0x195e230_0, 8, 1;
L_0x196b680 .part v0x195e230_0, 9, 1;
L_0x196b9e0 .part v0x195e230_0, 7, 1;
S_0x1962d30 .scope task, "wait_for_end_of_timestep" "wait_for_end_of_timestep" 3 187, 3 187 0, S_0x18fa8b0;
 .timescale -12 -12;
E_0x18dca20 .event anyedge, v0x1963bc0_0;
TD_tb.wait_for_end_of_timestep ;
    %pushi/vec4 5, 0, 32;
T_2.0 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_2.1, 5;
    %jmp/1 T_2.1, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %load/vec4 v0x1963bc0_0;
    %nor/r;
    %assign/vec4 v0x1963bc0_0, 0;
    %wait E_0x18dca20;
    %jmp T_2.0;
T_2.1 ;
    %pop/vec4 1;
    %end;
    .scope S_0x195cc50;
T_3 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x195dd60_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x195de40_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x195e170_0, 0, 32;
    %pushi/vec4 0, 0, 10;
    %store/vec4 v0x195e2f0_0, 0, 10;
    %end;
    .thread T_3, $init;
    .scope S_0x195cc50;
T_4 ;
    %pushi/vec4 2, 0, 32;
T_4.0 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_4.1, 5;
    %jmp/1 T_4.1, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_0x18f6580;
    %jmp T_4.0;
T_4.1 ;
    %pop/vec4 1;
T_4.2 ;
    %wait E_0x18f5c00;
    %load/vec4 v0x195e2f0_0;
    %load/vec4 v0x195e0b0_0;
    %load/vec4 v0x195dfa0_0;
    %xor;
    %or;
    %assign/vec4 v0x195e2f0_0, 0;
    %jmp T_4.2;
T_4.3 ;
    %end;
    .thread T_4;
    .scope S_0x195cc50;
T_5 ;
    %pushi/vec4 0, 0, 10;
    %assign/vec4 v0x195e230_0, 0;
    %wait E_0x18f6330;
    %fork t_1, S_0x195ce90;
    %jmp t_0;
    .scope S_0x195ce90;
t_1 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x195d0d0_0, 0, 32;
T_5.0 ; Top of for-loop 
    %load/vec4 v0x195d0d0_0;
    %cmpi/s 10, 0, 32;
    %jmp/0xz T_5.1, 5;
    %wait E_0x18f5c00;
    %pushi/vec4 1, 0, 10;
    %load/vec4 v0x195d0d0_0;
    %ix/vec4 4;
    %shiftl 4;
    %assign/vec4 v0x195e230_0, 0;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0x195df00_0, 0;
T_5.2 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x195d0d0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x195d0d0_0, 0, 32;
    %jmp T_5.0;
T_5.1 ; for-loop exit label
    %end;
    .scope S_0x195cc50;
t_0 %join;
    %fork t_3, S_0x195d1d0;
    %jmp t_2;
    .scope S_0x195d1d0;
t_3 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x195d3d0_0, 0, 32;
T_5.3 ; Top of for-loop 
    %load/vec4 v0x195d3d0_0;
    %cmpi/s 10, 0, 32;
    %jmp/0xz T_5.4, 5;
    %wait E_0x18f5c00;
    %pushi/vec4 1, 0, 10;
    %load/vec4 v0x195d3d0_0;
    %ix/vec4 4;
    %shiftl 4;
    %assign/vec4 v0x195e230_0, 0;
    %pushi/vec4 1, 0, 1;
    %assign/vec4 v0x195df00_0, 0;
T_5.5 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x195d3d0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x195d3d0_0, 0, 32;
    %jmp T_5.3;
T_5.4 ; for-loop exit label
    %end;
    .scope S_0x195cc50;
t_2 %join;
    %wait E_0x18f6330;
    %fork TD_tb.stim1.wavedrom_stop, S_0x195da50;
    %join;
    %pushi/vec4 200, 0, 32;
T_5.6 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_5.7, 5;
    %jmp/1 T_5.7, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_0x18f5c00;
    %pushi/vec4 1, 0, 10;
    %vpi_func 3 83 "$random" 32 {0 0 0};
    %pushi/vec4 10, 0, 32;
    %mod;
    %ix/vec4 4;
    %shiftl 4;
    %assign/vec4 v0x195e230_0, 0;
    %vpi_func 3 84 "$random" 32 {0 0 0};
    %pad/s 1;
    %assign/vec4 v0x195df00_0, 0;
    %load/vec4 v0x195e3b0_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.8, 8;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x195e170_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x195e170_0, 0, 32;
T_5.8 ;
    %jmp T_5.6;
T_5.7 ;
    %pop/vec4 1;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x195dd60_0, 0, 32;
    %pushi/vec4 400, 0, 32;
T_5.10 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_5.11, 5;
    %jmp/1 T_5.11, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_0x18f5c00;
    %pushi/vec4 1, 0, 10;
    %vpi_func 3 91 "$random" 32 {0 0 0};
    %pushi/vec4 10, 0, 32;
    %mod;
    %ix/vec4 4;
    %shiftl 4;
    %pushi/vec4 1, 0, 10;
    %vpi_func 3 91 "$random" 32 {0 0 0};
    %pushi/vec4 10, 0, 32;
    %mod;
    %ix/vec4 4;
    %shiftl 4;
    %or;
    %assign/vec4 v0x195e230_0, 0;
    %vpi_func 3 92 "$random" 32 {0 0 0};
    %pad/s 1;
    %assign/vec4 v0x195df00_0, 0;
    %load/vec4 v0x195e3b0_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.12, 8;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x195dd60_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x195dd60_0, 0, 32;
T_5.12 ;
    %jmp T_5.10;
T_5.11 ;
    %pop/vec4 1;
    %load/vec4 v0x195e170_0;
    %nor/r;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_5.16, 9;
    %load/vec4 v0x195dd60_0;
    %pushi/vec4 0, 0, 32;
    %cmp/ne;
    %flag_get/vec4 4;
    %and;
T_5.16;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.14, 8;
    %vpi_call/w 3 98 "$display", "Hint: Your circuit passed when given only one-hot inputs, but not with two-hot inputs." {0 0 0};
T_5.14 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x195de40_0, 0, 32;
    %pushi/vec4 800, 0, 32;
T_5.17 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_5.18, 5;
    %jmp/1 T_5.18, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_0x18f5c00;
    %vpi_func 3 103 "$random" 32 {0 0 0};
    %pad/s 10;
    %assign/vec4 v0x195e230_0, 0;
    %vpi_func 3 104 "$random" 32 {0 0 0};
    %pad/s 1;
    %assign/vec4 v0x195df00_0, 0;
    %load/vec4 v0x195e3b0_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.19, 8;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x195de40_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x195de40_0, 0, 32;
T_5.19 ;
    %jmp T_5.17;
T_5.18 ;
    %pop/vec4 1;
    %load/vec4 v0x195e170_0;
    %nor/r;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_5.23, 9;
    %load/vec4 v0x195de40_0;
    %pushi/vec4 0, 0, 32;
    %cmp/ne;
    %flag_get/vec4 4;
    %and;
T_5.23;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.21, 8;
    %vpi_call/w 3 109 "$display", "Hint: Your circuit passed when given only one-hot inputs, but not with random inputs." {0 0 0};
T_5.21 ;
    %load/vec4 v0x195e170_0;
    %nor/r;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_5.26, 9;
    %load/vec4 v0x195dd60_0;
    %cmpi/ne 0, 0, 32;
    %flag_get/vec4 4;
    %jmp/1 T_5.27, 4;
    %load/vec4 v0x195de40_0;
    %pushi/vec4 0, 0, 32;
    %cmp/ne;
    %flag_get/vec4 4;
    %or;
T_5.27;
    %and;
T_5.26;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.24, 8;
    %vpi_call/w 3 112 "$display", "Hint: Are you doing something more complicated than deriving state transition equations by inspection?\012" {0 0 0};
T_5.24 ;
    %fork t_5, S_0x195d4b0;
    %jmp t_4;
    .scope S_0x195d4b0;
t_5 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x195d690_0, 0, 32;
T_5.28 ; Top of for-loop 
    %load/vec4 v0x195d690_0;
    %cmpi/u 10, 0, 32;
    %jmp/0xz T_5.29, 5;
    %load/vec4 v0x195e2f0_0;
    %load/vec4 v0x195d690_0;
    %part/s 1;
    %cmpi/e 0, 0, 1;
    %flag_mov 8, 6;
    %jmp/0 T_5.31, 8;
    %pushi/vec4 25455, 0, 32; draw_string_vec4
    %pushi/vec4 1920099683, 0, 32; draw_string_vec4
    %concat/vec4; draw_string_vec4
    %pushi/vec4 116, 0, 8; draw_string_vec4
    %concat/vec4; draw_string_vec4
    %jmp/1 T_5.32, 8;
T_5.31 ; End of true expr.
    %pushi/vec4 1768842095, 0, 32; draw_string_vec4
    %pushi/vec4 1920099683, 0, 32; draw_string_vec4
    %concat/vec4; draw_string_vec4
    %pushi/vec4 116, 0, 8; draw_string_vec4
    %concat/vec4; draw_string_vec4
    %jmp/0 T_5.32, 8;
 ; End of false expr.
    %blend;
T_5.32;
    %vpi_call/w 3 115 "$display", "Hint: next_state[%0d] is %s.", v0x195d690_0, S<0,vec4,u72> {1 0 0};
T_5.30 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x195d690_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x195d690_0, 0, 32;
    %jmp T_5.28;
T_5.29 ; for-loop exit label
    %end;
    .scope S_0x195cc50;
t_4 %join;
    %delay 1, 0;
    %vpi_call/w 3 117 "$finish" {0 0 0};
    %end;
    .thread T_5;
    .scope S_0x18fa8b0;
T_6 ;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x19634e0_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x1963bc0_0, 0, 1;
    %end;
    .thread T_6, $init;
    .scope S_0x18fa8b0;
T_7 ;
T_7.0 ;
    %delay 5, 0;
    %load/vec4 v0x19634e0_0;
    %inv;
    %store/vec4 v0x19634e0_0, 0, 1;
    %jmp T_7.0;
T_7.1 ;
    %end;
    .thread T_7;
    .scope S_0x18fa8b0;
T_8 ;
    %vpi_call/w 3 158 "$dumpfile", "wave.vcd" {0 0 0};
    %vpi_call/w 3 159 "$dumpvars", 32'sb00000000000000000000000000000001, v0x195dc80_0, v0x1963d30_0, v0x1963580_0, v0x1963a80_0, v0x19636c0_0, v0x1963620_0, v0x1963870_0, v0x19637d0_0, v0x19639b0_0, v0x1963910_0 {0 0 0};
    %end;
    .thread T_8;
    .scope S_0x18fa8b0;
T_9 ;
    %load/vec4 v0x1963b20_0;
    %parti/u 32, 192, 32;
    %cmpi/ne 0, 0, 32;
    %jmp/0xz  T_9.0, 4;
    %load/vec4 v0x1963b20_0;
    %parti/u 32, 192, 32;
    %load/vec4 v0x1963b20_0;
    %parti/u 32, 160, 32;
    %vpi_call/w 3 196 "$display", "Hint: Output '%s' has %0d mismatches. First mismatch occurred at time %0d.", "next_state", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %jmp T_9.1;
T_9.0 ;
    %vpi_call/w 3 197 "$display", "Hint: Output '%s' has no mismatches.", "next_state" {0 0 0};
T_9.1 ;
    %load/vec4 v0x1963b20_0;
    %parti/u 32, 128, 32;
    %cmpi/ne 0, 0, 32;
    %jmp/0xz  T_9.2, 4;
    %load/vec4 v0x1963b20_0;
    %parti/u 32, 128, 32;
    %load/vec4 v0x1963b20_0;
    %parti/u 32, 96, 32;
    %vpi_call/w 3 198 "$display", "Hint: Output '%s' has %0d mismatches. First mismatch occurred at time %0d.", "out1", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %jmp T_9.3;
T_9.2 ;
    %vpi_call/w 3 199 "$display", "Hint: Output '%s' has no mismatches.", "out1" {0 0 0};
T_9.3 ;
    %load/vec4 v0x1963b20_0;
    %parti/u 32, 64, 32;
    %cmpi/ne 0, 0, 32;
    %jmp/0xz  T_9.4, 4;
    %load/vec4 v0x1963b20_0;
    %parti/u 32, 64, 32;
    %load/vec4 v0x1963b20_0;
    %parti/u 32, 32, 32;
    %vpi_call/w 3 200 "$display", "Hint: Output '%s' has %0d mismatches. First mismatch occurred at time %0d.", "out2", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %jmp T_9.5;
T_9.4 ;
    %vpi_call/w 3 201 "$display", "Hint: Output '%s' has no mismatches.", "out2" {0 0 0};
T_9.5 ;
    %load/vec4 v0x1963b20_0;
    %parti/u 32, 256, 32;
    %load/vec4 v0x1963b20_0;
    %parti/u 32, 0, 32;
    %vpi_call/w 3 203 "$display", "Hint: Total mismatched samples is %1d out of %1d samples\012", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %vpi_call/w 3 204 "$display", "Simulation finished at %0d ps", $time {0 0 0};
    %load/vec4 v0x1963b20_0;
    %parti/u 32, 256, 32;
    %load/vec4 v0x1963b20_0;
    %parti/u 32, 0, 32;
    %vpi_call/w 3 205 "$display", "Mismatches: %1d in %1d samples", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %end;
    .thread T_9, $final;
    .scope S_0x18fa8b0;
T_10 ;
    %wait E_0x18f5c00;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x1963b20_0;
    %pushi/vec4 0, 0, 32;
    %part/u 32;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x1963b20_0, 4, 32;
    %load/vec4 v0x1963c60_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_10.0, 8;
    %load/vec4 v0x1963b20_0;
    %parti/u 32, 256, 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_10.2, 4;
    %vpi_func 3 216 "$time" 64 {0 0 0};
    %cast2;
    %pad/u 32;
    %ix/load 4, 224, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x1963b20_0, 4, 32;
T_10.2 ;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x1963b20_0;
    %pushi/vec4 256, 0, 32;
    %part/u 32;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %ix/load 4, 256, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x1963b20_0, 4, 32;
T_10.0 ;
    %load/vec4 v0x19636c0_0;
    %load/vec4 v0x19636c0_0;
    %load/vec4 v0x1963620_0;
    %xor;
    %load/vec4 v0x19636c0_0;
    %xor;
    %cmp/ne;
    %jmp/0xz  T_10.4, 6;
    %load/vec4 v0x1963b20_0;
    %parti/u 32, 192, 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_10.6, 4;
    %vpi_func 3 220 "$time" 64 {0 0 0};
    %cast2;
    %pad/u 32;
    %ix/load 4, 160, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x1963b20_0, 4, 32;
T_10.6 ;
    %load/vec4 v0x1963b20_0;
    %parti/u 32, 192, 32;
    %addi 1, 0, 32;
    %ix/load 4, 192, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x1963b20_0, 4, 32;
T_10.4 ;
    %load/vec4 v0x1963870_0;
    %load/vec4 v0x1963870_0;
    %load/vec4 v0x19637d0_0;
    %xor;
    %load/vec4 v0x1963870_0;
    %xor;
    %cmp/ne;
    %jmp/0xz  T_10.8, 6;
    %load/vec4 v0x1963b20_0;
    %parti/u 32, 128, 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_10.10, 4;
    %vpi_func 3 223 "$time" 64 {0 0 0};
    %cast2;
    %pad/u 32;
    %ix/load 4, 96, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x1963b20_0, 4, 32;
T_10.10 ;
    %load/vec4 v0x1963b20_0;
    %parti/u 32, 128, 32;
    %addi 1, 0, 32;
    %ix/load 4, 128, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x1963b20_0, 4, 32;
T_10.8 ;
    %load/vec4 v0x19639b0_0;
    %load/vec4 v0x19639b0_0;
    %load/vec4 v0x1963910_0;
    %xor;
    %load/vec4 v0x19639b0_0;
    %xor;
    %cmp/ne;
    %jmp/0xz  T_10.12, 6;
    %load/vec4 v0x1963b20_0;
    %parti/u 32, 64, 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_10.14, 4;
    %vpi_func 3 226 "$time" 64 {0 0 0};
    %cast2;
    %pad/u 32;
    %ix/load 4, 32, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x1963b20_0, 4, 32;
T_10.14 ;
    %load/vec4 v0x1963b20_0;
    %parti/u 32, 64, 32;
    %addi 1, 0, 32;
    %ix/load 4, 64, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x1963b20_0, 4, 32;
T_10.12 ;
    %jmp T_10;
    .thread T_10;
# The file index is used to find the file name in the following table.
:file_names 5;
    "N/A";
    "<interactive>";
    "-";
    "/home/jmb9986/AutoChip/autochip_scripts/../verilogeval_prompts_tbs/ve_testbenches_human/fsm_onehot/fsm_onehot_tb.sv";
    "/home/jmb9986/AutoChip/autochip_scripts/outputs/claude-3-haiku-20240307_full_feedback/can5_depth10/human/fsm_onehot/iter1/response1/top_module.sv";
