#! /usr/local/bin/vvp
:ivl_version "13.0 (devel)" "(s20221226-331-g77d7f0b8f)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision - 12;
:vpi_module "/usr/local/lib/ivl/system.vpi";
:vpi_module "/usr/local/lib/ivl/vhdl_sys.vpi";
:vpi_module "/usr/local/lib/ivl/vhdl_textio.vpi";
:vpi_module "/usr/local/lib/ivl/v2005_math.vpi";
:vpi_module "/usr/local/lib/ivl/va_math.vpi";
:vpi_module "/usr/local/lib/ivl/v2009.vpi";
S_0x12a7f80 .scope package, "$unit" "$unit" 2 1;
 .timescale 0 0;
S_0x12a8110 .scope module, "tb" "tb" 3 84;
 .timescale -12 -12;
L_0x12992d0 .functor NOT 1, L_0x13053c0, C4<0>, C4<0>, C4<0>;
L_0x13051a0 .functor XOR 2, L_0x1305060, L_0x1305100, C4<00>, C4<00>;
L_0x13052b0 .functor XOR 2, L_0x13051a0, L_0x1305210, C4<00>, C4<00>;
v0x12fcc60_0 .net *"_ivl_10", 1 0, L_0x1305210;  1 drivers
v0x12fcd60_0 .net *"_ivl_12", 1 0, L_0x13052b0;  1 drivers
v0x12fce40_0 .net *"_ivl_2", 1 0, L_0x1300020;  1 drivers
v0x12fcf00_0 .net *"_ivl_4", 1 0, L_0x1305060;  1 drivers
v0x12fcfe0_0 .net *"_ivl_6", 1 0, L_0x1305100;  1 drivers
v0x12fd110_0 .net *"_ivl_8", 1 0, L_0x13051a0;  1 drivers
v0x12fd1f0_0 .net "a", 0 0, v0x12f7840_0;  1 drivers
v0x12fd290_0 .net "b", 0 0, v0x12f78e0_0;  1 drivers
v0x12fd330_0 .net "c", 0 0, v0x12f7980_0;  1 drivers
v0x12fd3d0_0 .var "clk", 0 0;
v0x12fd470_0 .net "d", 0 0, v0x12f7ac0_0;  1 drivers
v0x12fd510_0 .net "out_pos_dut", 0 0, L_0x1304f00;  1 drivers
v0x12fd5b0_0 .net "out_pos_ref", 0 0, L_0x12feae0;  1 drivers
v0x12fd650_0 .net "out_sop_dut", 0 0, L_0x12ffa40;  1 drivers
v0x12fd6f0_0 .net "out_sop_ref", 0 0, L_0x12d1ff0;  1 drivers
v0x12fd790_0 .var/2u "stats1", 223 0;
v0x12fd830_0 .var/2u "strobe", 0 0;
v0x12fd8d0_0 .net "tb_match", 0 0, L_0x13053c0;  1 drivers
v0x12fd9a0_0 .net "tb_mismatch", 0 0, L_0x12992d0;  1 drivers
v0x12fda40_0 .net "wavedrom_enable", 0 0, v0x12f7d90_0;  1 drivers
v0x12fdb10_0 .net "wavedrom_title", 511 0, v0x12f7e30_0;  1 drivers
L_0x1300020 .concat [ 1 1 0 0], L_0x12feae0, L_0x12d1ff0;
L_0x1305060 .concat [ 1 1 0 0], L_0x12feae0, L_0x12d1ff0;
L_0x1305100 .concat [ 1 1 0 0], L_0x1304f00, L_0x12ffa40;
L_0x1305210 .concat [ 1 1 0 0], L_0x12feae0, L_0x12d1ff0;
L_0x13053c0 .cmp/eeq 2, L_0x1300020, L_0x13052b0;
S_0x12a82a0 .scope module, "good1" "reference_module" 3 133, 3 4 0, S_0x12a8110;
 .timescale -12 -12;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /INPUT 1 "c";
    .port_info 3 /INPUT 1 "d";
    .port_info 4 /OUTPUT 1 "out_sop";
    .port_info 5 /OUTPUT 1 "out_pos";
L_0x12996b0 .functor AND 1, v0x12f7980_0, v0x12f7ac0_0, C4<1>, C4<1>;
L_0x1299a90 .functor NOT 1, v0x12f7840_0, C4<0>, C4<0>, C4<0>;
L_0x1299e70 .functor NOT 1, v0x12f78e0_0, C4<0>, C4<0>, C4<0>;
L_0x129a0f0 .functor AND 1, L_0x1299a90, L_0x1299e70, C4<1>, C4<1>;
L_0x12b2b90 .functor AND 1, L_0x129a0f0, v0x12f7980_0, C4<1>, C4<1>;
L_0x12d1ff0 .functor OR 1, L_0x12996b0, L_0x12b2b90, C4<0>, C4<0>;
L_0x12fdf60 .functor NOT 1, v0x12f78e0_0, C4<0>, C4<0>, C4<0>;
L_0x12fdfd0 .functor OR 1, L_0x12fdf60, v0x12f7ac0_0, C4<0>, C4<0>;
L_0x12fe0e0 .functor AND 1, v0x12f7980_0, L_0x12fdfd0, C4<1>, C4<1>;
L_0x12fe1a0 .functor NOT 1, v0x12f7840_0, C4<0>, C4<0>, C4<0>;
L_0x12fe270 .functor OR 1, L_0x12fe1a0, v0x12f78e0_0, C4<0>, C4<0>;
L_0x12fe2e0 .functor AND 1, L_0x12fe0e0, L_0x12fe270, C4<1>, C4<1>;
L_0x12fe460 .functor NOT 1, v0x12f78e0_0, C4<0>, C4<0>, C4<0>;
L_0x12fe4d0 .functor OR 1, L_0x12fe460, v0x12f7ac0_0, C4<0>, C4<0>;
L_0x12fe3f0 .functor AND 1, v0x12f7980_0, L_0x12fe4d0, C4<1>, C4<1>;
L_0x12fe660 .functor NOT 1, v0x12f7840_0, C4<0>, C4<0>, C4<0>;
L_0x12fe760 .functor OR 1, L_0x12fe660, v0x12f7ac0_0, C4<0>, C4<0>;
L_0x12fe820 .functor AND 1, L_0x12fe3f0, L_0x12fe760, C4<1>, C4<1>;
L_0x12fe9d0 .functor XNOR 1, L_0x12fe2e0, L_0x12fe820, C4<0>, C4<0>;
v0x1298c00_0 .net *"_ivl_0", 0 0, L_0x12996b0;  1 drivers
v0x1299000_0 .net *"_ivl_12", 0 0, L_0x12fdf60;  1 drivers
v0x12993e0_0 .net *"_ivl_14", 0 0, L_0x12fdfd0;  1 drivers
v0x12997c0_0 .net *"_ivl_16", 0 0, L_0x12fe0e0;  1 drivers
v0x1299ba0_0 .net *"_ivl_18", 0 0, L_0x12fe1a0;  1 drivers
v0x1299f80_0 .net *"_ivl_2", 0 0, L_0x1299a90;  1 drivers
v0x129a200_0 .net *"_ivl_20", 0 0, L_0x12fe270;  1 drivers
v0x12f5db0_0 .net *"_ivl_24", 0 0, L_0x12fe460;  1 drivers
v0x12f5e90_0 .net *"_ivl_26", 0 0, L_0x12fe4d0;  1 drivers
v0x12f5f70_0 .net *"_ivl_28", 0 0, L_0x12fe3f0;  1 drivers
v0x12f6050_0 .net *"_ivl_30", 0 0, L_0x12fe660;  1 drivers
v0x12f6130_0 .net *"_ivl_32", 0 0, L_0x12fe760;  1 drivers
v0x12f6210_0 .net *"_ivl_36", 0 0, L_0x12fe9d0;  1 drivers
L_0x7f067b612018 .functor BUFT 1, C4<x>, C4<0>, C4<0>, C4<0>;
v0x12f62d0_0 .net *"_ivl_38", 0 0, L_0x7f067b612018;  1 drivers
v0x12f63b0_0 .net *"_ivl_4", 0 0, L_0x1299e70;  1 drivers
v0x12f6490_0 .net *"_ivl_6", 0 0, L_0x129a0f0;  1 drivers
v0x12f6570_0 .net *"_ivl_8", 0 0, L_0x12b2b90;  1 drivers
v0x12f6650_0 .net "a", 0 0, v0x12f7840_0;  alias, 1 drivers
v0x12f6710_0 .net "b", 0 0, v0x12f78e0_0;  alias, 1 drivers
v0x12f67d0_0 .net "c", 0 0, v0x12f7980_0;  alias, 1 drivers
v0x12f6890_0 .net "d", 0 0, v0x12f7ac0_0;  alias, 1 drivers
v0x12f6950_0 .net "out_pos", 0 0, L_0x12feae0;  alias, 1 drivers
v0x12f6a10_0 .net "out_sop", 0 0, L_0x12d1ff0;  alias, 1 drivers
v0x12f6ad0_0 .net "pos0", 0 0, L_0x12fe2e0;  1 drivers
v0x12f6b90_0 .net "pos1", 0 0, L_0x12fe820;  1 drivers
L_0x12feae0 .functor MUXZ 1, L_0x7f067b612018, L_0x12fe2e0, L_0x12fe9d0, C4<>;
S_0x12f6d10 .scope module, "stim1" "stimulus_gen" 3 126, 3 22 0, S_0x12a8110;
 .timescale -12 -12;
    .port_info 0 /INPUT 1 "clk";
    .port_info 1 /OUTPUT 1 "a";
    .port_info 2 /OUTPUT 1 "b";
    .port_info 3 /OUTPUT 1 "c";
    .port_info 4 /OUTPUT 1 "d";
    .port_info 5 /OUTPUT 512 "wavedrom_title";
    .port_info 6 /OUTPUT 1 "wavedrom_enable";
    .port_info 7 /INPUT 1 "tb_match";
v0x12f7840_0 .var "a", 0 0;
v0x12f78e0_0 .var "b", 0 0;
v0x12f7980_0 .var "c", 0 0;
v0x12f7a20_0 .net "clk", 0 0, v0x12fd3d0_0;  1 drivers
v0x12f7ac0_0 .var "d", 0 0;
v0x12f7bb0_0 .var/2u "fail", 0 0;
v0x12f7c50_0 .var/2u "fail1", 0 0;
v0x12f7cf0_0 .net "tb_match", 0 0, L_0x13053c0;  alias, 1 drivers
v0x12f7d90_0 .var "wavedrom_enable", 0 0;
v0x12f7e30_0 .var "wavedrom_title", 511 0;
E_0x12a68f0/0 .event negedge, v0x12f7a20_0;
E_0x12a68f0/1 .event posedge, v0x12f7a20_0;
E_0x12a68f0 .event/or E_0x12a68f0/0, E_0x12a68f0/1;
S_0x12f7040 .scope begin, "$ivl_for_loop0" "$ivl_for_loop0" 3 68, 3 68 0, S_0x12f6d10;
 .timescale -12 -12;
v0x12f7280_0 .var/2s "i", 31 0;
E_0x12a6790 .event posedge, v0x12f7a20_0;
S_0x12f7380 .scope task, "wavedrom_start" "wavedrom_start" 3 34, 3 34 0, S_0x12f6d10;
 .timescale -12 -12;
v0x12f7580_0 .var "title", 511 0;
TD_tb.stim1.wavedrom_start ;
    %end;
S_0x12f7660 .scope task, "wavedrom_stop" "wavedrom_stop" 3 37, 3 37 0, S_0x12f6d10;
 .timescale -12 -12;
TD_tb.stim1.wavedrom_stop ;
    %delay 1, 0;
    %end;
S_0x12f8010 .scope module, "top_module1" "top_module" 3 141, 4 1 0, S_0x12a8110;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /INPUT 1 "c";
    .port_info 3 /INPUT 1 "d";
    .port_info 4 /OUTPUT 1 "out_sop";
    .port_info 5 /OUTPUT 1 "out_pos";
L_0x12fec90 .functor NOT 1, v0x12f78e0_0, C4<0>, C4<0>, C4<0>;
L_0x12fee30 .functor AND 1, v0x12f7840_0, L_0x12fec90, C4<1>, C4<1>;
L_0x12fef10 .functor NOT 1, v0x12f7980_0, C4<0>, C4<0>, C4<0>;
L_0x12ff090 .functor AND 1, L_0x12fee30, L_0x12fef10, C4<1>, C4<1>;
L_0x12ff1d0 .functor NOT 1, v0x12f7ac0_0, C4<0>, C4<0>, C4<0>;
L_0x12ff350 .functor AND 1, L_0x12ff090, L_0x12ff1d0, C4<1>, C4<1>;
L_0x12ff4a0 .functor NOT 1, v0x12f7840_0, C4<0>, C4<0>, C4<0>;
L_0x12ff620 .functor AND 1, L_0x12ff4a0, v0x12f78e0_0, C4<1>, C4<1>;
L_0x12ff730 .functor AND 1, L_0x12ff620, v0x12f7980_0, C4<1>, C4<1>;
L_0x12ff7f0 .functor AND 1, L_0x12ff730, v0x12f7ac0_0, C4<1>, C4<1>;
L_0x12ff910 .functor OR 1, L_0x12ff350, L_0x12ff7f0, C4<0>, C4<0>;
L_0x12ff9d0 .functor AND 1, v0x12f7840_0, v0x12f78e0_0, C4<1>, C4<1>;
L_0x12ffab0 .functor AND 1, L_0x12ff9d0, v0x12f7980_0, C4<1>, C4<1>;
L_0x12ffb70 .functor AND 1, L_0x12ffab0, v0x12f7ac0_0, C4<1>, C4<1>;
L_0x12ffa40 .functor OR 1, L_0x12ff910, L_0x12ffb70, C4<0>, C4<0>;
L_0x12ffda0 .functor NOT 1, v0x12f7840_0, C4<0>, C4<0>, C4<0>;
L_0x12ffea0 .functor NOT 1, v0x12f78e0_0, C4<0>, C4<0>, C4<0>;
L_0x12fff10 .functor OR 1, L_0x12ffda0, L_0x12ffea0, C4<0>, C4<0>;
L_0x13000c0 .functor NOT 1, v0x12f7980_0, C4<0>, C4<0>, C4<0>;
L_0x1300130 .functor OR 1, L_0x12fff10, L_0x13000c0, C4<0>, C4<0>;
L_0x13002f0 .functor NOT 1, v0x12f7ac0_0, C4<0>, C4<0>, C4<0>;
L_0x1300360 .functor OR 1, L_0x1300130, L_0x13002f0, C4<0>, C4<0>;
L_0x1300530 .functor NOT 1, v0x12f78e0_0, C4<0>, C4<0>, C4<0>;
L_0x13005a0 .functor OR 1, v0x12f7840_0, L_0x1300530, C4<0>, C4<0>;
L_0x1300730 .functor NOT 1, v0x12f7980_0, C4<0>, C4<0>, C4<0>;
L_0x13007a0 .functor OR 1, L_0x13005a0, L_0x1300730, C4<0>, C4<0>;
L_0x1300990 .functor NOT 1, v0x12f7ac0_0, C4<0>, C4<0>, C4<0>;
L_0x1300a00 .functor OR 1, L_0x13007a0, L_0x1300990, C4<0>, C4<0>;
L_0x1300c00 .functor AND 1, L_0x1300360, L_0x1300a00, C4<1>, C4<1>;
L_0x1300d10 .functor OR 1, v0x12f7840_0, v0x12f78e0_0, C4<0>, C4<0>;
L_0x1300e80 .functor NOT 1, v0x12f7980_0, C4<0>, C4<0>, C4<0>;
L_0x1300ef0 .functor OR 1, L_0x1300d10, L_0x1300e80, C4<0>, C4<0>;
L_0x1301110 .functor NOT 1, v0x12f7ac0_0, C4<0>, C4<0>, C4<0>;
L_0x1301180 .functor OR 1, L_0x1300ef0, L_0x1301110, C4<0>, C4<0>;
L_0x13013b0 .functor AND 1, L_0x1300c00, L_0x1301180, C4<1>, C4<1>;
L_0x13014c0 .functor OR 1, v0x12f7840_0, v0x12f78e0_0, C4<0>, C4<0>;
L_0x1301660 .functor OR 1, L_0x13014c0, v0x12f7980_0, C4<0>, C4<0>;
L_0x1301720 .functor NOT 1, v0x12f7ac0_0, C4<0>, C4<0>, C4<0>;
L_0x1301530 .functor OR 1, L_0x1301660, L_0x1301720, C4<0>, C4<0>;
L_0x13018d0 .functor AND 1, L_0x13013b0, L_0x1301530, C4<1>, C4<1>;
L_0x1301b30 .functor OR 1, v0x12f7840_0, v0x12f78e0_0, C4<0>, C4<0>;
L_0x1301ba0 .functor OR 1, L_0x1301b30, v0x12f7980_0, C4<0>, C4<0>;
L_0x1301dc0 .functor OR 1, L_0x1301ba0, v0x12f7ac0_0, C4<0>, C4<0>;
L_0x1301e80 .functor AND 1, L_0x13018d0, L_0x1301dc0, C4<1>, C4<1>;
L_0x1302100 .functor NOT 1, v0x12f7840_0, C4<0>, C4<0>, C4<0>;
L_0x1302170 .functor NOT 1, v0x12f78e0_0, C4<0>, C4<0>, C4<0>;
L_0x1302360 .functor OR 1, L_0x1302100, L_0x1302170, C4<0>, C4<0>;
L_0x1302470 .functor NOT 1, v0x12f7980_0, C4<0>, C4<0>, C4<0>;
L_0x1302880 .functor OR 1, L_0x1302360, L_0x1302470, C4<0>, C4<0>;
L_0x1302990 .functor OR 1, L_0x1302880, v0x12f7ac0_0, C4<0>, C4<0>;
L_0x1302e00 .functor AND 1, L_0x1301e80, L_0x1302990, C4<1>, C4<1>;
L_0x1302f10 .functor NOT 1, v0x12f7840_0, C4<0>, C4<0>, C4<0>;
L_0x1303340 .functor NOT 1, v0x12f78e0_0, C4<0>, C4<0>, C4<0>;
L_0x13033b0 .functor OR 1, L_0x1302f10, L_0x1303340, C4<0>, C4<0>;
L_0x1303680 .functor OR 1, L_0x13033b0, v0x12f7980_0, C4<0>, C4<0>;
L_0x1303740 .functor OR 1, L_0x1303680, v0x12f7ac0_0, C4<0>, C4<0>;
L_0x13039d0 .functor AND 1, L_0x1302e00, L_0x1303740, C4<1>, C4<1>;
L_0x1303ae0 .functor NOT 1, v0x12f7840_0, C4<0>, C4<0>, C4<0>;
L_0x1303d30 .functor OR 1, L_0x1303ae0, v0x12f78e0_0, C4<0>, C4<0>;
L_0x1303df0 .functor NOT 1, v0x12f7980_0, C4<0>, C4<0>, C4<0>;
L_0x1304050 .functor OR 1, L_0x1303d30, L_0x1303df0, C4<0>, C4<0>;
L_0x1304160 .functor OR 1, L_0x1304050, v0x12f7ac0_0, C4<0>, C4<0>;
L_0x1304420 .functor AND 1, L_0x13039d0, L_0x1304160, C4<1>, C4<1>;
L_0x1304530 .functor NOT 1, v0x12f7840_0, C4<0>, C4<0>, C4<0>;
L_0x13047b0 .functor OR 1, L_0x1304530, v0x12f78e0_0, C4<0>, C4<0>;
L_0x1304870 .functor OR 1, L_0x13047b0, v0x12f7980_0, C4<0>, C4<0>;
L_0x1304b50 .functor NOT 1, v0x12f7ac0_0, C4<0>, C4<0>, C4<0>;
L_0x1304bc0 .functor OR 1, L_0x1304870, L_0x1304b50, C4<0>, C4<0>;
L_0x1304f00 .functor AND 1, L_0x1304420, L_0x1304bc0, C4<1>, C4<1>;
v0x12f81d0_0 .net *"_ivl_0", 0 0, L_0x12fec90;  1 drivers
v0x12f82b0_0 .net *"_ivl_10", 0 0, L_0x12ff350;  1 drivers
v0x12f8390_0 .net *"_ivl_100", 0 0, L_0x1302e00;  1 drivers
v0x12f8480_0 .net *"_ivl_102", 0 0, L_0x1302f10;  1 drivers
v0x12f8560_0 .net *"_ivl_104", 0 0, L_0x1303340;  1 drivers
v0x12f8690_0 .net *"_ivl_106", 0 0, L_0x13033b0;  1 drivers
v0x12f8770_0 .net *"_ivl_108", 0 0, L_0x1303680;  1 drivers
v0x12f8850_0 .net *"_ivl_110", 0 0, L_0x1303740;  1 drivers
v0x12f8930_0 .net *"_ivl_112", 0 0, L_0x13039d0;  1 drivers
v0x12f8aa0_0 .net *"_ivl_114", 0 0, L_0x1303ae0;  1 drivers
v0x12f8b80_0 .net *"_ivl_116", 0 0, L_0x1303d30;  1 drivers
v0x12f8c60_0 .net *"_ivl_118", 0 0, L_0x1303df0;  1 drivers
v0x12f8d40_0 .net *"_ivl_12", 0 0, L_0x12ff4a0;  1 drivers
v0x12f8e20_0 .net *"_ivl_120", 0 0, L_0x1304050;  1 drivers
v0x12f8f00_0 .net *"_ivl_122", 0 0, L_0x1304160;  1 drivers
v0x12f8fe0_0 .net *"_ivl_124", 0 0, L_0x1304420;  1 drivers
v0x12f90c0_0 .net *"_ivl_126", 0 0, L_0x1304530;  1 drivers
v0x12f92b0_0 .net *"_ivl_128", 0 0, L_0x13047b0;  1 drivers
v0x12f9390_0 .net *"_ivl_130", 0 0, L_0x1304870;  1 drivers
v0x12f9470_0 .net *"_ivl_132", 0 0, L_0x1304b50;  1 drivers
v0x12f9550_0 .net *"_ivl_134", 0 0, L_0x1304bc0;  1 drivers
v0x12f9630_0 .net *"_ivl_14", 0 0, L_0x12ff620;  1 drivers
v0x12f9710_0 .net *"_ivl_16", 0 0, L_0x12ff730;  1 drivers
v0x12f97f0_0 .net *"_ivl_18", 0 0, L_0x12ff7f0;  1 drivers
v0x12f98d0_0 .net *"_ivl_2", 0 0, L_0x12fee30;  1 drivers
v0x12f99b0_0 .net *"_ivl_20", 0 0, L_0x12ff910;  1 drivers
v0x12f9a90_0 .net *"_ivl_22", 0 0, L_0x12ff9d0;  1 drivers
v0x12f9b70_0 .net *"_ivl_24", 0 0, L_0x12ffab0;  1 drivers
v0x12f9c50_0 .net *"_ivl_26", 0 0, L_0x12ffb70;  1 drivers
v0x12f9d30_0 .net *"_ivl_30", 0 0, L_0x12ffda0;  1 drivers
v0x12f9e10_0 .net *"_ivl_32", 0 0, L_0x12ffea0;  1 drivers
v0x12f9ef0_0 .net *"_ivl_34", 0 0, L_0x12fff10;  1 drivers
v0x12f9fd0_0 .net *"_ivl_36", 0 0, L_0x13000c0;  1 drivers
v0x12fa2c0_0 .net *"_ivl_38", 0 0, L_0x1300130;  1 drivers
v0x12fa3a0_0 .net *"_ivl_4", 0 0, L_0x12fef10;  1 drivers
v0x12fa480_0 .net *"_ivl_40", 0 0, L_0x13002f0;  1 drivers
v0x12fa560_0 .net *"_ivl_42", 0 0, L_0x1300360;  1 drivers
v0x12fa640_0 .net *"_ivl_44", 0 0, L_0x1300530;  1 drivers
v0x12fa720_0 .net *"_ivl_46", 0 0, L_0x13005a0;  1 drivers
v0x12fa800_0 .net *"_ivl_48", 0 0, L_0x1300730;  1 drivers
v0x12fa8e0_0 .net *"_ivl_50", 0 0, L_0x13007a0;  1 drivers
v0x12fa9c0_0 .net *"_ivl_52", 0 0, L_0x1300990;  1 drivers
v0x12faaa0_0 .net *"_ivl_54", 0 0, L_0x1300a00;  1 drivers
v0x12fab80_0 .net *"_ivl_56", 0 0, L_0x1300c00;  1 drivers
v0x12fac60_0 .net *"_ivl_58", 0 0, L_0x1300d10;  1 drivers
v0x12fad40_0 .net *"_ivl_6", 0 0, L_0x12ff090;  1 drivers
v0x12fae20_0 .net *"_ivl_60", 0 0, L_0x1300e80;  1 drivers
v0x12faf00_0 .net *"_ivl_62", 0 0, L_0x1300ef0;  1 drivers
v0x12fafe0_0 .net *"_ivl_64", 0 0, L_0x1301110;  1 drivers
v0x12fb0c0_0 .net *"_ivl_66", 0 0, L_0x1301180;  1 drivers
v0x12fb1a0_0 .net *"_ivl_68", 0 0, L_0x13013b0;  1 drivers
v0x12fb280_0 .net *"_ivl_70", 0 0, L_0x13014c0;  1 drivers
v0x12fb360_0 .net *"_ivl_72", 0 0, L_0x1301660;  1 drivers
v0x12fb440_0 .net *"_ivl_74", 0 0, L_0x1301720;  1 drivers
v0x12fb520_0 .net *"_ivl_76", 0 0, L_0x1301530;  1 drivers
v0x12fb600_0 .net *"_ivl_78", 0 0, L_0x13018d0;  1 drivers
v0x12fb6e0_0 .net *"_ivl_8", 0 0, L_0x12ff1d0;  1 drivers
v0x12fb7c0_0 .net *"_ivl_80", 0 0, L_0x1301b30;  1 drivers
v0x12fb8a0_0 .net *"_ivl_82", 0 0, L_0x1301ba0;  1 drivers
v0x12fb980_0 .net *"_ivl_84", 0 0, L_0x1301dc0;  1 drivers
v0x12fba60_0 .net *"_ivl_86", 0 0, L_0x1301e80;  1 drivers
v0x12fbb40_0 .net *"_ivl_88", 0 0, L_0x1302100;  1 drivers
v0x12fbc20_0 .net *"_ivl_90", 0 0, L_0x1302170;  1 drivers
v0x12fbd00_0 .net *"_ivl_92", 0 0, L_0x1302360;  1 drivers
v0x12fbde0_0 .net *"_ivl_94", 0 0, L_0x1302470;  1 drivers
v0x12fc2d0_0 .net *"_ivl_96", 0 0, L_0x1302880;  1 drivers
v0x12fc3b0_0 .net *"_ivl_98", 0 0, L_0x1302990;  1 drivers
v0x12fc490_0 .net "a", 0 0, v0x12f7840_0;  alias, 1 drivers
v0x12fc530_0 .net "b", 0 0, v0x12f78e0_0;  alias, 1 drivers
v0x12fc620_0 .net "c", 0 0, v0x12f7980_0;  alias, 1 drivers
v0x12fc710_0 .net "d", 0 0, v0x12f7ac0_0;  alias, 1 drivers
v0x12fc800_0 .net "out_pos", 0 0, L_0x1304f00;  alias, 1 drivers
v0x12fc8c0_0 .net "out_sop", 0 0, L_0x12ffa40;  alias, 1 drivers
S_0x12fca40 .scope task, "wait_for_end_of_timestep" "wait_for_end_of_timestep" 3 151, 3 151 0, S_0x12a8110;
 .timescale -12 -12;
E_0x128e9f0 .event anyedge, v0x12fd830_0;
TD_tb.wait_for_end_of_timestep ;
    %pushi/vec4 5, 0, 32;
T_2.0 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_2.1, 5;
    %jmp/1 T_2.1, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %load/vec4 v0x12fd830_0;
    %nor/r;
    %assign/vec4 v0x12fd830_0, 0;
    %wait E_0x128e9f0;
    %jmp T_2.0;
T_2.1 ;
    %pop/vec4 1;
    %end;
    .scope S_0x12f6d10;
T_3 ;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x12f7bb0_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x12f7c50_0, 0, 1;
    %end;
    .thread T_3, $init;
    .scope S_0x12f6d10;
T_4 ;
    %wait E_0x12a68f0;
    %load/vec4 v0x12f7cf0_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_4.0, 8;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x12f7bb0_0, 0, 1;
T_4.0 ;
    %jmp T_4;
    .thread T_4;
    .scope S_0x12f6d10;
T_5 ;
    %wait E_0x12a6790;
    %pushi/vec4 0, 0, 4;
    %split/vec4 1;
    %assign/vec4 v0x12f7ac0_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x12f7980_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x12f78e0_0, 0;
    %assign/vec4 v0x12f7840_0, 0;
    %wait E_0x12a6790;
    %pushi/vec4 1, 0, 4;
    %split/vec4 1;
    %assign/vec4 v0x12f7ac0_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x12f7980_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x12f78e0_0, 0;
    %assign/vec4 v0x12f7840_0, 0;
    %wait E_0x12a6790;
    %pushi/vec4 2, 0, 4;
    %split/vec4 1;
    %assign/vec4 v0x12f7ac0_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x12f7980_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x12f78e0_0, 0;
    %assign/vec4 v0x12f7840_0, 0;
    %wait E_0x12a6790;
    %pushi/vec4 4, 0, 4;
    %split/vec4 1;
    %assign/vec4 v0x12f7ac0_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x12f7980_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x12f78e0_0, 0;
    %assign/vec4 v0x12f7840_0, 0;
    %wait E_0x12a6790;
    %pushi/vec4 5, 0, 4;
    %split/vec4 1;
    %assign/vec4 v0x12f7ac0_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x12f7980_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x12f78e0_0, 0;
    %assign/vec4 v0x12f7840_0, 0;
    %wait E_0x12a6790;
    %pushi/vec4 6, 0, 4;
    %split/vec4 1;
    %assign/vec4 v0x12f7ac0_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x12f7980_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x12f78e0_0, 0;
    %assign/vec4 v0x12f7840_0, 0;
    %wait E_0x12a6790;
    %pushi/vec4 7, 0, 4;
    %split/vec4 1;
    %assign/vec4 v0x12f7ac0_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x12f7980_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x12f78e0_0, 0;
    %assign/vec4 v0x12f7840_0, 0;
    %wait E_0x12a6790;
    %pushi/vec4 9, 0, 4;
    %split/vec4 1;
    %assign/vec4 v0x12f7ac0_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x12f7980_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x12f78e0_0, 0;
    %assign/vec4 v0x12f7840_0, 0;
    %wait E_0x12a6790;
    %pushi/vec4 10, 0, 4;
    %split/vec4 1;
    %assign/vec4 v0x12f7ac0_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x12f7980_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x12f78e0_0, 0;
    %assign/vec4 v0x12f7840_0, 0;
    %wait E_0x12a6790;
    %pushi/vec4 13, 0, 4;
    %split/vec4 1;
    %assign/vec4 v0x12f7ac0_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x12f7980_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x12f78e0_0, 0;
    %assign/vec4 v0x12f7840_0, 0;
    %wait E_0x12a6790;
    %pushi/vec4 14, 0, 4;
    %split/vec4 1;
    %assign/vec4 v0x12f7ac0_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x12f7980_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x12f78e0_0, 0;
    %assign/vec4 v0x12f7840_0, 0;
    %wait E_0x12a6790;
    %pushi/vec4 15, 0, 4;
    %split/vec4 1;
    %assign/vec4 v0x12f7ac0_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x12f7980_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x12f78e0_0, 0;
    %assign/vec4 v0x12f7840_0, 0;
    %wait E_0x12a6790;
    %load/vec4 v0x12f7bb0_0;
    %store/vec4 v0x12f7c50_0, 0, 1;
    %fork t_1, S_0x12f7040;
    %jmp t_0;
    .scope S_0x12f7040;
t_1 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x12f7280_0, 0, 32;
T_5.0 ; Top of for-loop 
    %load/vec4 v0x12f7280_0;
    %cmpi/s 16, 0, 32;
    %jmp/0xz T_5.1, 5;
    %wait E_0x12a6790;
    %load/vec4 v0x12f7280_0;
    %pad/s 4;
    %split/vec4 1;
    %assign/vec4 v0x12f7ac0_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x12f7980_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x12f78e0_0, 0;
    %assign/vec4 v0x12f7840_0, 0;
T_5.2 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x12f7280_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x12f7280_0, 0, 32;
    %jmp T_5.0;
T_5.1 ; for-loop exit label
    %end;
    .scope S_0x12f6d10;
t_0 %join;
    %pushi/vec4 50, 0, 32;
T_5.3 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_5.4, 5;
    %jmp/1 T_5.4, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_0x12a68f0;
    %vpi_func 3 74 "$random" 32 {0 0 0};
    %pad/s 4;
    %split/vec4 1;
    %assign/vec4 v0x12f7ac0_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x12f7980_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x12f78e0_0, 0;
    %assign/vec4 v0x12f7840_0, 0;
    %jmp T_5.3;
T_5.4 ;
    %pop/vec4 1;
    %load/vec4 v0x12f7bb0_0;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_5.7, 9;
    %load/vec4 v0x12f7c50_0;
    %inv;
    %and;
T_5.7;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.5, 8;
    %vpi_call/w 3 77 "$display", "Hint: Your circuit passes on the 12 required input combinations, but doesn't match the don't-care cases. Are you using minimal SOP and POS?" {0 0 0};
T_5.5 ;
    %vpi_call/w 3 79 "$finish" {0 0 0};
    %end;
    .thread T_5;
    .scope S_0x12a8110;
T_6 ;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x12fd3d0_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x12fd830_0, 0, 1;
    %end;
    .thread T_6, $init;
    .scope S_0x12a8110;
T_7 ;
T_7.0 ;
    %delay 5, 0;
    %load/vec4 v0x12fd3d0_0;
    %inv;
    %store/vec4 v0x12fd3d0_0, 0, 1;
    %jmp T_7.0;
T_7.1 ;
    %end;
    .thread T_7;
    .scope S_0x12a8110;
T_8 ;
    %vpi_call/w 3 118 "$dumpfile", "wave.vcd" {0 0 0};
    %vpi_call/w 3 119 "$dumpvars", 32'sb00000000000000000000000000000001, v0x12f7a20_0, v0x12fd9a0_0, v0x12fd1f0_0, v0x12fd290_0, v0x12fd330_0, v0x12fd470_0, v0x12fd6f0_0, v0x12fd650_0, v0x12fd5b0_0, v0x12fd510_0 {0 0 0};
    %end;
    .thread T_8;
    .scope S_0x12a8110;
T_9 ;
    %load/vec4 v0x12fd790_0;
    %parti/u 32, 128, 32;
    %cmpi/ne 0, 0, 32;
    %jmp/0xz  T_9.0, 4;
    %load/vec4 v0x12fd790_0;
    %parti/u 32, 128, 32;
    %load/vec4 v0x12fd790_0;
    %parti/u 32, 96, 32;
    %vpi_call/w 3 160 "$display", "Hint: Output '%s' has %0d mismatches. First mismatch occurred at time %0d.", "out_sop", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %jmp T_9.1;
T_9.0 ;
    %vpi_call/w 3 161 "$display", "Hint: Output '%s' has no mismatches.", "out_sop" {0 0 0};
T_9.1 ;
    %load/vec4 v0x12fd790_0;
    %parti/u 32, 64, 32;
    %cmpi/ne 0, 0, 32;
    %jmp/0xz  T_9.2, 4;
    %load/vec4 v0x12fd790_0;
    %parti/u 32, 64, 32;
    %load/vec4 v0x12fd790_0;
    %parti/u 32, 32, 32;
    %vpi_call/w 3 162 "$display", "Hint: Output '%s' has %0d mismatches. First mismatch occurred at time %0d.", "out_pos", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %jmp T_9.3;
T_9.2 ;
    %vpi_call/w 3 163 "$display", "Hint: Output '%s' has no mismatches.", "out_pos" {0 0 0};
T_9.3 ;
    %load/vec4 v0x12fd790_0;
    %parti/u 32, 192, 32;
    %load/vec4 v0x12fd790_0;
    %parti/u 32, 0, 32;
    %vpi_call/w 3 165 "$display", "Hint: Total mismatched samples is %1d out of %1d samples\012", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %vpi_call/w 3 166 "$display", "Simulation finished at %0d ps", $time {0 0 0};
    %load/vec4 v0x12fd790_0;
    %parti/u 32, 192, 32;
    %load/vec4 v0x12fd790_0;
    %parti/u 32, 0, 32;
    %vpi_call/w 3 167 "$display", "Mismatches: %1d in %1d samples", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %end;
    .thread T_9, $final;
    .scope S_0x12a8110;
T_10 ;
    %wait E_0x12a68f0;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x12fd790_0;
    %pushi/vec4 0, 0, 32;
    %part/u 32;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x12fd790_0, 4, 32;
    %load/vec4 v0x12fd8d0_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_10.0, 8;
    %load/vec4 v0x12fd790_0;
    %parti/u 32, 192, 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_10.2, 4;
    %vpi_func 3 178 "$time" 64 {0 0 0};
    %cast2;
    %pad/u 32;
    %ix/load 4, 160, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x12fd790_0, 4, 32;
T_10.2 ;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x12fd790_0;
    %pushi/vec4 192, 0, 32;
    %part/u 32;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %ix/load 4, 192, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x12fd790_0, 4, 32;
T_10.0 ;
    %load/vec4 v0x12fd6f0_0;
    %load/vec4 v0x12fd6f0_0;
    %load/vec4 v0x12fd650_0;
    %xor;
    %load/vec4 v0x12fd6f0_0;
    %xor;
    %cmp/ne;
    %jmp/0xz  T_10.4, 6;
    %load/vec4 v0x12fd790_0;
    %parti/u 32, 128, 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_10.6, 4;
    %vpi_func 3 182 "$time" 64 {0 0 0};
    %cast2;
    %pad/u 32;
    %ix/load 4, 96, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x12fd790_0, 4, 32;
T_10.6 ;
    %load/vec4 v0x12fd790_0;
    %parti/u 32, 128, 32;
    %addi 1, 0, 32;
    %ix/load 4, 128, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x12fd790_0, 4, 32;
T_10.4 ;
    %load/vec4 v0x12fd5b0_0;
    %load/vec4 v0x12fd5b0_0;
    %load/vec4 v0x12fd510_0;
    %xor;
    %load/vec4 v0x12fd5b0_0;
    %xor;
    %cmp/ne;
    %jmp/0xz  T_10.8, 6;
    %load/vec4 v0x12fd790_0;
    %parti/u 32, 64, 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_10.10, 4;
    %vpi_func 3 185 "$time" 64 {0 0 0};
    %cast2;
    %pad/u 32;
    %ix/load 4, 32, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x12fd790_0, 4, 32;
T_10.10 ;
    %load/vec4 v0x12fd790_0;
    %parti/u 32, 64, 32;
    %addi 1, 0, 32;
    %ix/load 4, 64, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x12fd790_0, 4, 32;
T_10.8 ;
    %jmp T_10;
    .thread T_10;
# The file index is used to find the file name in the following table.
:file_names 5;
    "N/A";
    "<interactive>";
    "-";
    "/home/jmb9986/AutoChip/autochip_scripts/../verilogeval_prompts_tbs/ve_testbenches_human/ece241_2013_q2/ece241_2013_q2_tb.sv";
    "/home/jmb9986/AutoChip/autochip_scripts/outputs/claude-3-haiku-20240307_full_feedback/can5_depth10/human/ece241_2013_q2/iter7/response4/top_module.sv";
