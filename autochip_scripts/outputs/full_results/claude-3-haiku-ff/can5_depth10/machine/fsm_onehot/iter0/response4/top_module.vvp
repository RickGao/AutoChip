#! /usr/local/bin/vvp
:ivl_version "13.0 (devel)" "(s20221226-331-g77d7f0b8f)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision - 12;
:vpi_module "/usr/local/lib/ivl/system.vpi";
:vpi_module "/usr/local/lib/ivl/vhdl_sys.vpi";
:vpi_module "/usr/local/lib/ivl/vhdl_textio.vpi";
:vpi_module "/usr/local/lib/ivl/v2005_math.vpi";
:vpi_module "/usr/local/lib/ivl/va_math.vpi";
:vpi_module "/usr/local/lib/ivl/v2009.vpi";
S_0x1f43230 .scope package, "$unit" "$unit" 2 1;
 .timescale 0 0;
S_0x1f569f0 .scope module, "tb" "tb" 3 122;
 .timescale -12 -12;
L_0x1f436c0 .functor NOT 1, L_0x1fbeb10, C4<0>, C4<0>, C4<0>;
L_0x1fbe990 .functor XOR 12, L_0x1fbe850, L_0x1fbe8f0, C4<000000000000>, C4<000000000000>;
L_0x1fbeaa0 .functor XOR 12, L_0x1fbe990, L_0x1fbea00, C4<000000000000>, C4<000000000000>;
v0x1fb7c80_0 .net *"_ivl_10", 11 0, L_0x1fbea00;  1 drivers
v0x1fb7d80_0 .net *"_ivl_12", 11 0, L_0x1fbeaa0;  1 drivers
v0x1fb7e60_0 .net *"_ivl_2", 11 0, L_0x1fbe7b0;  1 drivers
v0x1fb7f20_0 .net *"_ivl_4", 11 0, L_0x1fbe850;  1 drivers
v0x1fb8000_0 .net *"_ivl_6", 11 0, L_0x1fbe8f0;  1 drivers
v0x1fb8130_0 .net *"_ivl_8", 11 0, L_0x1fbe990;  1 drivers
v0x1fb8210_0 .var "clk", 0 0;
v0x1fb82b0_0 .net "in", 0 0, v0x1fb4480_0;  1 drivers
v0x1fb8350_0 .net "next_state_dut", 9 0, L_0x1fbda90;  1 drivers
v0x1fb83f0_0 .net "next_state_ref", 9 0, L_0x1fbb290;  1 drivers
v0x1fb8500_0 .net "out1_dut", 0 0, L_0x1fbbb50;  1 drivers
v0x1fb85a0_0 .net "out1_ref", 0 0, L_0x1f46510;  1 drivers
v0x1fb8640_0 .net "out2_dut", 0 0, L_0x1fbbdf0;  1 drivers
v0x1fb86e0_0 .net "out2_ref", 0 0, L_0x1f473b0;  1 drivers
v0x1fb87b0_0 .net "state", 9 0, v0x1fb47b0_0;  1 drivers
v0x1fb8850_0 .var/2u "stats1", 287 0;
v0x1fb88f0_0 .var/2u "strobe", 0 0;
v0x1fb8990_0 .net "tb_match", 0 0, L_0x1fbeb10;  1 drivers
v0x1fb8a60_0 .net "tb_mismatch", 0 0, L_0x1f436c0;  1 drivers
v0x1fb8b00_0 .net "wavedrom_enable", 0 0, v0x1fb49f0_0;  1 drivers
v0x1fb8bd0_0 .net "wavedrom_title", 511 0, v0x1fb4ab0_0;  1 drivers
L_0x1fbe7b0 .concat [ 1 1 10 0], L_0x1f473b0, L_0x1f46510, L_0x1fbb290;
L_0x1fbe850 .concat [ 1 1 10 0], L_0x1f473b0, L_0x1f46510, L_0x1fbb290;
L_0x1fbe8f0 .concat [ 1 1 10 0], L_0x1fbbdf0, L_0x1fbbb50, L_0x1fbda90;
L_0x1fbea00 .concat [ 1 1 10 0], L_0x1f473b0, L_0x1f46510, L_0x1fbb290;
L_0x1fbeb10 .cmp/eeq 12, L_0x1fbe7b0, L_0x1fbeaa0;
S_0x1f56b80 .scope module, "good1" "reference_module" 3 171, 3 4 0, S_0x1f569f0;
 .timescale -12 -12;
    .port_info 0 /INPUT 1 "in";
    .port_info 1 /INPUT 10 "state";
    .port_info 2 /OUTPUT 10 "next_state";
    .port_info 3 /OUTPUT 1 "out1";
    .port_info 4 /OUTPUT 1 "out2";
L_0x1f46510 .functor OR 1, L_0x1fb8d20, L_0x1fb8dc0, C4<0>, C4<0>;
L_0x1f473b0 .functor OR 1, L_0x1fb8f50, L_0x1fb8ff0, C4<0>, C4<0>;
L_0x1f47b00 .functor OR 1, L_0x1fb94d0, L_0x1fb9570, C4<0>, C4<0>;
L_0x1f44510 .functor OR 1, L_0x1f47b00, L_0x1fb9700, C4<0>, C4<0>;
L_0x1f645c0 .functor OR 1, L_0x1f44510, L_0x1fb9870, C4<0>, C4<0>;
L_0x1f8adf0 .functor AND 1, L_0x1fb91b0, L_0x1f645c0, C4<1>, C4<1>;
L_0x1fb9c50 .functor OR 1, L_0x1fb9aa0, L_0x1fb9b40, C4<0>, C4<0>;
L_0x1fb9e00 .functor OR 1, L_0x1fb9c50, L_0x1fb9d60, C4<0>, C4<0>;
L_0x1fb9f60 .functor AND 1, v0x1fb4480_0, L_0x1fb9e00, C4<1>, C4<1>;
L_0x1fb9be0 .functor AND 1, v0x1fb4480_0, L_0x1fba020, C4<1>, C4<1>;
L_0x1fba4a0 .functor AND 1, v0x1fb4480_0, L_0x1fba1f0, C4<1>, C4<1>;
L_0x1fba640 .functor AND 1, v0x1fb4480_0, L_0x1fba510, C4<1>, C4<1>;
L_0x1fba810 .functor AND 1, v0x1fb4480_0, L_0x1fba770, C4<1>, C4<1>;
L_0x1fbaa40 .functor AND 1, v0x1fb4480_0, L_0x1fba900, C4<1>, C4<1>;
L_0x1fba700 .functor OR 1, L_0x1fbabb0, L_0x1fbac50, C4<0>, C4<0>;
L_0x1fbaea0 .functor AND 1, v0x1fb4480_0, L_0x1fba700, C4<1>, C4<1>;
L_0x1fbb150 .functor AND 1, L_0x1fba9a0, L_0x1fbaff0, C4<1>, C4<1>;
L_0x1fbb810 .functor AND 1, L_0x1fbb600, L_0x1fbb770, C4<1>, C4<1>;
v0x1f466c0_0 .net *"_ivl_1", 0 0, L_0x1fb8d20;  1 drivers
v0x1f474c0_0 .net *"_ivl_100", 0 0, L_0x1fbb600;  1 drivers
v0x1f47560_0 .net *"_ivl_102", 0 0, L_0x1fbb770;  1 drivers
v0x1f47d70_0 .net *"_ivl_104", 0 0, L_0x1fbb810;  1 drivers
v0x1f47e10_0 .net *"_ivl_15", 0 0, L_0x1fb91b0;  1 drivers
v0x1f44660_0 .net *"_ivl_17", 4 0, L_0x1fb92e0;  1 drivers
v0x1f44700_0 .net *"_ivl_19", 0 0, L_0x1fb94d0;  1 drivers
v0x1fb0f80_0 .net *"_ivl_21", 0 0, L_0x1fb9570;  1 drivers
v0x1fb1060_0 .net *"_ivl_22", 0 0, L_0x1f47b00;  1 drivers
v0x1fb1140_0 .net *"_ivl_25", 0 0, L_0x1fb9700;  1 drivers
v0x1fb1220_0 .net *"_ivl_26", 0 0, L_0x1f44510;  1 drivers
v0x1fb1300_0 .net *"_ivl_29", 0 0, L_0x1fb9870;  1 drivers
v0x1fb13e0_0 .net *"_ivl_3", 0 0, L_0x1fb8dc0;  1 drivers
v0x1fb14c0_0 .net *"_ivl_30", 0 0, L_0x1f645c0;  1 drivers
v0x1fb15a0_0 .net *"_ivl_33", 0 0, L_0x1f8adf0;  1 drivers
v0x1fb1660_0 .net *"_ivl_37", 0 0, L_0x1fb9aa0;  1 drivers
v0x1fb1740_0 .net *"_ivl_39", 0 0, L_0x1fb9b40;  1 drivers
v0x1fb1820_0 .net *"_ivl_40", 0 0, L_0x1fb9c50;  1 drivers
v0x1fb1900_0 .net *"_ivl_43", 0 0, L_0x1fb9d60;  1 drivers
v0x1fb19e0_0 .net *"_ivl_44", 0 0, L_0x1fb9e00;  1 drivers
v0x1fb1ac0_0 .net *"_ivl_47", 0 0, L_0x1fb9f60;  1 drivers
v0x1fb1b80_0 .net *"_ivl_51", 0 0, L_0x1fba020;  1 drivers
v0x1fb1c60_0 .net *"_ivl_53", 0 0, L_0x1fb9be0;  1 drivers
v0x1fb1d20_0 .net *"_ivl_57", 0 0, L_0x1fba1f0;  1 drivers
v0x1fb1e00_0 .net *"_ivl_59", 0 0, L_0x1fba4a0;  1 drivers
v0x1fb1ec0_0 .net *"_ivl_63", 0 0, L_0x1fba510;  1 drivers
v0x1fb1fa0_0 .net *"_ivl_65", 0 0, L_0x1fba640;  1 drivers
v0x1fb2060_0 .net *"_ivl_69", 0 0, L_0x1fba770;  1 drivers
v0x1fb2140_0 .net *"_ivl_7", 0 0, L_0x1fb8f50;  1 drivers
v0x1fb2220_0 .net *"_ivl_71", 0 0, L_0x1fba810;  1 drivers
v0x1fb22e0_0 .net *"_ivl_75", 0 0, L_0x1fba900;  1 drivers
v0x1fb23c0_0 .net *"_ivl_77", 0 0, L_0x1fbaa40;  1 drivers
v0x1fb2480_0 .net *"_ivl_81", 0 0, L_0x1fbabb0;  1 drivers
v0x1fb2770_0 .net *"_ivl_83", 0 0, L_0x1fbac50;  1 drivers
v0x1fb2850_0 .net *"_ivl_84", 0 0, L_0x1fba700;  1 drivers
v0x1fb2930_0 .net *"_ivl_87", 0 0, L_0x1fbaea0;  1 drivers
v0x1fb29f0_0 .net *"_ivl_9", 0 0, L_0x1fb8ff0;  1 drivers
v0x1fb2ad0_0 .net *"_ivl_91", 0 0, L_0x1fba9a0;  1 drivers
v0x1fb2b90_0 .net *"_ivl_93", 0 0, L_0x1fbaff0;  1 drivers
v0x1fb2c70_0 .net *"_ivl_95", 0 0, L_0x1fbb150;  1 drivers
v0x1fb2d30_0 .net "in", 0 0, v0x1fb4480_0;  alias, 1 drivers
v0x1fb2df0_0 .net "next_state", 9 0, L_0x1fbb290;  alias, 1 drivers
v0x1fb2ed0_0 .net "out1", 0 0, L_0x1f46510;  alias, 1 drivers
v0x1fb2f90_0 .net "out2", 0 0, L_0x1f473b0;  alias, 1 drivers
v0x1fb3050_0 .net "state", 9 0, v0x1fb47b0_0;  alias, 1 drivers
L_0x1fb8d20 .part v0x1fb47b0_0, 8, 1;
L_0x1fb8dc0 .part v0x1fb47b0_0, 9, 1;
L_0x1fb8f50 .part v0x1fb47b0_0, 7, 1;
L_0x1fb8ff0 .part v0x1fb47b0_0, 9, 1;
L_0x1fb91b0 .reduce/nor v0x1fb4480_0;
L_0x1fb92e0 .part v0x1fb47b0_0, 0, 5;
L_0x1fb94d0 .reduce/or L_0x1fb92e0;
L_0x1fb9570 .part v0x1fb47b0_0, 7, 1;
L_0x1fb9700 .part v0x1fb47b0_0, 8, 1;
L_0x1fb9870 .part v0x1fb47b0_0, 9, 1;
L_0x1fb9aa0 .part v0x1fb47b0_0, 0, 1;
L_0x1fb9b40 .part v0x1fb47b0_0, 8, 1;
L_0x1fb9d60 .part v0x1fb47b0_0, 9, 1;
L_0x1fba020 .part v0x1fb47b0_0, 1, 1;
L_0x1fba1f0 .part v0x1fb47b0_0, 2, 1;
L_0x1fba510 .part v0x1fb47b0_0, 3, 1;
L_0x1fba770 .part v0x1fb47b0_0, 4, 1;
L_0x1fba900 .part v0x1fb47b0_0, 5, 1;
L_0x1fbabb0 .part v0x1fb47b0_0, 6, 1;
L_0x1fbac50 .part v0x1fb47b0_0, 7, 1;
L_0x1fba9a0 .reduce/nor v0x1fb4480_0;
L_0x1fbaff0 .part v0x1fb47b0_0, 5, 1;
LS_0x1fbb290_0_0 .concat8 [ 1 1 1 1], L_0x1f8adf0, L_0x1fb9f60, L_0x1fb9be0, L_0x1fba4a0;
LS_0x1fbb290_0_4 .concat8 [ 1 1 1 1], L_0x1fba640, L_0x1fba810, L_0x1fbaa40, L_0x1fbaea0;
LS_0x1fbb290_0_8 .concat8 [ 1 1 0 0], L_0x1fbb150, L_0x1fbb810;
L_0x1fbb290 .concat8 [ 4 4 2 0], LS_0x1fbb290_0_0, LS_0x1fbb290_0_4, LS_0x1fbb290_0_8;
L_0x1fbb600 .reduce/nor v0x1fb4480_0;
L_0x1fbb770 .part v0x1fb47b0_0, 6, 1;
S_0x1fb31d0 .scope module, "stim1" "stimulus_gen" 3 166, 3 29 0, S_0x1f569f0;
 .timescale -12 -12;
    .port_info 0 /INPUT 1 "clk";
    .port_info 1 /OUTPUT 1 "in";
    .port_info 2 /OUTPUT 10 "state";
    .port_info 3 /INPUT 1 "tb_match";
    .port_info 4 /INPUT 10 "next_state_ref";
    .port_info 5 /INPUT 10 "next_state_dut";
    .port_info 6 /OUTPUT 512 "wavedrom_title";
    .port_info 7 /OUTPUT 1 "wavedrom_enable";
v0x1fb4200_0 .net "clk", 0 0, v0x1fb8210_0;  1 drivers
v0x1fb42e0_0 .var/2s "errored1", 31 0;
v0x1fb43c0_0 .var/2s "errored2", 31 0;
v0x1fb4480_0 .var "in", 0 0;
v0x1fb4520_0 .net "next_state_dut", 9 0, L_0x1fbda90;  alias, 1 drivers
v0x1fb4630_0 .net "next_state_ref", 9 0, L_0x1fbb290;  alias, 1 drivers
v0x1fb46f0_0 .var/2s "onehot_error", 31 0;
v0x1fb47b0_0 .var "state", 9 0;
v0x1fb4870_0 .var "state_error", 9 0;
v0x1fb4930_0 .net "tb_match", 0 0, L_0x1fbeb10;  alias, 1 drivers
v0x1fb49f0_0 .var "wavedrom_enable", 0 0;
v0x1fb4ab0_0 .var "wavedrom_title", 511 0;
E_0x1f52470 .event negedge, v0x1fb4200_0;
E_0x1f526c0 .event posedge, v0x1fb4200_0;
S_0x1fb3410 .scope begin, "$ivl_for_loop0" "$ivl_for_loop0" 3 69, 3 69 0, S_0x1fb31d0;
 .timescale -12 -12;
v0x1fb3650_0 .var/2s "i", 31 0;
E_0x1f51d40/0 .event negedge, v0x1fb4200_0;
E_0x1f51d40/1 .event posedge, v0x1fb4200_0;
E_0x1f51d40 .event/or E_0x1f51d40/0, E_0x1f51d40/1;
S_0x1fb3750 .scope begin, "$ivl_for_loop1" "$ivl_for_loop1" 3 74, 3 74 0, S_0x1fb31d0;
 .timescale -12 -12;
v0x1fb3950_0 .var/2s "i", 31 0;
S_0x1fb3a30 .scope begin, "$ivl_for_loop2" "$ivl_for_loop2" 3 114, 3 114 0, S_0x1fb31d0;
 .timescale -12 -12;
v0x1fb3c10_0 .var/2s "i", 31 0;
S_0x1fb3cf0 .scope task, "wavedrom_start" "wavedrom_start" 3 45, 3 45 0, S_0x1fb31d0;
 .timescale -12 -12;
v0x1fb3ed0_0 .var "title", 511 0;
TD_tb.stim1.wavedrom_start ;
    %end;
S_0x1fb3fd0 .scope task, "wavedrom_stop" "wavedrom_stop" 3 48, 3 48 0, S_0x1fb31d0;
 .timescale -12 -12;
TD_tb.stim1.wavedrom_stop ;
    %delay 1, 0;
    %end;
S_0x1fb4c90 .scope module, "top_module1" "top_module" 3 178, 4 1 0, S_0x1f569f0;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "in";
    .port_info 1 /INPUT 10 "state";
    .port_info 2 /OUTPUT 10 "next_state";
    .port_info 3 /OUTPUT 1 "out1";
    .port_info 4 /OUTPUT 1 "out2";
L_0x1fbbb50 .functor OR 1, L_0x1fbba10, L_0x1fbbab0, C4<0>, C4<0>;
L_0x1fbbdf0 .functor OR 1, L_0x1fbbcb0, L_0x1fbbd50, C4<0>, C4<0>;
L_0x1fbbf50 .functor NOT 1, v0x1fb4480_0, C4<0>, C4<0>, C4<0>;
L_0x1fbc230 .functor OR 1, L_0x1fbc060, L_0x1fbc190, C4<0>, C4<0>;
L_0x1fbc430 .functor OR 1, L_0x1fbc230, L_0x1fbc340, C4<0>, C4<0>;
L_0x1fbc5e0 .functor OR 1, L_0x1fbc430, L_0x1fbc540, C4<0>, C4<0>;
L_0x1fbc730 .functor AND 1, L_0x1fbbf50, L_0x1fbc5e0, C4<1>, C4<1>;
L_0x1fbcdf0 .functor OR 1, L_0x1fbc840, L_0x1fbcd50, C4<0>, C4<0>;
L_0x1fbd010 .functor OR 1, L_0x1fbcdf0, L_0x1fbcf00, C4<0>, C4<0>;
L_0x1fbd120 .functor AND 1, v0x1fb4480_0, L_0x1fbd010, C4<1>, C4<1>;
L_0x1fbd2e0 .functor AND 1, v0x1fb4480_0, L_0x1fbd240, C4<1>, C4<1>;
L_0x1fbcfa0 .functor AND 1, v0x1fb4480_0, L_0x1fbd350, C4<1>, C4<1>;
L_0x1fbd5d0 .functor AND 1, v0x1fb4480_0, L_0x1fbd530, C4<1>, C4<1>;
L_0x1fbd7c0 .functor AND 1, v0x1fb4480_0, L_0x1fbd690, C4<1>, C4<1>;
L_0x1fbd4c0 .functor AND 1, v0x1fb4480_0, L_0x1fbd900, C4<1>, C4<1>;
L_0x1fbdbd0 .functor OR 1, L_0x1fbd9f0, L_0x1fbdb30, C4<0>, C4<0>;
L_0x1fbdd70 .functor AND 1, v0x1fb4480_0, L_0x1fbdbd0, C4<1>, C4<1>;
L_0x1fbde30 .functor NOT 1, v0x1fb4480_0, C4<0>, C4<0>, C4<0>;
L_0x1fbe090 .functor AND 1, L_0x1fbde30, L_0x1fbdf40, C4<1>, C4<1>;
L_0x1fbe470 .functor NOT 1, v0x1fb4480_0, C4<0>, C4<0>, C4<0>;
L_0x1fbe650 .functor AND 1, L_0x1fbe470, L_0x1fbdea0, C4<1>, C4<1>;
v0x1fb4f00_0 .net *"_ivl_1", 0 0, L_0x1fbba10;  1 drivers
v0x1fb4fe0_0 .net *"_ivl_102", 0 0, L_0x1fbdea0;  1 drivers
v0x1fb50c0_0 .net *"_ivl_103", 0 0, L_0x1fbe650;  1 drivers
v0x1fb51b0_0 .net *"_ivl_14", 0 0, L_0x1fbbf50;  1 drivers
v0x1fb5290_0 .net *"_ivl_17", 4 0, L_0x1fbbfc0;  1 drivers
v0x1fb53c0_0 .net *"_ivl_19", 0 0, L_0x1fbc060;  1 drivers
v0x1fb5480_0 .net *"_ivl_21", 0 0, L_0x1fbc190;  1 drivers
v0x1fb5560_0 .net *"_ivl_22", 0 0, L_0x1fbc230;  1 drivers
v0x1fb5640_0 .net *"_ivl_25", 0 0, L_0x1fbc340;  1 drivers
v0x1fb57b0_0 .net *"_ivl_26", 0 0, L_0x1fbc430;  1 drivers
v0x1fb5890_0 .net *"_ivl_29", 0 0, L_0x1fbc540;  1 drivers
v0x1fb5970_0 .net *"_ivl_3", 0 0, L_0x1fbbab0;  1 drivers
v0x1fb5a50_0 .net *"_ivl_30", 0 0, L_0x1fbc5e0;  1 drivers
v0x1fb5b30_0 .net *"_ivl_32", 0 0, L_0x1fbc730;  1 drivers
v0x1fb5c10_0 .net *"_ivl_37", 0 0, L_0x1fbc840;  1 drivers
v0x1fb5cf0_0 .net *"_ivl_39", 0 0, L_0x1fbcd50;  1 drivers
v0x1fb5dd0_0 .net *"_ivl_40", 0 0, L_0x1fbcdf0;  1 drivers
v0x1fb5fc0_0 .net *"_ivl_43", 0 0, L_0x1fbcf00;  1 drivers
v0x1fb60a0_0 .net *"_ivl_44", 0 0, L_0x1fbd010;  1 drivers
v0x1fb6180_0 .net *"_ivl_46", 0 0, L_0x1fbd120;  1 drivers
v0x1fb6260_0 .net *"_ivl_51", 0 0, L_0x1fbd240;  1 drivers
v0x1fb6340_0 .net *"_ivl_52", 0 0, L_0x1fbd2e0;  1 drivers
v0x1fb6420_0 .net *"_ivl_57", 0 0, L_0x1fbd350;  1 drivers
v0x1fb6500_0 .net *"_ivl_58", 0 0, L_0x1fbcfa0;  1 drivers
v0x1fb65e0_0 .net *"_ivl_63", 0 0, L_0x1fbd530;  1 drivers
v0x1fb66c0_0 .net *"_ivl_64", 0 0, L_0x1fbd5d0;  1 drivers
v0x1fb67a0_0 .net *"_ivl_69", 0 0, L_0x1fbd690;  1 drivers
v0x1fb6880_0 .net *"_ivl_7", 0 0, L_0x1fbbcb0;  1 drivers
v0x1fb6960_0 .net *"_ivl_70", 0 0, L_0x1fbd7c0;  1 drivers
v0x1fb6a40_0 .net *"_ivl_75", 0 0, L_0x1fbd900;  1 drivers
v0x1fb6b20_0 .net *"_ivl_76", 0 0, L_0x1fbd4c0;  1 drivers
v0x1fb6c00_0 .net *"_ivl_81", 0 0, L_0x1fbd9f0;  1 drivers
v0x1fb6ce0_0 .net *"_ivl_83", 0 0, L_0x1fbdb30;  1 drivers
v0x1fb6fd0_0 .net *"_ivl_84", 0 0, L_0x1fbdbd0;  1 drivers
v0x1fb70b0_0 .net *"_ivl_86", 0 0, L_0x1fbdd70;  1 drivers
v0x1fb7190_0 .net *"_ivl_9", 0 0, L_0x1fbbd50;  1 drivers
v0x1fb7270_0 .net *"_ivl_90", 0 0, L_0x1fbde30;  1 drivers
v0x1fb7350_0 .net *"_ivl_93", 0 0, L_0x1fbdf40;  1 drivers
v0x1fb7430_0 .net *"_ivl_94", 0 0, L_0x1fbe090;  1 drivers
v0x1fb7510_0 .net *"_ivl_99", 0 0, L_0x1fbe470;  1 drivers
v0x1fb75f0_0 .net "in", 0 0, v0x1fb4480_0;  alias, 1 drivers
v0x1fb7690_0 .net "next_state", 9 0, L_0x1fbda90;  alias, 1 drivers
v0x1fb7750_0 .net "out1", 0 0, L_0x1fbbb50;  alias, 1 drivers
v0x1fb77f0_0 .net "out2", 0 0, L_0x1fbbdf0;  alias, 1 drivers
v0x1fb78b0_0 .net "state", 9 0, v0x1fb47b0_0;  alias, 1 drivers
L_0x1fbba10 .part v0x1fb47b0_0, 8, 1;
L_0x1fbbab0 .part v0x1fb47b0_0, 9, 1;
L_0x1fbbcb0 .part v0x1fb47b0_0, 7, 1;
L_0x1fbbd50 .part v0x1fb47b0_0, 9, 1;
L_0x1fbbfc0 .part v0x1fb47b0_0, 0, 5;
L_0x1fbc060 .reduce/or L_0x1fbbfc0;
L_0x1fbc190 .part v0x1fb47b0_0, 7, 1;
L_0x1fbc340 .part v0x1fb47b0_0, 8, 1;
L_0x1fbc540 .part v0x1fb47b0_0, 9, 1;
L_0x1fbc840 .part v0x1fb47b0_0, 0, 1;
L_0x1fbcd50 .part v0x1fb47b0_0, 8, 1;
L_0x1fbcf00 .part v0x1fb47b0_0, 9, 1;
L_0x1fbd240 .part v0x1fb47b0_0, 1, 1;
L_0x1fbd350 .part v0x1fb47b0_0, 2, 1;
L_0x1fbd530 .part v0x1fb47b0_0, 3, 1;
L_0x1fbd690 .part v0x1fb47b0_0, 4, 1;
L_0x1fbd900 .part v0x1fb47b0_0, 5, 1;
L_0x1fbd9f0 .part v0x1fb47b0_0, 6, 1;
L_0x1fbdb30 .part v0x1fb47b0_0, 7, 1;
L_0x1fbdf40 .part v0x1fb47b0_0, 5, 1;
LS_0x1fbda90_0_0 .concat8 [ 1 1 1 1], L_0x1fbc730, L_0x1fbd120, L_0x1fbd2e0, L_0x1fbcfa0;
LS_0x1fbda90_0_4 .concat8 [ 1 1 1 1], L_0x1fbd5d0, L_0x1fbd7c0, L_0x1fbd4c0, L_0x1fbdd70;
LS_0x1fbda90_0_8 .concat8 [ 1 1 0 0], L_0x1fbe090, L_0x1fbe650;
L_0x1fbda90 .concat8 [ 4 4 2 0], LS_0x1fbda90_0_0, LS_0x1fbda90_0_4, LS_0x1fbda90_0_8;
L_0x1fbdea0 .part v0x1fb47b0_0, 6, 1;
S_0x1fb7a60 .scope task, "wait_for_end_of_timestep" "wait_for_end_of_timestep" 3 187, 3 187 0, S_0x1f569f0;
 .timescale -12 -12;
E_0x1f39a20 .event anyedge, v0x1fb88f0_0;
TD_tb.wait_for_end_of_timestep ;
    %pushi/vec4 5, 0, 32;
T_2.0 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_2.1, 5;
    %jmp/1 T_2.1, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %load/vec4 v0x1fb88f0_0;
    %nor/r;
    %assign/vec4 v0x1fb88f0_0, 0;
    %wait E_0x1f39a20;
    %jmp T_2.0;
T_2.1 ;
    %pop/vec4 1;
    %end;
    .scope S_0x1fb31d0;
T_3 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x1fb42e0_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x1fb43c0_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x1fb46f0_0, 0, 32;
    %pushi/vec4 0, 0, 10;
    %store/vec4 v0x1fb4870_0, 0, 10;
    %end;
    .thread T_3, $init;
    .scope S_0x1fb31d0;
T_4 ;
    %pushi/vec4 2, 0, 32;
T_4.0 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_4.1, 5;
    %jmp/1 T_4.1, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_0x1f526c0;
    %jmp T_4.0;
T_4.1 ;
    %pop/vec4 1;
T_4.2 ;
    %wait E_0x1f51d40;
    %load/vec4 v0x1fb4870_0;
    %load/vec4 v0x1fb4630_0;
    %load/vec4 v0x1fb4520_0;
    %xor;
    %or;
    %assign/vec4 v0x1fb4870_0, 0;
    %jmp T_4.2;
T_4.3 ;
    %end;
    .thread T_4;
    .scope S_0x1fb31d0;
T_5 ;
    %pushi/vec4 0, 0, 10;
    %assign/vec4 v0x1fb47b0_0, 0;
    %wait E_0x1f52470;
    %fork t_1, S_0x1fb3410;
    %jmp t_0;
    .scope S_0x1fb3410;
t_1 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x1fb3650_0, 0, 32;
T_5.0 ; Top of for-loop 
    %load/vec4 v0x1fb3650_0;
    %cmpi/s 10, 0, 32;
    %jmp/0xz T_5.1, 5;
    %wait E_0x1f51d40;
    %pushi/vec4 1, 0, 10;
    %load/vec4 v0x1fb3650_0;
    %ix/vec4 4;
    %shiftl 4;
    %assign/vec4 v0x1fb47b0_0, 0;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0x1fb4480_0, 0;
T_5.2 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x1fb3650_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x1fb3650_0, 0, 32;
    %jmp T_5.0;
T_5.1 ; for-loop exit label
    %end;
    .scope S_0x1fb31d0;
t_0 %join;
    %fork t_3, S_0x1fb3750;
    %jmp t_2;
    .scope S_0x1fb3750;
t_3 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x1fb3950_0, 0, 32;
T_5.3 ; Top of for-loop 
    %load/vec4 v0x1fb3950_0;
    %cmpi/s 10, 0, 32;
    %jmp/0xz T_5.4, 5;
    %wait E_0x1f51d40;
    %pushi/vec4 1, 0, 10;
    %load/vec4 v0x1fb3950_0;
    %ix/vec4 4;
    %shiftl 4;
    %assign/vec4 v0x1fb47b0_0, 0;
    %pushi/vec4 1, 0, 1;
    %assign/vec4 v0x1fb4480_0, 0;
T_5.5 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x1fb3950_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x1fb3950_0, 0, 32;
    %jmp T_5.3;
T_5.4 ; for-loop exit label
    %end;
    .scope S_0x1fb31d0;
t_2 %join;
    %wait E_0x1f52470;
    %fork TD_tb.stim1.wavedrom_stop, S_0x1fb3fd0;
    %join;
    %pushi/vec4 200, 0, 32;
T_5.6 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_5.7, 5;
    %jmp/1 T_5.7, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_0x1f51d40;
    %pushi/vec4 1, 0, 10;
    %vpi_func 3 83 "$random" 32 {0 0 0};
    %pushi/vec4 10, 0, 32;
    %mod;
    %ix/vec4 4;
    %shiftl 4;
    %assign/vec4 v0x1fb47b0_0, 0;
    %vpi_func 3 84 "$random" 32 {0 0 0};
    %pad/s 1;
    %assign/vec4 v0x1fb4480_0, 0;
    %load/vec4 v0x1fb4930_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.8, 8;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x1fb46f0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x1fb46f0_0, 0, 32;
T_5.8 ;
    %jmp T_5.6;
T_5.7 ;
    %pop/vec4 1;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x1fb42e0_0, 0, 32;
    %pushi/vec4 400, 0, 32;
T_5.10 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_5.11, 5;
    %jmp/1 T_5.11, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_0x1f51d40;
    %pushi/vec4 1, 0, 10;
    %vpi_func 3 91 "$random" 32 {0 0 0};
    %pushi/vec4 10, 0, 32;
    %mod;
    %ix/vec4 4;
    %shiftl 4;
    %pushi/vec4 1, 0, 10;
    %vpi_func 3 91 "$random" 32 {0 0 0};
    %pushi/vec4 10, 0, 32;
    %mod;
    %ix/vec4 4;
    %shiftl 4;
    %or;
    %assign/vec4 v0x1fb47b0_0, 0;
    %vpi_func 3 92 "$random" 32 {0 0 0};
    %pad/s 1;
    %assign/vec4 v0x1fb4480_0, 0;
    %load/vec4 v0x1fb4930_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.12, 8;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x1fb42e0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x1fb42e0_0, 0, 32;
T_5.12 ;
    %jmp T_5.10;
T_5.11 ;
    %pop/vec4 1;
    %load/vec4 v0x1fb46f0_0;
    %nor/r;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_5.16, 9;
    %load/vec4 v0x1fb42e0_0;
    %pushi/vec4 0, 0, 32;
    %cmp/ne;
    %flag_get/vec4 4;
    %and;
T_5.16;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.14, 8;
    %vpi_call/w 3 98 "$display", "Hint: Your circuit passed when given only one-hot inputs, but not with two-hot inputs." {0 0 0};
T_5.14 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x1fb43c0_0, 0, 32;
    %pushi/vec4 800, 0, 32;
T_5.17 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_5.18, 5;
    %jmp/1 T_5.18, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_0x1f51d40;
    %vpi_func 3 103 "$random" 32 {0 0 0};
    %pad/s 10;
    %assign/vec4 v0x1fb47b0_0, 0;
    %vpi_func 3 104 "$random" 32 {0 0 0};
    %pad/s 1;
    %assign/vec4 v0x1fb4480_0, 0;
    %load/vec4 v0x1fb4930_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.19, 8;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x1fb43c0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x1fb43c0_0, 0, 32;
T_5.19 ;
    %jmp T_5.17;
T_5.18 ;
    %pop/vec4 1;
    %load/vec4 v0x1fb46f0_0;
    %nor/r;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_5.23, 9;
    %load/vec4 v0x1fb43c0_0;
    %pushi/vec4 0, 0, 32;
    %cmp/ne;
    %flag_get/vec4 4;
    %and;
T_5.23;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.21, 8;
    %vpi_call/w 3 109 "$display", "Hint: Your circuit passed when given only one-hot inputs, but not with random inputs." {0 0 0};
T_5.21 ;
    %load/vec4 v0x1fb46f0_0;
    %nor/r;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_5.26, 9;
    %load/vec4 v0x1fb42e0_0;
    %cmpi/ne 0, 0, 32;
    %flag_get/vec4 4;
    %jmp/1 T_5.27, 4;
    %load/vec4 v0x1fb43c0_0;
    %pushi/vec4 0, 0, 32;
    %cmp/ne;
    %flag_get/vec4 4;
    %or;
T_5.27;
    %and;
T_5.26;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.24, 8;
    %vpi_call/w 3 112 "$display", "Hint: Are you doing something more complicated than deriving state transition equations by inspection?\012" {0 0 0};
T_5.24 ;
    %fork t_5, S_0x1fb3a30;
    %jmp t_4;
    .scope S_0x1fb3a30;
t_5 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x1fb3c10_0, 0, 32;
T_5.28 ; Top of for-loop 
    %load/vec4 v0x1fb3c10_0;
    %cmpi/u 10, 0, 32;
    %jmp/0xz T_5.29, 5;
    %load/vec4 v0x1fb4870_0;
    %load/vec4 v0x1fb3c10_0;
    %part/s 1;
    %cmpi/e 0, 0, 1;
    %flag_mov 8, 6;
    %jmp/0 T_5.31, 8;
    %pushi/vec4 25455, 0, 32; draw_string_vec4
    %pushi/vec4 1920099683, 0, 32; draw_string_vec4
    %concat/vec4; draw_string_vec4
    %pushi/vec4 116, 0, 8; draw_string_vec4
    %concat/vec4; draw_string_vec4
    %jmp/1 T_5.32, 8;
T_5.31 ; End of true expr.
    %pushi/vec4 1768842095, 0, 32; draw_string_vec4
    %pushi/vec4 1920099683, 0, 32; draw_string_vec4
    %concat/vec4; draw_string_vec4
    %pushi/vec4 116, 0, 8; draw_string_vec4
    %concat/vec4; draw_string_vec4
    %jmp/0 T_5.32, 8;
 ; End of false expr.
    %blend;
T_5.32;
    %vpi_call/w 3 115 "$display", "Hint: next_state[%0d] is %s.", v0x1fb3c10_0, S<0,vec4,u72> {1 0 0};
T_5.30 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x1fb3c10_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x1fb3c10_0, 0, 32;
    %jmp T_5.28;
T_5.29 ; for-loop exit label
    %end;
    .scope S_0x1fb31d0;
t_4 %join;
    %delay 1, 0;
    %vpi_call/w 3 117 "$finish" {0 0 0};
    %end;
    .thread T_5;
    .scope S_0x1f569f0;
T_6 ;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x1fb8210_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x1fb88f0_0, 0, 1;
    %end;
    .thread T_6, $init;
    .scope S_0x1f569f0;
T_7 ;
T_7.0 ;
    %delay 5, 0;
    %load/vec4 v0x1fb8210_0;
    %inv;
    %store/vec4 v0x1fb8210_0, 0, 1;
    %jmp T_7.0;
T_7.1 ;
    %end;
    .thread T_7;
    .scope S_0x1f569f0;
T_8 ;
    %vpi_call/w 3 158 "$dumpfile", "wave.vcd" {0 0 0};
    %vpi_call/w 3 159 "$dumpvars", 32'sb00000000000000000000000000000001, v0x1fb4200_0, v0x1fb8a60_0, v0x1fb82b0_0, v0x1fb87b0_0, v0x1fb83f0_0, v0x1fb8350_0, v0x1fb85a0_0, v0x1fb8500_0, v0x1fb86e0_0, v0x1fb8640_0 {0 0 0};
    %end;
    .thread T_8;
    .scope S_0x1f569f0;
T_9 ;
    %load/vec4 v0x1fb8850_0;
    %parti/u 32, 192, 32;
    %cmpi/ne 0, 0, 32;
    %jmp/0xz  T_9.0, 4;
    %load/vec4 v0x1fb8850_0;
    %parti/u 32, 192, 32;
    %load/vec4 v0x1fb8850_0;
    %parti/u 32, 160, 32;
    %vpi_call/w 3 196 "$display", "Hint: Output '%s' has %0d mismatches. First mismatch occurred at time %0d.", "next_state", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %jmp T_9.1;
T_9.0 ;
    %vpi_call/w 3 197 "$display", "Hint: Output '%s' has no mismatches.", "next_state" {0 0 0};
T_9.1 ;
    %load/vec4 v0x1fb8850_0;
    %parti/u 32, 128, 32;
    %cmpi/ne 0, 0, 32;
    %jmp/0xz  T_9.2, 4;
    %load/vec4 v0x1fb8850_0;
    %parti/u 32, 128, 32;
    %load/vec4 v0x1fb8850_0;
    %parti/u 32, 96, 32;
    %vpi_call/w 3 198 "$display", "Hint: Output '%s' has %0d mismatches. First mismatch occurred at time %0d.", "out1", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %jmp T_9.3;
T_9.2 ;
    %vpi_call/w 3 199 "$display", "Hint: Output '%s' has no mismatches.", "out1" {0 0 0};
T_9.3 ;
    %load/vec4 v0x1fb8850_0;
    %parti/u 32, 64, 32;
    %cmpi/ne 0, 0, 32;
    %jmp/0xz  T_9.4, 4;
    %load/vec4 v0x1fb8850_0;
    %parti/u 32, 64, 32;
    %load/vec4 v0x1fb8850_0;
    %parti/u 32, 32, 32;
    %vpi_call/w 3 200 "$display", "Hint: Output '%s' has %0d mismatches. First mismatch occurred at time %0d.", "out2", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %jmp T_9.5;
T_9.4 ;
    %vpi_call/w 3 201 "$display", "Hint: Output '%s' has no mismatches.", "out2" {0 0 0};
T_9.5 ;
    %load/vec4 v0x1fb8850_0;
    %parti/u 32, 256, 32;
    %load/vec4 v0x1fb8850_0;
    %parti/u 32, 0, 32;
    %vpi_call/w 3 203 "$display", "Hint: Total mismatched samples is %1d out of %1d samples\012", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %vpi_call/w 3 204 "$display", "Simulation finished at %0d ps", $time {0 0 0};
    %load/vec4 v0x1fb8850_0;
    %parti/u 32, 256, 32;
    %load/vec4 v0x1fb8850_0;
    %parti/u 32, 0, 32;
    %vpi_call/w 3 205 "$display", "Mismatches: %1d in %1d samples", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %end;
    .thread T_9, $final;
    .scope S_0x1f569f0;
T_10 ;
    %wait E_0x1f51d40;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x1fb8850_0;
    %pushi/vec4 0, 0, 32;
    %part/u 32;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x1fb8850_0, 4, 32;
    %load/vec4 v0x1fb8990_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_10.0, 8;
    %load/vec4 v0x1fb8850_0;
    %parti/u 32, 256, 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_10.2, 4;
    %vpi_func 3 216 "$time" 64 {0 0 0};
    %cast2;
    %pad/u 32;
    %ix/load 4, 224, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x1fb8850_0, 4, 32;
T_10.2 ;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x1fb8850_0;
    %pushi/vec4 256, 0, 32;
    %part/u 32;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %ix/load 4, 256, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x1fb8850_0, 4, 32;
T_10.0 ;
    %load/vec4 v0x1fb83f0_0;
    %load/vec4 v0x1fb83f0_0;
    %load/vec4 v0x1fb8350_0;
    %xor;
    %load/vec4 v0x1fb83f0_0;
    %xor;
    %cmp/ne;
    %jmp/0xz  T_10.4, 6;
    %load/vec4 v0x1fb8850_0;
    %parti/u 32, 192, 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_10.6, 4;
    %vpi_func 3 220 "$time" 64 {0 0 0};
    %cast2;
    %pad/u 32;
    %ix/load 4, 160, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x1fb8850_0, 4, 32;
T_10.6 ;
    %load/vec4 v0x1fb8850_0;
    %parti/u 32, 192, 32;
    %addi 1, 0, 32;
    %ix/load 4, 192, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x1fb8850_0, 4, 32;
T_10.4 ;
    %load/vec4 v0x1fb85a0_0;
    %load/vec4 v0x1fb85a0_0;
    %load/vec4 v0x1fb8500_0;
    %xor;
    %load/vec4 v0x1fb85a0_0;
    %xor;
    %cmp/ne;
    %jmp/0xz  T_10.8, 6;
    %load/vec4 v0x1fb8850_0;
    %parti/u 32, 128, 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_10.10, 4;
    %vpi_func 3 223 "$time" 64 {0 0 0};
    %cast2;
    %pad/u 32;
    %ix/load 4, 96, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x1fb8850_0, 4, 32;
T_10.10 ;
    %load/vec4 v0x1fb8850_0;
    %parti/u 32, 128, 32;
    %addi 1, 0, 32;
    %ix/load 4, 128, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x1fb8850_0, 4, 32;
T_10.8 ;
    %load/vec4 v0x1fb86e0_0;
    %load/vec4 v0x1fb86e0_0;
    %load/vec4 v0x1fb8640_0;
    %xor;
    %load/vec4 v0x1fb86e0_0;
    %xor;
    %cmp/ne;
    %jmp/0xz  T_10.12, 6;
    %load/vec4 v0x1fb8850_0;
    %parti/u 32, 64, 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_10.14, 4;
    %vpi_func 3 226 "$time" 64 {0 0 0};
    %cast2;
    %pad/u 32;
    %ix/load 4, 32, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x1fb8850_0, 4, 32;
T_10.14 ;
    %load/vec4 v0x1fb8850_0;
    %parti/u 32, 64, 32;
    %addi 1, 0, 32;
    %ix/load 4, 64, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x1fb8850_0, 4, 32;
T_10.12 ;
    %jmp T_10;
    .thread T_10;
# The file index is used to find the file name in the following table.
:file_names 5;
    "N/A";
    "<interactive>";
    "-";
    "/home/jmb9986/AutoChip/autochip_scripts/../verilogeval_prompts_tbs/ve_testbenches_machine/fsm_onehot/fsm_onehot_tb.sv";
    "/home/jmb9986/AutoChip/autochip_scripts/outputs/claude-3-haiku-20240307_full_feedback/can5_depth10/machine/fsm_onehot/iter0/response4/top_module.sv";
