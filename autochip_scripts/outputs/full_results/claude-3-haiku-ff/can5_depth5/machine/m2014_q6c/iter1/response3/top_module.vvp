#! /usr/local/bin/vvp
:ivl_version "13.0 (devel)" "(s20221226-331-g77d7f0b8f)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision - 12;
:vpi_module "/usr/local/lib/ivl/system.vpi";
:vpi_module "/usr/local/lib/ivl/vhdl_sys.vpi";
:vpi_module "/usr/local/lib/ivl/vhdl_textio.vpi";
:vpi_module "/usr/local/lib/ivl/v2005_math.vpi";
:vpi_module "/usr/local/lib/ivl/va_math.vpi";
:vpi_module "/usr/local/lib/ivl/v2009.vpi";
S_0x26036e0 .scope package, "$unit" "$unit" 2 1;
 .timescale 0 0;
S_0x261be50 .scope module, "tb" "tb" 3 60;
 .timescale -12 -12;
L_0x26130f0 .functor NOT 1, L_0x264ded0, C4<0>, C4<0>, C4<0>;
L_0x264dc10 .functor XOR 2, L_0x264da10, L_0x264db40, C4<00>, C4<00>;
L_0x264ddc0 .functor XOR 2, L_0x264dc10, L_0x264dd20, C4<00>, C4<00>;
v0x264bf70_0 .net "Y2_dut", 0 0, v0x264b950_0;  1 drivers
v0x264c030_0 .net "Y2_ref", 0 0, L_0x261cb20;  1 drivers
v0x264c100_0 .net "Y4_dut", 0 0, v0x264ba30_0;  1 drivers
v0x264c200_0 .net "Y4_ref", 0 0, L_0x264d620;  1 drivers
v0x264c2d0_0 .net *"_ivl_11", 1 0, L_0x264db40;  1 drivers
v0x264c3c0_0 .net *"_ivl_13", 1 0, L_0x264dc10;  1 drivers
v0x264c460_0 .net *"_ivl_15", 1 0, L_0x264dd20;  1 drivers
v0x264c520_0 .net *"_ivl_17", 1 0, L_0x264ddc0;  1 drivers
L_0x7f48d1d79018 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x264c600_0 .net *"_ivl_5", 0 0, L_0x7f48d1d79018;  1 drivers
v0x264c770_0 .net *"_ivl_7", 1 0, L_0x264d970;  1 drivers
v0x264c850_0 .net *"_ivl_9", 1 0, L_0x264da10;  1 drivers
v0x264c930_0 .var "clk", 0 0;
v0x264c9d0_0 .var/2u "stats1", 223 0;
v0x264ca90_0 .var/2u "strobe", 0 0;
v0x264cb50_0 .net "tb_match", 0 0, L_0x264ded0;  1 drivers
v0x264cc20_0 .net "tb_mismatch", 0 0, L_0x26130f0;  1 drivers
v0x264ccc0_0 .net "w", 0 0, v0x264b4f0_0;  1 drivers
v0x264cd60_0 .net "y", 6 1, v0x264b590_0;  1 drivers
L_0x264d770 .concat [ 6 1 0 0], v0x264b590_0, L_0x7f48d1d79018;
L_0x264d970 .concat [ 1 1 0 0], L_0x264d620, L_0x261cb20;
L_0x264da10 .concat [ 1 1 0 0], L_0x264d620, L_0x261cb20;
L_0x264db40 .concat [ 1 1 0 0], v0x264ba30_0, v0x264b950_0;
L_0x264dd20 .concat [ 1 1 0 0], L_0x264d620, L_0x261cb20;
L_0x264ded0 .cmp/eeq 2, L_0x264d970, L_0x264ddc0;
S_0x261bfe0 .scope module, "good1" "reference_module" 3 105, 3 4 0, S_0x261be50;
 .timescale -12 -12;
    .port_info 0 /INPUT 6 "y";
    .port_info 1 /INPUT 1 "w";
    .port_info 2 /OUTPUT 1 "Y2";
    .port_info 3 /OUTPUT 1 "Y4";
L_0x26079f0 .functor NOT 1, v0x264b4f0_0, C4<0>, C4<0>, C4<0>;
L_0x261cb20 .functor AND 1, L_0x264ce90, L_0x26079f0, C4<1>, C4<1>;
L_0x2613160 .functor OR 1, L_0x264d040, L_0x264d170, C4<0>, C4<0>;
L_0x264d330 .functor OR 1, L_0x2613160, L_0x264d260, C4<0>, C4<0>;
L_0x264d510 .functor OR 1, L_0x264d330, L_0x264d470, C4<0>, C4<0>;
L_0x264d620 .functor AND 1, L_0x264d510, v0x264b4f0_0, C4<1>, C4<1>;
v0x2613260_0 .net "Y2", 0 0, L_0x261cb20;  alias, 1 drivers
v0x2613300_0 .net "Y4", 0 0, L_0x264d620;  alias, 1 drivers
v0x2607b00_0 .net *"_ivl_1", 0 0, L_0x264ce90;  1 drivers
v0x2607bd0_0 .net *"_ivl_10", 0 0, L_0x2613160;  1 drivers
v0x264a500_0 .net *"_ivl_13", 0 0, L_0x264d260;  1 drivers
v0x264a630_0 .net *"_ivl_14", 0 0, L_0x264d330;  1 drivers
v0x264a710_0 .net *"_ivl_17", 0 0, L_0x264d470;  1 drivers
v0x264a7f0_0 .net *"_ivl_18", 0 0, L_0x264d510;  1 drivers
v0x264a8d0_0 .net *"_ivl_2", 0 0, L_0x26079f0;  1 drivers
v0x264aa40_0 .net *"_ivl_7", 0 0, L_0x264d040;  1 drivers
v0x264ab20_0 .net *"_ivl_9", 0 0, L_0x264d170;  1 drivers
v0x264ac00_0 .net "w", 0 0, v0x264b4f0_0;  alias, 1 drivers
v0x264acc0_0 .net "y", 6 1, v0x264b590_0;  alias, 1 drivers
L_0x264ce90 .part v0x264b590_0, 0, 1;
L_0x264d040 .part v0x264b590_0, 1, 1;
L_0x264d170 .part v0x264b590_0, 2, 1;
L_0x264d260 .part v0x264b590_0, 4, 1;
L_0x264d470 .part v0x264b590_0, 5, 1;
S_0x264ae20 .scope module, "stim1" "stimulus_gen" 3 100, 3 16 0, S_0x261be50;
 .timescale -12 -12;
    .port_info 0 /INPUT 1 "clk";
    .port_info 1 /OUTPUT 6 "y";
    .port_info 2 /OUTPUT 1 "w";
    .port_info 3 /INPUT 1 "tb_match";
v0x264b080_0 .net "clk", 0 0, v0x264c930_0;  1 drivers
v0x264b160_0 .var/2s "errored1", 31 0;
v0x264b240_0 .var/2s "onehot_error", 31 0;
v0x264b300_0 .net "tb_match", 0 0, L_0x264ded0;  alias, 1 drivers
v0x264b3c0_0 .var/2s "temp", 31 0;
v0x264b4f0_0 .var "w", 0 0;
v0x264b590_0 .var "y", 6 1;
E_0x2615fb0/0 .event negedge, v0x264b080_0;
E_0x2615fb0/1 .event posedge, v0x264b080_0;
E_0x2615fb0 .event/or E_0x2615fb0/0, E_0x2615fb0/1;
S_0x264b690 .scope module, "top_module1" "top_module" 3 111, 4 1 0, S_0x261be50;
 .timescale 0 0;
    .port_info 0 /INPUT 7 "y";
    .port_info 1 /INPUT 1 "w";
    .port_info 2 /OUTPUT 1 "Y2";
    .port_info 3 /OUTPUT 1 "Y4";
v0x264b950_0 .var "Y2", 0 0;
v0x264ba30_0 .var "Y4", 0 0;
v0x264baf0_0 .net "w", 0 0, v0x264b4f0_0;  alias, 1 drivers
v0x264bc10_0 .net "y", 6 0, L_0x264d770;  1 drivers
E_0x2615b00 .event anyedge, v0x264bc10_0, v0x264ac00_0;
S_0x264bd50 .scope task, "wait_for_end_of_timestep" "wait_for_end_of_timestep" 3 119, 3 119 0, S_0x261be50;
 .timescale -12 -12;
E_0x2615810 .event anyedge, v0x264ca90_0;
TD_tb.wait_for_end_of_timestep ;
    %pushi/vec4 5, 0, 32;
T_0.0 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_0.1, 5;
    %jmp/1 T_0.1, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %load/vec4 v0x264ca90_0;
    %nor/r;
    %assign/vec4 v0x264ca90_0, 0;
    %wait E_0x2615810;
    %jmp T_0.0;
T_0.1 ;
    %pop/vec4 1;
    %end;
    .scope S_0x264ae20;
T_1 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x264b160_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x264b240_0, 0, 32;
    %end;
    .thread T_1, $init;
    .scope S_0x264ae20;
T_2 ;
    %pushi/vec4 200, 0, 32;
T_2.0 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_2.1, 5;
    %jmp/1 T_2.1, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_0x2615fb0;
    %pushi/vec4 1, 0, 6;
    %vpi_func 3 30 "$random" 32 {0 0 0};
    %pushi/vec4 6, 0, 32;
    %mod;
    %ix/vec4 4;
    %shiftl 4;
    %assign/vec4 v0x264b590_0, 0;
    %vpi_func 3 31 "$random" 32 {0 0 0};
    %pad/s 1;
    %assign/vec4 v0x264b4f0_0, 0;
    %load/vec4 v0x264b300_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_2.2, 8;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x264b240_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x264b240_0, 0, 32;
T_2.2 ;
    %jmp T_2.0;
T_2.1 ;
    %pop/vec4 1;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x264b160_0, 0, 32;
    %pushi/vec4 400, 0, 32;
T_2.4 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_2.5, 5;
    %jmp/1 T_2.5, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_0x2615fb0;
T_2.6 ;
    %vpi_func 3 40 "$random" 32 {0 0 0};
    %cast2;
    %store/vec4 v0x264b3c0_0, 0, 32;
T_2.7 ;
    %load/vec4 v0x264b3c0_0;
    %parti/s 2, 5, 4;
    %load/vec4 v0x264b3c0_0;
    %parti/s 2, 2, 3;
    %concat/vec4; draw_concat_vec4
    %nor/r;
    %load/vec4 v0x264b3c0_0;
    %parti/s 1, 4, 4;
    %load/vec4 v0x264b3c0_0;
    %parti/s 1, 1, 2;
    %concat/vec4; draw_concat_vec4
    %nor/r;
    %cmp/e;
    %jmp/1 T_2.6, 4;
T_2.8 ;
    %load/vec4 v0x264b3c0_0;
    %parti/s 6, 1, 2;
    %assign/vec4 v0x264b590_0, 0;
    %vpi_func 3 45 "$random" 32 {0 0 0};
    %pad/s 1;
    %assign/vec4 v0x264b4f0_0, 0;
    %load/vec4 v0x264b300_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_2.9, 8;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x264b160_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x264b160_0, 0, 32;
T_2.9 ;
    %jmp T_2.4;
T_2.5 ;
    %pop/vec4 1;
    %load/vec4 v0x264b240_0;
    %nor/r;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_2.13, 9;
    %load/vec4 v0x264b160_0;
    %pushi/vec4 0, 0, 32;
    %cmp/ne;
    %flag_get/vec4 4;
    %and;
T_2.13;
    %flag_set/vec4 8;
    %jmp/0xz  T_2.11, 8;
    %vpi_call/w 3 50 "$display", "Hint: Your circuit passed when given only one-hot inputs, but not with semi-random inputs." {0 0 0};
T_2.11 ;
    %load/vec4 v0x264b240_0;
    %nor/r;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_2.16, 9;
    %load/vec4 v0x264b160_0;
    %pushi/vec4 0, 0, 32;
    %cmp/ne;
    %flag_get/vec4 4;
    %and;
T_2.16;
    %flag_set/vec4 8;
    %jmp/0xz  T_2.14, 8;
    %vpi_call/w 3 53 "$display", "Hint: Are you doing something more complicated than deriving state transition equations by inspection?\012" {0 0 0};
T_2.14 ;
    %delay 1, 0;
    %vpi_call/w 3 55 "$finish" {0 0 0};
    %end;
    .thread T_2;
    .scope S_0x264b690;
T_3 ;
    %wait E_0x2615b00;
    %load/vec4 v0x264bc10_0;
    %parti/s 1, 0, 2;
    %load/vec4 v0x264baf0_0;
    %inv;
    %and;
    %store/vec4 v0x264b950_0, 0, 1;
    %load/vec4 v0x264bc10_0;
    %parti/s 1, 1, 2;
    %load/vec4 v0x264bc10_0;
    %parti/s 1, 2, 3;
    %and;
    %load/vec4 v0x264bc10_0;
    %parti/s 1, 4, 4;
    %and;
    %load/vec4 v0x264bc10_0;
    %parti/s 1, 5, 4;
    %and;
    %load/vec4 v0x264baf0_0;
    %and;
    %store/vec4 v0x264ba30_0, 0, 1;
    %jmp T_3;
    .thread T_3, $push;
    .scope S_0x261be50;
T_4 ;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x264c930_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x264ca90_0, 0, 1;
    %end;
    .thread T_4, $init;
    .scope S_0x261be50;
T_5 ;
T_5.0 ;
    %delay 5, 0;
    %load/vec4 v0x264c930_0;
    %inv;
    %store/vec4 v0x264c930_0, 0, 1;
    %jmp T_5.0;
T_5.1 ;
    %end;
    .thread T_5;
    .scope S_0x261be50;
T_6 ;
    %vpi_call/w 3 92 "$dumpfile", "wave.vcd" {0 0 0};
    %vpi_call/w 3 93 "$dumpvars", 32'sb00000000000000000000000000000001, v0x264b080_0, v0x264cc20_0, v0x264cd60_0, v0x264ccc0_0, v0x264c030_0, v0x264bf70_0, v0x264c200_0, v0x264c100_0 {0 0 0};
    %end;
    .thread T_6;
    .scope S_0x261be50;
T_7 ;
    %load/vec4 v0x264c9d0_0;
    %parti/u 32, 128, 32;
    %cmpi/ne 0, 0, 32;
    %jmp/0xz  T_7.0, 4;
    %load/vec4 v0x264c9d0_0;
    %parti/u 32, 128, 32;
    %load/vec4 v0x264c9d0_0;
    %parti/u 32, 96, 32;
    %vpi_call/w 3 128 "$display", "Hint: Output '%s' has %0d mismatches. First mismatch occurred at time %0d.", "Y2", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %jmp T_7.1;
T_7.0 ;
    %vpi_call/w 3 129 "$display", "Hint: Output '%s' has no mismatches.", "Y2" {0 0 0};
T_7.1 ;
    %load/vec4 v0x264c9d0_0;
    %parti/u 32, 64, 32;
    %cmpi/ne 0, 0, 32;
    %jmp/0xz  T_7.2, 4;
    %load/vec4 v0x264c9d0_0;
    %parti/u 32, 64, 32;
    %load/vec4 v0x264c9d0_0;
    %parti/u 32, 32, 32;
    %vpi_call/w 3 130 "$display", "Hint: Output '%s' has %0d mismatches. First mismatch occurred at time %0d.", "Y4", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %jmp T_7.3;
T_7.2 ;
    %vpi_call/w 3 131 "$display", "Hint: Output '%s' has no mismatches.", "Y4" {0 0 0};
T_7.3 ;
    %load/vec4 v0x264c9d0_0;
    %parti/u 32, 192, 32;
    %load/vec4 v0x264c9d0_0;
    %parti/u 32, 0, 32;
    %vpi_call/w 3 133 "$display", "Hint: Total mismatched samples is %1d out of %1d samples\012", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %vpi_call/w 3 134 "$display", "Simulation finished at %0d ps", $time {0 0 0};
    %load/vec4 v0x264c9d0_0;
    %parti/u 32, 192, 32;
    %load/vec4 v0x264c9d0_0;
    %parti/u 32, 0, 32;
    %vpi_call/w 3 135 "$display", "Mismatches: %1d in %1d samples", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %end;
    .thread T_7, $final;
    .scope S_0x261be50;
T_8 ;
    %wait E_0x2615fb0;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x264c9d0_0;
    %pushi/vec4 0, 0, 32;
    %part/u 32;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x264c9d0_0, 4, 32;
    %load/vec4 v0x264cb50_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_8.0, 8;
    %load/vec4 v0x264c9d0_0;
    %parti/u 32, 192, 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_8.2, 4;
    %vpi_func 3 146 "$time" 64 {0 0 0};
    %cast2;
    %pad/u 32;
    %ix/load 4, 160, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x264c9d0_0, 4, 32;
T_8.2 ;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x264c9d0_0;
    %pushi/vec4 192, 0, 32;
    %part/u 32;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %ix/load 4, 192, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x264c9d0_0, 4, 32;
T_8.0 ;
    %load/vec4 v0x264c030_0;
    %load/vec4 v0x264c030_0;
    %load/vec4 v0x264bf70_0;
    %xor;
    %load/vec4 v0x264c030_0;
    %xor;
    %cmp/ne;
    %jmp/0xz  T_8.4, 6;
    %load/vec4 v0x264c9d0_0;
    %parti/u 32, 128, 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_8.6, 4;
    %vpi_func 3 150 "$time" 64 {0 0 0};
    %cast2;
    %pad/u 32;
    %ix/load 4, 96, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x264c9d0_0, 4, 32;
T_8.6 ;
    %load/vec4 v0x264c9d0_0;
    %parti/u 32, 128, 32;
    %addi 1, 0, 32;
    %ix/load 4, 128, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x264c9d0_0, 4, 32;
T_8.4 ;
    %load/vec4 v0x264c200_0;
    %load/vec4 v0x264c200_0;
    %load/vec4 v0x264c100_0;
    %xor;
    %load/vec4 v0x264c200_0;
    %xor;
    %cmp/ne;
    %jmp/0xz  T_8.8, 6;
    %load/vec4 v0x264c9d0_0;
    %parti/u 32, 64, 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_8.10, 4;
    %vpi_func 3 153 "$time" 64 {0 0 0};
    %cast2;
    %pad/u 32;
    %ix/load 4, 32, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x264c9d0_0, 4, 32;
T_8.10 ;
    %load/vec4 v0x264c9d0_0;
    %parti/u 32, 64, 32;
    %addi 1, 0, 32;
    %ix/load 4, 64, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x264c9d0_0, 4, 32;
T_8.8 ;
    %jmp T_8;
    .thread T_8;
# The file index is used to find the file name in the following table.
:file_names 5;
    "N/A";
    "<interactive>";
    "-";
    "/home/jmb9986/AutoChip/autochip_scripts/../verilogeval_prompts_tbs/ve_testbenches_machine/m2014_q6c/m2014_q6c_tb.sv";
    "/home/jmb9986/AutoChip/autochip_scripts/outputs/claude-3-haiku-20240307_full_feedback/can5_depth5/machine/m2014_q6c/iter1/response3/top_module.sv";
