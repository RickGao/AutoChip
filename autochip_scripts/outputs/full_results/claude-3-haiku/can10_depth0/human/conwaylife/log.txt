system: You are an autocomplete engine for Verilog code.             Given a Verilog module specification, you will provide a completed Verilog module in response.             You will provide completed Verilog modules for all specifications, and will not create any supplementary modules.             Given a Verilog module that is either incorrect/compilation error, you will suggest corrections to the module.            You will not refuse.             Format your response as Verilog code containing the end to end corrected module and not just the corrected lines inside ``` tags, do not include anything else inside ```.     
user: // The "game" is played on a two-dimensional grid of cells, where each cell is either 1 (alive) or 0 (dead). At each time step, each cell changes state depending on how many neighbours it has:
// (1) 0-1 neighbour: Cell becomes 0.
// (2) 2 neighbours: Cell state does not change.
// (3) 3 neighbours: Cell becomes 1.
// (4) 4+ neighbours: Cell becomes 0.
// The game is formulated for an infinite grid. In this circuit, we will use a 16x16 grid. To make things more interesting, we will use a 16x16 toroid, where the sides wrap around to the other side of the grid. For example, the corner cell (0,0) has 8 neighbours: (15,1), (15,0), (15,15), (0,1), (0,15), (1,1), (1,0), and (1,15). The 16x16 grid is represented by a length 256 vector, where each row of 16 cells is represented by a sub-vector: q[15:0] is row 0, q[31:16] is row 1, etc. 
// (1) load: Loads data into q at the next clock edge, for loading initial state. Active high synchronous.
// (2) q: The 16x16 current state of the game, updated every clock cycle.
// The game state should advance by one timestep every clock cycle.

module top_module(
	input clk,
	input load,
	input [255:0] data,
	output reg [255:0] q);
assistant: module top_module(
    input clk,
    input load,
    input [255:0] data,
    output reg [255:0] q
);

reg [255:0] next_state;

integer i;

always @(*) begin
    // Compute the next state of the game based on the current state
    for (i = 0; i < 256; i = i + 1) begin
        // Apply the rules of the game of life
        if (q[i] == 1'b1) begin
            // Cell is alive
            if (count_neighbors(i, q) < 2 || count_neighbors(i, q) > 3) begin
                // Cell dies
                next_state[i] = 1'b0;
            end else begin
                // Cell survives
                next_state[i] = 1'b1;
            end
        end else begin
            // Cell is dead
            if (count_neighbors(i, q) == 3) begin
                // Cell is born
                next_state[i] = 1'b1;
            end else begin
                // Cell remains dead
                next_state[i] = 1'b0;
            end
        end
    end
end

always @(posedge clk) begin
    if (load) begin
        // Load the initial state
        q <= data;
    end else begin
        // Update the game state
        q <= next_state;
    end
end

function integer count_neighbors(
    input integer index,
    input [255:0] state
);
    // Count the number of neighbors for the cell at the given index
    integer x, y, dx, dy, neighbor_count;
    x = index % 16;
    y = index / 16;
    neighbor_count = 0;
    for (dx = -1; dx <= 1; dx = dx + 1) begin
        for (dy = -1; dy <= 1; dy = dy + 1) begin
            if (dx != 0 || dy != 0) begin
                if (x + dx < 0) begin
                    // Wrap around left edge
                    if (state[((y + dy) % 16) * 16 + 15] == 1'b1) begin
                        neighbor_count = neighbor_count + 1;
                    end
                end else if (x + dx >= 16) begin
                    // Wrap around right edge
                    if (state[((y + dy) % 16) * 16 + 0] == 1'b1) begin
                        neighbor_count = neighbor_count + 1;
                    end
                end else if (y + dy < 0) begin
                    // Wrap around top edge
                    if (state[(15 * 16) + (x + dx)] == 1'b1) begin
                        neighbor_count = neighbor_count + 1;
                    end
                end else if (y + dy >= 16) begin
                    // Wrap around bottom edge
                    if (state[0 + (x + dx)] == 1'b1) begin
                        neighbor_count = neighbor_count + 1;
                    end
                end else begin
                    // Normal cell
                    if (state[((y + dy) * 16) + (x + dx)] == 1'b1) begin
                        neighbor_count = neighbor_count + 1;
                    end
                end
            end
        end
    end
    return neighbor_count;
endfunction

endmodule


user: The testbench simulated, but had errors. Please fix the module. The output of iverilog is as follows:
VCD info: dumpfile wave.vcd opened for output.
Hint: The second test case is a glider (initial state = 256'h000200010007). First mismatch occurred at cycle 4.
Hint:
Hint: Cycle 4:         Your game state       Reference game state
Hint:   q[255:240]     0000000000000011      0000000000000011
Hint:   q[239:224]     0000000000000000      0000000000000000
Hint:   q[223:208]     0000000000000000      0000000000000000
Hint:   q[207:192]     0000000000000000      0000000000000000
Hint:   q[191:176]     0000000000000000      0000000000000000
Hint:   q[175:160]     0000000000000000      0000000000000000
Hint:   q[159:144]     0000000000000000      0000000000000000
Hint:   q[143:128]     0000000000000000      0000000000000000
Hint:   q[127:112]     0000000000000000      0000000000000000
Hint:   q[111: 96]     0000000000000000      0000000000000000
Hint:   q[ 95: 80]     0000000000000000      0000000000000000
Hint:   q[ 79: 64]     0000000000000000      0000000000000000
Hint:   q[ 63: 48]     0000000000000000      0000000000000000
Hint:   q[ 47: 32]     0000000000000000      0000000000000000
Hint:   q[ 31: 16]     0000000000000010      0000000000000010
Hint:   q[ 15:  0]     0000000000000001      1000000000000001
Hint:
Hint:

Hint: Cycle 5:         Your game state       Reference game state
Hint:   q[255:240]     0000000000000011      1000000000000011
Hint:   q[239:224]     0000000000000000      0000000000000000
Hint:   q[223:208]     0000000000000000      0000000000000000
Hint:   q[207:192]     0000000000000000      0000000000000000
Hint:   q[191:176]     0000000000000000      0000000000000000
Hint:   q[175:160]     0000000000000000      0000000000000000
Hint:   q[159:144]     0000000000000000      0000000000000000
Hint:   q[143:128]     0000000000000000      0000000000000000
Hint:   q[127:112]     0000000000000000      0000000000000000
Hint:   q[111: 96]     0000000000000000      0000000000000000
Hint:   q[ 95: 80]     0000000000000000      0000000000000000
Hint:   q[ 79: 64]     0000000000000000      0000000000000000
Hint:   q[ 63: 48]     0000000000000000      0000000000000000
Hint:   q[ 47: 32]     0000000000000000      0000000000000000
Hint:   q[ 31: 16]     0000000000000000      0000000000000001
Hint:   q[ 15:  0]     0000000000000001      1000000000000000
Hint:
Hint:

Hint: Cycle 6:         Your game state       Reference game state
Hint:   q[255:240]     0000000000000011      1000000000000001
Hint:   q[239:224]     0000000000000000      0000000000000001
Hint:   q[223:208]     0000000000000000      0000000000000000
Hint:   q[207:192]     0000000000000000      0000000000000000
Hint:   q[191:176]     0000000000000000      0000000000000000
Hint:   q[175:160]     0000000000000000      0000000000000000
Hint:   q[159:144]     0000000000000000      0000000000000000
Hint:   q[143:128]     0000000000000000      0000000000000000
Hint:   q[127:112]     0000000000000000      0000000000000000
Hint:   q[111: 96]     0000000000000000      0000000000000000
Hint:   q[ 95: 80]     0000000000000000      0000000000000000
Hint:   q[ 79: 64]     0000000000000000      0000000000000000
Hint:   q[ 63: 48]     0000000000000000      0000000000000000
Hint:   q[ 47: 32]     0000000000000000      0000000000000000
Hint:   q[ 31: 16]     0000000000000000      0000000000000000
Hint:   q[ 15:  0]     0000000000000011      1000000000000010
Hint:
Hint:

Hint: Cycle 7:         Your game state       Reference game state
Hint:   q[255:240]     0000000000000011      1000000000000010
Hint:   q[239:224]     0000000000000000      1000000000000001
Hint:   q[223:208]     0000000000000000      0000000000000000
Hint:   q[207:192]     0000000000000000      0000000000000000
Hint:   q[191:176]     0000000000000000      0000000000000000
Hint:   q[175:160]     0000000000000000      0000000000000000
Hint:   q[159:144]     0000000000000000      0000000000000000
Hint:   q[143:128]     0000000000000000      0000000000000000
Hint:   q[127:112]     0000000000000000      0000000000000000
Hint:   q[111: 96]     0000000000000000      0000000000000000
Hint:   q[ 95: 80]     0000000000000000      0000000000000000
Hint:   q[ 79: 64]     0000000000000000      0000000000000000
Hint:   q[ 63: 48]     0000000000000000      0000000000000000
Hint:   q[ 47: 32]     0000000000000000      0000000000000000
Hint:   q[ 31: 16]     0000000000000000      0000000000000000
Hint:   q[ 15:  0]     0000000000000011      1000000000000000
Hint:
Hint:

Hint: Cycle 8:         Your game state       Reference game state
Hint:   q[255:240]     0000000000000011      1100000000000000
Hint:   q[239:224]     0000000000000000      1000000000000001
Hint:   q[223:208]     0000000000000000      0000000000000000
Hint:   q[207:192]     0000000000000000      0000000000000000
Hint:   q[191:176]     0000000000000000      0000000000000000
Hint:   q[175:160]     0000000000000000      0000000000000000
Hint:   q[159:144]     0000000000000000      0000000000000000
Hint:   q[143:128]     0000000000000000      0000000000000000
Hint:   q[127:112]     0000000000000000      0000000000000000
Hint:   q[111: 96]     0000000000000000      0000000000000000
Hint:   q[ 95: 80]     0000000000000000      0000000000000000
Hint:   q[ 79: 64]     0000000000000000      0000000000000000
Hint:   q[ 63: 48]     0000000000000000      0000000000000000
Hint:   q[ 47: 32]     0000000000000000      0000000000000000
Hint:   q[ 31: 16]     0000000000000000      0000000000000000
Hint:   q[ 15:  0]     0000000000000011      0000000000000001
Hint:
Hint:

Hint: Cycle 9:         Your game state       Reference game state
Hint:   q[255:240]     0000000000000011      0100000000000000
Hint:   q[239:224]     0000000000000000      1100000000000001
Hint:   q[223:208]     0000000000000000      0000000000000000
Hint:   q[207:192]     0000000000000000      0000000000000000
Hint:   q[191:176]     0000000000000000      0000000000000000
Hint:   q[175:160]     0000000000000000      0000000000000000
Hint:   q[159:144]     0000000000000000      0000000000000000
Hint:   q[143:128]     0000000000000000      0000000000000000
Hint:   q[127:112]     0000000000000000      0000000000000000
Hint:   q[111: 96]     0000000000000000      0000000000000000
Hint:   q[ 95: 80]     0000000000000000      0000000000000000
Hint:   q[ 79: 64]     0000000000000000      0000000000000000
Hint:   q[ 63: 48]     0000000000000000      0000000000000000
Hint:   q[ 47: 32]     0000000000000000      0000000000000000
Hint:   q[ 31: 16]     0000000000000000      0000000000000000
Hint:   q[ 15:  0]     0000000000000011      1000000000000000
Hint:
Hint:

Hint: Cycle 10:         Your game state       Reference game state
Hint:   q[255:240]     0000000000000011      0100000000000001
Hint:   q[239:224]     0000000000000000      1100000000000000
Hint:   q[223:208]     0000000000000000      1000000000000000
Hint:   q[207:192]     0000000000000000      0000000000000000
Hint:   q[191:176]     0000000000000000      0000000000000000
Hint:   q[175:160]     0000000000000000      0000000000000000
Hint:   q[159:144]     0000000000000000      0000000000000000
Hint:   q[143:128]     0000000000000000      0000000000000000
Hint:   q[127:112]     0000000000000000      0000000000000000
Hint:   q[111: 96]     0000000000000000      0000000000000000
Hint:   q[ 95: 80]     0000000000000000      0000000000000000
Hint:   q[ 79: 64]     0000000000000000      0000000000000000
Hint:   q[ 63: 48]     0000000000000000      0000000000000000
Hint:   q[ 47: 32]     0000000000000000      0000000000000000
Hint:   q[ 31: 16]     0000000000000000      0000000000000000
Hint:   q[ 15:  0]     0000000000000011      0000000000000000
Hint:
Hint:

Hint: Cycle 11:         Your game state       Reference game state
Hint:   q[255:240]     0000000000000011      0100000000000000
Hint:   q[239:224]     0000000000000000      0100000000000001
Hint:   q[223:208]     0000000000000000      1100000000000000
Hint:   q[207:192]     0000000000000000      0000000000000000
Hint:   q[191:176]     0000000000000000      0000000000000000
Hint:   q[175:160]     0000000000000000      0000000000000000
Hint:   q[159:144]     0000000000000000      0000000000000000
Hint:   q[143:128]     0000000000000000      0000000000000000
Hint:   q[127:112]     0000000000000000      0000000000000000
Hint:   q[111: 96]     0000000000000000      0000000000000000
Hint:   q[ 95: 80]     0000000000000000      0000000000000000
Hint:   q[ 79: 64]     0000000000000000      0000000000000000
Hint:   q[ 63: 48]     0000000000000000      0000000000000000
Hint:   q[ 47: 32]     0000000000000000      0000000000000000
Hint:   q[ 31: 16]     0000000000000000      0000000000000000
Hint:   q[ 15:  0]     0000000000000011      0000000000000000
Hint:
Hint:

Hint: Cycle 12:         Your game state       Reference game state
Hint:   q[255:240]     0000000000000011      1000000000000000
Hint:   q[239:224]     0000000000000000      0110000000000000
Hint:   q[223:208]     0000000000000000      1100000000000000
Hint:   q[207:192]     0000000000000000      0000000000000000
Hint:   q[191:176]     0000000000000000      0000000000000000
Hint:   q[175:160]     0000000000000000      0000000000000000
Hint:   q[159:144]     0000000000000000      0000000000000000
Hint:   q[143:128]     0000000000000000      0000000000000000
Hint:   q[127:112]     0000000000000000      0000000000000000
Hint:   q[111: 96]     0000000000000000      0000000000000000
Hint:   q[ 95: 80]     0000000000000000      0000000000000000
Hint:   q[ 79: 64]     0000000000000000      0000000000000000
Hint:   q[ 63: 48]     0000000000000000      0000000000000000
Hint:   q[ 47: 32]     0000000000000000      0000000000000000
Hint:   q[ 31: 16]     0000000000000000      0000000000000000
Hint:   q[ 15:  0]     0000000000000011      0000000000000000
Hint:
Hint:

Hint: Cycle 13:         Your game state       Reference game state
Hint:   q[255:240]     0000000000000011      0100000000000000
Hint:   q[239:224]     0000000000000000      0010000000000000
Hint:   q[223:208]     0000000000000000      1110000000000000
Hint:   q[207:192]     0000000000000000      0000000000000000
Hint:   q[191:176]     0000000000000000      0000000000000000
Hint:   q[175:160]     0000000000000000      0000000000000000
Hint:   q[159:144]     0000000000000000      0000000000000000
Hint:   q[143:128]     0000000000000000      0000000000000000
Hint:   q[127:112]     0000000000000000      0000000000000000
Hint:   q[111: 96]     0000000000000000      0000000000000000
Hint:   q[ 95: 80]     0000000000000000      0000000000000000
Hint:   q[ 79: 64]     0000000000000000      0000000000000000
Hint:   q[ 63: 48]     0000000000000000      0000000000000000
Hint:   q[ 47: 32]     0000000000000000      0000000000000000
Hint:   q[ 31: 16]     0000000000000000      0000000000000000
Hint:   q[ 15:  0]     0000000000000011      0000000000000000
Hint:
Hint:

Hint: Cycle 14:         Your game state       Reference game state
Hint:   q[255:240]     0000000000000011      0000000000000000
Hint:   q[239:224]     0000000000000000      1010000000000000
Hint:   q[223:208]     0000000000000000      0110000000000000
Hint:   q[207:192]     0000000000000000      0100000000000000
Hint:   q[191:176]     0000000000000000      0000000000000000
Hint:   q[175:160]     0000000000000000      0000000000000000
Hint:   q[159:144]     0000000000000000      0000000000000000
Hint:   q[143:128]     0000000000000000      0000000000000000
Hint:   q[127:112]     0000000000000000      0000000000000000
Hint:   q[111: 96]     0000000000000000      0000000000000000
Hint:   q[ 95: 80]     0000000000000000      0000000000000000
Hint:   q[ 79: 64]     0000000000000000      0000000000000000
Hint:   q[ 63: 48]     0000000000000000      0000000000000000
Hint:   q[ 47: 32]     0000000000000000      0000000000000000
Hint:   q[ 31: 16]     0000000000000000      0000000000000000
Hint:   q[ 15:  0]     0000000000000011      0000000000000000
Hint:
Hint:

Hint: Cycle 15:         Your game state       Reference game state
Hint:   q[255:240]     0000000000000011      0000000000000000
Hint:   q[239:224]     0000000000000000      0010000000000000
Hint:   q[223:208]     0000000000000000      1010000000000000
Hint:   q[207:192]     0000000000000000      0110000000000000
Hint:   q[191:176]     0000000000000000      0000000000000000
Hint:   q[175:160]     0000000000000000      0000000000000000
Hint:   q[159:144]     0000000000000000      0000000000000000
Hint:   q[143:128]     0000000000000000      0000000000000000
Hint:   q[127:112]     0000000000000000      0000000000000000
Hint:   q[111: 96]     0000000000000000      0000000000000000
Hint:   q[ 95: 80]     0000000000000000      0000000000000000
Hint:   q[ 79: 64]     0000000000000000      0000000000000000
Hint:   q[ 63: 48]     0000000000000000      0000000000000000
Hint:   q[ 47: 32]     0000000000000000      0000000000000000
Hint:   q[ 31: 16]     0000000000000000      0000000000000000
Hint:   q[ 15:  0]     0000000000000011      0000000000000000
Hint:
Hint:

Hint: Cycle 16:         Your game state       Reference game state
Hint:   q[255:240]     0000000000000011      0000000000000000
Hint:   q[239:224]     0000000000000000      0100000000000000
Hint:   q[223:208]     0000000000000000      0011000000000000
Hint:   q[207:192]     0000000000000000      0110000000000000
Hint:   q[191:176]     0000000000000000      0000000000000000
Hint:   q[175:160]     0000000000000000      0000000000000000
Hint:   q[159:144]     0000000000000000      0000000000000000
Hint:   q[143:128]     0000000000000000      0000000000000000
Hint:   q[127:112]     0000000000000000      0000000000000000
Hint:   q[111: 96]     0000000000000000      0000000000000000
Hint:   q[ 95: 80]     0000000000000000      0000000000000000
Hint:   q[ 79: 64]     0000000000000000      0000000000000000
Hint:   q[ 63: 48]     0000000000000000      0000000000000000
Hint:   q[ 47: 32]     0000000000000000      0000000000000000
Hint:   q[ 31: 16]     0000000000000000      0000000000000000
Hint:   q[ 15:  0]     0000000000000011      0000000000000000
Hint:
Hint:

Hint: Cycle 17:         Your game state       Reference game state
Hint:   q[255:240]     0000000000000011      0000000000000000
Hint:   q[239:224]     0000000000000000      0010000000000000
Hint:   q[223:208]     0000000000000000      0001000000000000
Hint:   q[207:192]     0000000000000000      0111000000000000
Hint:   q[191:176]     0000000000000000      0000000000000000
Hint:   q[175:160]     0000000000000000      0000000000000000
Hint:   q[159:144]     0000000000000000      0000000000000000
Hint:   q[143:128]     0000000000000000      0000000000000000
Hint:   q[127:112]     0000000000000000      0000000000000000
Hint:   q[111: 96]     0000000000000000      0000000000000000
Hint:   q[ 95: 80]     0000000000000000      0000000000000000
Hint:   q[ 79: 64]     0000000000000000      0000000000000000
Hint:   q[ 63: 48]     0000000000000000      0000000000000000
Hint:   q[ 47: 32]     0000000000000000      0000000000000000
Hint:   q[ 31: 16]     0000000000000000      0000000000000000
Hint:   q[ 15:  0]     0000000000000011      0000000000000000
Hint:
Hint:

Hint: Cycle 18:         Your game state       Reference game state
Hint:   q[255:240]     0000000000000011      0000000000000000
Hint:   q[239:224]     0000000000000000      0000000000000000
Hint:   q[223:208]     0000000000000000      0101000000000000
Hint:   q[207:192]     0000000000000000      0011000000000000
Hint:   q[191:176]     0000000000000000      0010000000000000
Hint:   q[175:160]     0000000000000000      0000000000000000
Hint:   q[159:144]     0000000000000000      0000000000000000
Hint:   q[143:128]     0000000000000000      0000000000000000
Hint:   q[127:112]     0000000000000000      0000000000000000
Hint:   q[111: 96]     0000000000000000      0000000000000000
Hint:   q[ 95: 80]     0000000000000000      0000000000000000
Hint:   q[ 79: 64]     0000000000000000      0000000000000000
Hint:   q[ 63: 48]     0000000000000000      0000000000000000
Hint:   q[ 47: 32]     0000000000000000      0000000000000000
Hint:   q[ 31: 16]     0000000000000000      0000000000000000
Hint:   q[ 15:  0]     0000000000000011      0000000000000000
Hint:
Hint:

Hint: Cycle 19:         Your game state       Reference game state
Hint:   q[255:240]     0000000000000011      0000000000000000
Hint:   q[239:224]     0000000000000000      0000000000000000
Hint:   q[223:208]     0000000000000000      0001000000000000
Hint:   q[207:192]     0000000000000000      0101000000000000
Hint:   q[191:176]     0000000000000000      0011000000000000
Hint:   q[175:160]     0000000000000000      0000000000000000
Hint:   q[159:144]     0000000000000000      0000000000000000
Hint:   q[143:128]     0000000000000000      0000000000000000
Hint:   q[127:112]     0000000000000000      0000000000000000
Hint:   q[111: 96]     0000000000000000      0000000000000000
Hint:   q[ 95: 80]     0000000000000000      0000000000000000
Hint:   q[ 79: 64]     0000000000000000      0000000000000000
Hint:   q[ 63: 48]     0000000000000000      0000000000000000
Hint:   q[ 47: 32]     0000000000000000      0000000000000000
Hint:   q[ 31: 16]     0000000000000000      0000000000000000
Hint:   q[ 15:  0]     0000000000000011      0000000000000000
Hint:
Hint:

/home/jmb9986/AutoChip/autochip_scripts/../verilogeval_prompts_tbs/ve_testbenches_human/conwaylife/conwaylife_tb.sv:131: $finish called at 25116 (1ps)
Hint: Output 'q' has 748 mismatches. First mismatch occurred at time 120.
Hint: Total mismatched samples is 748 out of 5023 samples

Simulation finished at 25116 ps
Mismatches: 748 in 5023 samples

Time to Generate: 53.348912954330444
Best ranked response at iteration 0 with response number 7
Rank of best response: 0.8510850089587896
Best response module:
module top_module(
    input clk,
    input load,
    input [255:0] data,
    output reg [255:0] q
);

reg [255:0] next_state;

integer i;

always @(*) begin
    // Compute the next state of the game based on the current state
    for (i = 0; i < 256; i = i + 1) begin
        // Apply the rules of the game of life
        if (q[i] == 1'b1) begin
            // Cell is alive
            if (count_neighbors(i, q) < 2 || count_neighbors(i, q) > 3) begin
                // Cell dies
                next_state[i] = 1'b0;
            end else begin
                // Cell survives
                next_state[i] = 1'b1;
            end
        end else begin
            // Cell is dead
            if (count_neighbors(i, q) == 3) begin
                // Cell is born
                next_state[i] = 1'b1;
            end else begin
                // Cell remains dead
                next_state[i] = 1'b0;
            end
        end
    end
end

always @(posedge clk) begin
    if (load) begin
        // Load the initial state
        q <= data;
    end else begin
        // Update the game state
        q <= next_state;
    end
end

function integer count_neighbors(
    input integer index,
    input [255:0] state
);
    // Count the number of neighbors for the cell at the given index
    integer x, y, dx, dy, neighbor_count;
    x = index % 16;
    y = index / 16;
    neighbor_count = 0;
    for (dx = -1; dx <= 1; dx = dx + 1) begin
        for (dy = -1; dy <= 1; dy = dy + 1) begin
            if (dx != 0 || dy != 0) begin
                if (x + dx < 0) begin
                    // Wrap around left edge
                    if (state[((y + dy) % 16) * 16 + 15] == 1'b1) begin
                        neighbor_count = neighbor_count + 1;
                    end
                end else if (x + dx >= 16) begin
                    // Wrap around right edge
                    if (state[((y + dy) % 16) * 16 + 0] == 1'b1) begin
                        neighbor_count = neighbor_count + 1;
                    end
                end else if (y + dy < 0) begin
                    // Wrap around top edge
                    if (state[(15 * 16) + (x + dx)] == 1'b1) begin
                        neighbor_count = neighbor_count + 1;
                    end
                end else if (y + dy >= 16) begin
                    // Wrap around bottom edge
                    if (state[0 + (x + dx)] == 1'b1) begin
                        neighbor_count = neighbor_count + 1;
                    end
                end else begin
                    // Normal cell
                    if (state[((y + dy) * 16) + (x + dx)] == 1'b1) begin
                        neighbor_count = neighbor_count + 1;
                    end
                end
            end
        end
    end
    return neighbor_count;
endfunction

endmodule


