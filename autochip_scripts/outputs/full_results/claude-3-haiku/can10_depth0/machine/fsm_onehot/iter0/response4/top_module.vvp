#! /usr/local/bin/vvp
:ivl_version "13.0 (devel)" "(s20221226-331-g77d7f0b8f)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision - 12;
:vpi_module "/usr/local/lib/ivl/system.vpi";
:vpi_module "/usr/local/lib/ivl/vhdl_sys.vpi";
:vpi_module "/usr/local/lib/ivl/vhdl_textio.vpi";
:vpi_module "/usr/local/lib/ivl/v2005_math.vpi";
:vpi_module "/usr/local/lib/ivl/va_math.vpi";
:vpi_module "/usr/local/lib/ivl/v2009.vpi";
S_0x2481230 .scope package, "$unit" "$unit" 2 1;
 .timescale 0 0;
S_0x2494a70 .scope module, "tb" "tb" 3 122;
 .timescale -12 -12;
L_0x24816c0 .functor NOT 1, L_0x24fcaf0, C4<0>, C4<0>, C4<0>;
L_0x24fc970 .functor XOR 12, L_0x24fc830, L_0x24fc8d0, C4<000000000000>, C4<000000000000>;
L_0x24fca80 .functor XOR 12, L_0x24fc970, L_0x24fc9e0, C4<000000000000>, C4<000000000000>;
v0x24f5c60_0 .net *"_ivl_10", 11 0, L_0x24fc9e0;  1 drivers
v0x24f5d60_0 .net *"_ivl_12", 11 0, L_0x24fca80;  1 drivers
v0x24f5e40_0 .net *"_ivl_2", 11 0, L_0x24fc790;  1 drivers
v0x24f5f00_0 .net *"_ivl_4", 11 0, L_0x24fc830;  1 drivers
v0x24f5fe0_0 .net *"_ivl_6", 11 0, L_0x24fc8d0;  1 drivers
v0x24f6110_0 .net *"_ivl_8", 11 0, L_0x24fc970;  1 drivers
v0x24f61f0_0 .var "clk", 0 0;
v0x24f6290_0 .net "in", 0 0, v0x24f2460_0;  1 drivers
v0x24f6330_0 .net "next_state_dut", 9 0, L_0x24fba70;  1 drivers
v0x24f63d0_0 .net "next_state_ref", 9 0, L_0x24f9270;  1 drivers
v0x24f64e0_0 .net "out1_dut", 0 0, L_0x24f9b30;  1 drivers
v0x24f6580_0 .net "out1_ref", 0 0, L_0x2484510;  1 drivers
v0x24f6620_0 .net "out2_dut", 0 0, L_0x24f9dd0;  1 drivers
v0x24f66c0_0 .net "out2_ref", 0 0, L_0x24853b0;  1 drivers
v0x24f6790_0 .net "state", 9 0, v0x24f2790_0;  1 drivers
v0x24f6830_0 .var/2u "stats1", 287 0;
v0x24f68d0_0 .var/2u "strobe", 0 0;
v0x24f6970_0 .net "tb_match", 0 0, L_0x24fcaf0;  1 drivers
v0x24f6a40_0 .net "tb_mismatch", 0 0, L_0x24816c0;  1 drivers
v0x24f6ae0_0 .net "wavedrom_enable", 0 0, v0x24f29d0_0;  1 drivers
v0x24f6bb0_0 .net "wavedrom_title", 511 0, v0x24f2a90_0;  1 drivers
L_0x24fc790 .concat [ 1 1 10 0], L_0x24853b0, L_0x2484510, L_0x24f9270;
L_0x24fc830 .concat [ 1 1 10 0], L_0x24853b0, L_0x2484510, L_0x24f9270;
L_0x24fc8d0 .concat [ 1 1 10 0], L_0x24f9dd0, L_0x24f9b30, L_0x24fba70;
L_0x24fc9e0 .concat [ 1 1 10 0], L_0x24853b0, L_0x2484510, L_0x24f9270;
L_0x24fcaf0 .cmp/eeq 12, L_0x24fc790, L_0x24fca80;
S_0x2494c00 .scope module, "good1" "reference_module" 3 171, 3 4 0, S_0x2494a70;
 .timescale -12 -12;
    .port_info 0 /INPUT 1 "in";
    .port_info 1 /INPUT 10 "state";
    .port_info 2 /OUTPUT 10 "next_state";
    .port_info 3 /OUTPUT 1 "out1";
    .port_info 4 /OUTPUT 1 "out2";
L_0x2484510 .functor OR 1, L_0x24f6d00, L_0x24f6da0, C4<0>, C4<0>;
L_0x24853b0 .functor OR 1, L_0x24f6f30, L_0x24f6fd0, C4<0>, C4<0>;
L_0x2485b00 .functor OR 1, L_0x24f74b0, L_0x24f7550, C4<0>, C4<0>;
L_0x2482510 .functor OR 1, L_0x2485b00, L_0x24f76e0, C4<0>, C4<0>;
L_0x24a25a0 .functor OR 1, L_0x2482510, L_0x24f7850, C4<0>, C4<0>;
L_0x24c8dd0 .functor AND 1, L_0x24f7190, L_0x24a25a0, C4<1>, C4<1>;
L_0x24f7c30 .functor OR 1, L_0x24f7a80, L_0x24f7b20, C4<0>, C4<0>;
L_0x24f7de0 .functor OR 1, L_0x24f7c30, L_0x24f7d40, C4<0>, C4<0>;
L_0x24f7f40 .functor AND 1, v0x24f2460_0, L_0x24f7de0, C4<1>, C4<1>;
L_0x24f7bc0 .functor AND 1, v0x24f2460_0, L_0x24f8000, C4<1>, C4<1>;
L_0x24f8480 .functor AND 1, v0x24f2460_0, L_0x24f81d0, C4<1>, C4<1>;
L_0x24f8620 .functor AND 1, v0x24f2460_0, L_0x24f84f0, C4<1>, C4<1>;
L_0x24f87f0 .functor AND 1, v0x24f2460_0, L_0x24f8750, C4<1>, C4<1>;
L_0x24f8a20 .functor AND 1, v0x24f2460_0, L_0x24f88e0, C4<1>, C4<1>;
L_0x24f86e0 .functor OR 1, L_0x24f8b90, L_0x24f8c30, C4<0>, C4<0>;
L_0x24f8e80 .functor AND 1, v0x24f2460_0, L_0x24f86e0, C4<1>, C4<1>;
L_0x24f9130 .functor AND 1, L_0x24f8980, L_0x24f8fd0, C4<1>, C4<1>;
L_0x24f97f0 .functor AND 1, L_0x24f95e0, L_0x24f9750, C4<1>, C4<1>;
v0x24846c0_0 .net *"_ivl_1", 0 0, L_0x24f6d00;  1 drivers
v0x24854c0_0 .net *"_ivl_100", 0 0, L_0x24f95e0;  1 drivers
v0x2485560_0 .net *"_ivl_102", 0 0, L_0x24f9750;  1 drivers
v0x2485d70_0 .net *"_ivl_104", 0 0, L_0x24f97f0;  1 drivers
v0x2485e10_0 .net *"_ivl_15", 0 0, L_0x24f7190;  1 drivers
v0x2482660_0 .net *"_ivl_17", 4 0, L_0x24f72c0;  1 drivers
v0x2482700_0 .net *"_ivl_19", 0 0, L_0x24f74b0;  1 drivers
v0x24eef60_0 .net *"_ivl_21", 0 0, L_0x24f7550;  1 drivers
v0x24ef040_0 .net *"_ivl_22", 0 0, L_0x2485b00;  1 drivers
v0x24ef120_0 .net *"_ivl_25", 0 0, L_0x24f76e0;  1 drivers
v0x24ef200_0 .net *"_ivl_26", 0 0, L_0x2482510;  1 drivers
v0x24ef2e0_0 .net *"_ivl_29", 0 0, L_0x24f7850;  1 drivers
v0x24ef3c0_0 .net *"_ivl_3", 0 0, L_0x24f6da0;  1 drivers
v0x24ef4a0_0 .net *"_ivl_30", 0 0, L_0x24a25a0;  1 drivers
v0x24ef580_0 .net *"_ivl_33", 0 0, L_0x24c8dd0;  1 drivers
v0x24ef640_0 .net *"_ivl_37", 0 0, L_0x24f7a80;  1 drivers
v0x24ef720_0 .net *"_ivl_39", 0 0, L_0x24f7b20;  1 drivers
v0x24ef800_0 .net *"_ivl_40", 0 0, L_0x24f7c30;  1 drivers
v0x24ef8e0_0 .net *"_ivl_43", 0 0, L_0x24f7d40;  1 drivers
v0x24ef9c0_0 .net *"_ivl_44", 0 0, L_0x24f7de0;  1 drivers
v0x24efaa0_0 .net *"_ivl_47", 0 0, L_0x24f7f40;  1 drivers
v0x24efb60_0 .net *"_ivl_51", 0 0, L_0x24f8000;  1 drivers
v0x24efc40_0 .net *"_ivl_53", 0 0, L_0x24f7bc0;  1 drivers
v0x24efd00_0 .net *"_ivl_57", 0 0, L_0x24f81d0;  1 drivers
v0x24efde0_0 .net *"_ivl_59", 0 0, L_0x24f8480;  1 drivers
v0x24efea0_0 .net *"_ivl_63", 0 0, L_0x24f84f0;  1 drivers
v0x24eff80_0 .net *"_ivl_65", 0 0, L_0x24f8620;  1 drivers
v0x24f0040_0 .net *"_ivl_69", 0 0, L_0x24f8750;  1 drivers
v0x24f0120_0 .net *"_ivl_7", 0 0, L_0x24f6f30;  1 drivers
v0x24f0200_0 .net *"_ivl_71", 0 0, L_0x24f87f0;  1 drivers
v0x24f02c0_0 .net *"_ivl_75", 0 0, L_0x24f88e0;  1 drivers
v0x24f03a0_0 .net *"_ivl_77", 0 0, L_0x24f8a20;  1 drivers
v0x24f0460_0 .net *"_ivl_81", 0 0, L_0x24f8b90;  1 drivers
v0x24f0750_0 .net *"_ivl_83", 0 0, L_0x24f8c30;  1 drivers
v0x24f0830_0 .net *"_ivl_84", 0 0, L_0x24f86e0;  1 drivers
v0x24f0910_0 .net *"_ivl_87", 0 0, L_0x24f8e80;  1 drivers
v0x24f09d0_0 .net *"_ivl_9", 0 0, L_0x24f6fd0;  1 drivers
v0x24f0ab0_0 .net *"_ivl_91", 0 0, L_0x24f8980;  1 drivers
v0x24f0b70_0 .net *"_ivl_93", 0 0, L_0x24f8fd0;  1 drivers
v0x24f0c50_0 .net *"_ivl_95", 0 0, L_0x24f9130;  1 drivers
v0x24f0d10_0 .net "in", 0 0, v0x24f2460_0;  alias, 1 drivers
v0x24f0dd0_0 .net "next_state", 9 0, L_0x24f9270;  alias, 1 drivers
v0x24f0eb0_0 .net "out1", 0 0, L_0x2484510;  alias, 1 drivers
v0x24f0f70_0 .net "out2", 0 0, L_0x24853b0;  alias, 1 drivers
v0x24f1030_0 .net "state", 9 0, v0x24f2790_0;  alias, 1 drivers
L_0x24f6d00 .part v0x24f2790_0, 8, 1;
L_0x24f6da0 .part v0x24f2790_0, 9, 1;
L_0x24f6f30 .part v0x24f2790_0, 7, 1;
L_0x24f6fd0 .part v0x24f2790_0, 9, 1;
L_0x24f7190 .reduce/nor v0x24f2460_0;
L_0x24f72c0 .part v0x24f2790_0, 0, 5;
L_0x24f74b0 .reduce/or L_0x24f72c0;
L_0x24f7550 .part v0x24f2790_0, 7, 1;
L_0x24f76e0 .part v0x24f2790_0, 8, 1;
L_0x24f7850 .part v0x24f2790_0, 9, 1;
L_0x24f7a80 .part v0x24f2790_0, 0, 1;
L_0x24f7b20 .part v0x24f2790_0, 8, 1;
L_0x24f7d40 .part v0x24f2790_0, 9, 1;
L_0x24f8000 .part v0x24f2790_0, 1, 1;
L_0x24f81d0 .part v0x24f2790_0, 2, 1;
L_0x24f84f0 .part v0x24f2790_0, 3, 1;
L_0x24f8750 .part v0x24f2790_0, 4, 1;
L_0x24f88e0 .part v0x24f2790_0, 5, 1;
L_0x24f8b90 .part v0x24f2790_0, 6, 1;
L_0x24f8c30 .part v0x24f2790_0, 7, 1;
L_0x24f8980 .reduce/nor v0x24f2460_0;
L_0x24f8fd0 .part v0x24f2790_0, 5, 1;
LS_0x24f9270_0_0 .concat8 [ 1 1 1 1], L_0x24c8dd0, L_0x24f7f40, L_0x24f7bc0, L_0x24f8480;
LS_0x24f9270_0_4 .concat8 [ 1 1 1 1], L_0x24f8620, L_0x24f87f0, L_0x24f8a20, L_0x24f8e80;
LS_0x24f9270_0_8 .concat8 [ 1 1 0 0], L_0x24f9130, L_0x24f97f0;
L_0x24f9270 .concat8 [ 4 4 2 0], LS_0x24f9270_0_0, LS_0x24f9270_0_4, LS_0x24f9270_0_8;
L_0x24f95e0 .reduce/nor v0x24f2460_0;
L_0x24f9750 .part v0x24f2790_0, 6, 1;
S_0x24f11b0 .scope module, "stim1" "stimulus_gen" 3 166, 3 29 0, S_0x2494a70;
 .timescale -12 -12;
    .port_info 0 /INPUT 1 "clk";
    .port_info 1 /OUTPUT 1 "in";
    .port_info 2 /OUTPUT 10 "state";
    .port_info 3 /INPUT 1 "tb_match";
    .port_info 4 /INPUT 10 "next_state_ref";
    .port_info 5 /INPUT 10 "next_state_dut";
    .port_info 6 /OUTPUT 512 "wavedrom_title";
    .port_info 7 /OUTPUT 1 "wavedrom_enable";
v0x24f21e0_0 .net "clk", 0 0, v0x24f61f0_0;  1 drivers
v0x24f22c0_0 .var/2s "errored1", 31 0;
v0x24f23a0_0 .var/2s "errored2", 31 0;
v0x24f2460_0 .var "in", 0 0;
v0x24f2500_0 .net "next_state_dut", 9 0, L_0x24fba70;  alias, 1 drivers
v0x24f2610_0 .net "next_state_ref", 9 0, L_0x24f9270;  alias, 1 drivers
v0x24f26d0_0 .var/2s "onehot_error", 31 0;
v0x24f2790_0 .var "state", 9 0;
v0x24f2850_0 .var "state_error", 9 0;
v0x24f2910_0 .net "tb_match", 0 0, L_0x24fcaf0;  alias, 1 drivers
v0x24f29d0_0 .var "wavedrom_enable", 0 0;
v0x24f2a90_0 .var "wavedrom_title", 511 0;
E_0x24904f0 .event negedge, v0x24f21e0_0;
E_0x2490740 .event posedge, v0x24f21e0_0;
S_0x24f13f0 .scope begin, "$ivl_for_loop0" "$ivl_for_loop0" 3 69, 3 69 0, S_0x24f11b0;
 .timescale -12 -12;
v0x24f1630_0 .var/2s "i", 31 0;
E_0x248fdc0/0 .event negedge, v0x24f21e0_0;
E_0x248fdc0/1 .event posedge, v0x24f21e0_0;
E_0x248fdc0 .event/or E_0x248fdc0/0, E_0x248fdc0/1;
S_0x24f1730 .scope begin, "$ivl_for_loop1" "$ivl_for_loop1" 3 74, 3 74 0, S_0x24f11b0;
 .timescale -12 -12;
v0x24f1930_0 .var/2s "i", 31 0;
S_0x24f1a10 .scope begin, "$ivl_for_loop2" "$ivl_for_loop2" 3 114, 3 114 0, S_0x24f11b0;
 .timescale -12 -12;
v0x24f1bf0_0 .var/2s "i", 31 0;
S_0x24f1cd0 .scope task, "wavedrom_start" "wavedrom_start" 3 45, 3 45 0, S_0x24f11b0;
 .timescale -12 -12;
v0x24f1eb0_0 .var "title", 511 0;
TD_tb.stim1.wavedrom_start ;
    %end;
S_0x24f1fb0 .scope task, "wavedrom_stop" "wavedrom_stop" 3 48, 3 48 0, S_0x24f11b0;
 .timescale -12 -12;
TD_tb.stim1.wavedrom_stop ;
    %delay 1, 0;
    %end;
S_0x24f2c70 .scope module, "top_module1" "top_module" 3 178, 4 1 0, S_0x2494a70;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "in";
    .port_info 1 /INPUT 10 "state";
    .port_info 2 /OUTPUT 10 "next_state";
    .port_info 3 /OUTPUT 1 "out1";
    .port_info 4 /OUTPUT 1 "out2";
L_0x24f9b30 .functor OR 1, L_0x24f99f0, L_0x24f9a90, C4<0>, C4<0>;
L_0x24f9dd0 .functor OR 1, L_0x24f9c90, L_0x24f9d30, C4<0>, C4<0>;
L_0x24f9f30 .functor NOT 1, v0x24f2460_0, C4<0>, C4<0>, C4<0>;
L_0x24fa210 .functor OR 1, L_0x24fa040, L_0x24fa170, C4<0>, C4<0>;
L_0x24fa410 .functor OR 1, L_0x24fa210, L_0x24fa320, C4<0>, C4<0>;
L_0x24fa5c0 .functor OR 1, L_0x24fa410, L_0x24fa520, C4<0>, C4<0>;
L_0x24fa710 .functor AND 1, L_0x24f9f30, L_0x24fa5c0, C4<1>, C4<1>;
L_0x24fadd0 .functor OR 1, L_0x24fa820, L_0x24fad30, C4<0>, C4<0>;
L_0x24faff0 .functor OR 1, L_0x24fadd0, L_0x24faee0, C4<0>, C4<0>;
L_0x24fb100 .functor AND 1, v0x24f2460_0, L_0x24faff0, C4<1>, C4<1>;
L_0x24fb2c0 .functor AND 1, v0x24f2460_0, L_0x24fb220, C4<1>, C4<1>;
L_0x24faf80 .functor AND 1, v0x24f2460_0, L_0x24fb330, C4<1>, C4<1>;
L_0x24fb5b0 .functor AND 1, v0x24f2460_0, L_0x24fb510, C4<1>, C4<1>;
L_0x24fb7a0 .functor AND 1, v0x24f2460_0, L_0x24fb670, C4<1>, C4<1>;
L_0x24fb4a0 .functor AND 1, v0x24f2460_0, L_0x24fb8e0, C4<1>, C4<1>;
L_0x24fbbb0 .functor OR 1, L_0x24fb9d0, L_0x24fbb10, C4<0>, C4<0>;
L_0x24fbd50 .functor AND 1, v0x24f2460_0, L_0x24fbbb0, C4<1>, C4<1>;
L_0x24fbe10 .functor NOT 1, v0x24f2460_0, C4<0>, C4<0>, C4<0>;
L_0x24fc070 .functor AND 1, L_0x24fbe10, L_0x24fbf20, C4<1>, C4<1>;
L_0x24fc450 .functor NOT 1, v0x24f2460_0, C4<0>, C4<0>, C4<0>;
L_0x24fc630 .functor AND 1, L_0x24fc450, L_0x24fbe80, C4<1>, C4<1>;
v0x24f2ee0_0 .net *"_ivl_1", 0 0, L_0x24f99f0;  1 drivers
v0x24f2fc0_0 .net *"_ivl_102", 0 0, L_0x24fbe80;  1 drivers
v0x24f30a0_0 .net *"_ivl_103", 0 0, L_0x24fc630;  1 drivers
v0x24f3190_0 .net *"_ivl_14", 0 0, L_0x24f9f30;  1 drivers
v0x24f3270_0 .net *"_ivl_17", 4 0, L_0x24f9fa0;  1 drivers
v0x24f33a0_0 .net *"_ivl_19", 0 0, L_0x24fa040;  1 drivers
v0x24f3460_0 .net *"_ivl_21", 0 0, L_0x24fa170;  1 drivers
v0x24f3540_0 .net *"_ivl_22", 0 0, L_0x24fa210;  1 drivers
v0x24f3620_0 .net *"_ivl_25", 0 0, L_0x24fa320;  1 drivers
v0x24f3790_0 .net *"_ivl_26", 0 0, L_0x24fa410;  1 drivers
v0x24f3870_0 .net *"_ivl_29", 0 0, L_0x24fa520;  1 drivers
v0x24f3950_0 .net *"_ivl_3", 0 0, L_0x24f9a90;  1 drivers
v0x24f3a30_0 .net *"_ivl_30", 0 0, L_0x24fa5c0;  1 drivers
v0x24f3b10_0 .net *"_ivl_32", 0 0, L_0x24fa710;  1 drivers
v0x24f3bf0_0 .net *"_ivl_37", 0 0, L_0x24fa820;  1 drivers
v0x24f3cd0_0 .net *"_ivl_39", 0 0, L_0x24fad30;  1 drivers
v0x24f3db0_0 .net *"_ivl_40", 0 0, L_0x24fadd0;  1 drivers
v0x24f3fa0_0 .net *"_ivl_43", 0 0, L_0x24faee0;  1 drivers
v0x24f4080_0 .net *"_ivl_44", 0 0, L_0x24faff0;  1 drivers
v0x24f4160_0 .net *"_ivl_46", 0 0, L_0x24fb100;  1 drivers
v0x24f4240_0 .net *"_ivl_51", 0 0, L_0x24fb220;  1 drivers
v0x24f4320_0 .net *"_ivl_52", 0 0, L_0x24fb2c0;  1 drivers
v0x24f4400_0 .net *"_ivl_57", 0 0, L_0x24fb330;  1 drivers
v0x24f44e0_0 .net *"_ivl_58", 0 0, L_0x24faf80;  1 drivers
v0x24f45c0_0 .net *"_ivl_63", 0 0, L_0x24fb510;  1 drivers
v0x24f46a0_0 .net *"_ivl_64", 0 0, L_0x24fb5b0;  1 drivers
v0x24f4780_0 .net *"_ivl_69", 0 0, L_0x24fb670;  1 drivers
v0x24f4860_0 .net *"_ivl_7", 0 0, L_0x24f9c90;  1 drivers
v0x24f4940_0 .net *"_ivl_70", 0 0, L_0x24fb7a0;  1 drivers
v0x24f4a20_0 .net *"_ivl_75", 0 0, L_0x24fb8e0;  1 drivers
v0x24f4b00_0 .net *"_ivl_76", 0 0, L_0x24fb4a0;  1 drivers
v0x24f4be0_0 .net *"_ivl_81", 0 0, L_0x24fb9d0;  1 drivers
v0x24f4cc0_0 .net *"_ivl_83", 0 0, L_0x24fbb10;  1 drivers
v0x24f4fb0_0 .net *"_ivl_84", 0 0, L_0x24fbbb0;  1 drivers
v0x24f5090_0 .net *"_ivl_86", 0 0, L_0x24fbd50;  1 drivers
v0x24f5170_0 .net *"_ivl_9", 0 0, L_0x24f9d30;  1 drivers
v0x24f5250_0 .net *"_ivl_90", 0 0, L_0x24fbe10;  1 drivers
v0x24f5330_0 .net *"_ivl_93", 0 0, L_0x24fbf20;  1 drivers
v0x24f5410_0 .net *"_ivl_94", 0 0, L_0x24fc070;  1 drivers
v0x24f54f0_0 .net *"_ivl_99", 0 0, L_0x24fc450;  1 drivers
v0x24f55d0_0 .net "in", 0 0, v0x24f2460_0;  alias, 1 drivers
v0x24f5670_0 .net "next_state", 9 0, L_0x24fba70;  alias, 1 drivers
v0x24f5730_0 .net "out1", 0 0, L_0x24f9b30;  alias, 1 drivers
v0x24f57d0_0 .net "out2", 0 0, L_0x24f9dd0;  alias, 1 drivers
v0x24f5890_0 .net "state", 9 0, v0x24f2790_0;  alias, 1 drivers
L_0x24f99f0 .part v0x24f2790_0, 8, 1;
L_0x24f9a90 .part v0x24f2790_0, 9, 1;
L_0x24f9c90 .part v0x24f2790_0, 7, 1;
L_0x24f9d30 .part v0x24f2790_0, 9, 1;
L_0x24f9fa0 .part v0x24f2790_0, 0, 5;
L_0x24fa040 .reduce/or L_0x24f9fa0;
L_0x24fa170 .part v0x24f2790_0, 7, 1;
L_0x24fa320 .part v0x24f2790_0, 8, 1;
L_0x24fa520 .part v0x24f2790_0, 9, 1;
L_0x24fa820 .part v0x24f2790_0, 0, 1;
L_0x24fad30 .part v0x24f2790_0, 8, 1;
L_0x24faee0 .part v0x24f2790_0, 9, 1;
L_0x24fb220 .part v0x24f2790_0, 1, 1;
L_0x24fb330 .part v0x24f2790_0, 2, 1;
L_0x24fb510 .part v0x24f2790_0, 3, 1;
L_0x24fb670 .part v0x24f2790_0, 4, 1;
L_0x24fb8e0 .part v0x24f2790_0, 5, 1;
L_0x24fb9d0 .part v0x24f2790_0, 6, 1;
L_0x24fbb10 .part v0x24f2790_0, 7, 1;
L_0x24fbf20 .part v0x24f2790_0, 5, 1;
LS_0x24fba70_0_0 .concat8 [ 1 1 1 1], L_0x24fa710, L_0x24fb100, L_0x24fb2c0, L_0x24faf80;
LS_0x24fba70_0_4 .concat8 [ 1 1 1 1], L_0x24fb5b0, L_0x24fb7a0, L_0x24fb4a0, L_0x24fbd50;
LS_0x24fba70_0_8 .concat8 [ 1 1 0 0], L_0x24fc070, L_0x24fc630;
L_0x24fba70 .concat8 [ 4 4 2 0], LS_0x24fba70_0_0, LS_0x24fba70_0_4, LS_0x24fba70_0_8;
L_0x24fbe80 .part v0x24f2790_0, 6, 1;
S_0x24f5a40 .scope task, "wait_for_end_of_timestep" "wait_for_end_of_timestep" 3 187, 3 187 0, S_0x2494a70;
 .timescale -12 -12;
E_0x2477a20 .event anyedge, v0x24f68d0_0;
TD_tb.wait_for_end_of_timestep ;
    %pushi/vec4 5, 0, 32;
T_2.0 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_2.1, 5;
    %jmp/1 T_2.1, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %load/vec4 v0x24f68d0_0;
    %nor/r;
    %assign/vec4 v0x24f68d0_0, 0;
    %wait E_0x2477a20;
    %jmp T_2.0;
T_2.1 ;
    %pop/vec4 1;
    %end;
    .scope S_0x24f11b0;
T_3 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x24f22c0_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x24f23a0_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x24f26d0_0, 0, 32;
    %pushi/vec4 0, 0, 10;
    %store/vec4 v0x24f2850_0, 0, 10;
    %end;
    .thread T_3, $init;
    .scope S_0x24f11b0;
T_4 ;
    %pushi/vec4 2, 0, 32;
T_4.0 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_4.1, 5;
    %jmp/1 T_4.1, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_0x2490740;
    %jmp T_4.0;
T_4.1 ;
    %pop/vec4 1;
T_4.2 ;
    %wait E_0x248fdc0;
    %load/vec4 v0x24f2850_0;
    %load/vec4 v0x24f2610_0;
    %load/vec4 v0x24f2500_0;
    %xor;
    %or;
    %assign/vec4 v0x24f2850_0, 0;
    %jmp T_4.2;
T_4.3 ;
    %end;
    .thread T_4;
    .scope S_0x24f11b0;
T_5 ;
    %pushi/vec4 0, 0, 10;
    %assign/vec4 v0x24f2790_0, 0;
    %wait E_0x24904f0;
    %fork t_1, S_0x24f13f0;
    %jmp t_0;
    .scope S_0x24f13f0;
t_1 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x24f1630_0, 0, 32;
T_5.0 ; Top of for-loop 
    %load/vec4 v0x24f1630_0;
    %cmpi/s 10, 0, 32;
    %jmp/0xz T_5.1, 5;
    %wait E_0x248fdc0;
    %pushi/vec4 1, 0, 10;
    %load/vec4 v0x24f1630_0;
    %ix/vec4 4;
    %shiftl 4;
    %assign/vec4 v0x24f2790_0, 0;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0x24f2460_0, 0;
T_5.2 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x24f1630_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x24f1630_0, 0, 32;
    %jmp T_5.0;
T_5.1 ; for-loop exit label
    %end;
    .scope S_0x24f11b0;
t_0 %join;
    %fork t_3, S_0x24f1730;
    %jmp t_2;
    .scope S_0x24f1730;
t_3 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x24f1930_0, 0, 32;
T_5.3 ; Top of for-loop 
    %load/vec4 v0x24f1930_0;
    %cmpi/s 10, 0, 32;
    %jmp/0xz T_5.4, 5;
    %wait E_0x248fdc0;
    %pushi/vec4 1, 0, 10;
    %load/vec4 v0x24f1930_0;
    %ix/vec4 4;
    %shiftl 4;
    %assign/vec4 v0x24f2790_0, 0;
    %pushi/vec4 1, 0, 1;
    %assign/vec4 v0x24f2460_0, 0;
T_5.5 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x24f1930_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x24f1930_0, 0, 32;
    %jmp T_5.3;
T_5.4 ; for-loop exit label
    %end;
    .scope S_0x24f11b0;
t_2 %join;
    %wait E_0x24904f0;
    %fork TD_tb.stim1.wavedrom_stop, S_0x24f1fb0;
    %join;
    %pushi/vec4 200, 0, 32;
T_5.6 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_5.7, 5;
    %jmp/1 T_5.7, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_0x248fdc0;
    %pushi/vec4 1, 0, 10;
    %vpi_func 3 83 "$random" 32 {0 0 0};
    %pushi/vec4 10, 0, 32;
    %mod;
    %ix/vec4 4;
    %shiftl 4;
    %assign/vec4 v0x24f2790_0, 0;
    %vpi_func 3 84 "$random" 32 {0 0 0};
    %pad/s 1;
    %assign/vec4 v0x24f2460_0, 0;
    %load/vec4 v0x24f2910_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.8, 8;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x24f26d0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x24f26d0_0, 0, 32;
T_5.8 ;
    %jmp T_5.6;
T_5.7 ;
    %pop/vec4 1;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x24f22c0_0, 0, 32;
    %pushi/vec4 400, 0, 32;
T_5.10 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_5.11, 5;
    %jmp/1 T_5.11, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_0x248fdc0;
    %pushi/vec4 1, 0, 10;
    %vpi_func 3 91 "$random" 32 {0 0 0};
    %pushi/vec4 10, 0, 32;
    %mod;
    %ix/vec4 4;
    %shiftl 4;
    %pushi/vec4 1, 0, 10;
    %vpi_func 3 91 "$random" 32 {0 0 0};
    %pushi/vec4 10, 0, 32;
    %mod;
    %ix/vec4 4;
    %shiftl 4;
    %or;
    %assign/vec4 v0x24f2790_0, 0;
    %vpi_func 3 92 "$random" 32 {0 0 0};
    %pad/s 1;
    %assign/vec4 v0x24f2460_0, 0;
    %load/vec4 v0x24f2910_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.12, 8;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x24f22c0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x24f22c0_0, 0, 32;
T_5.12 ;
    %jmp T_5.10;
T_5.11 ;
    %pop/vec4 1;
    %load/vec4 v0x24f26d0_0;
    %nor/r;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_5.16, 9;
    %load/vec4 v0x24f22c0_0;
    %pushi/vec4 0, 0, 32;
    %cmp/ne;
    %flag_get/vec4 4;
    %and;
T_5.16;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.14, 8;
    %vpi_call/w 3 98 "$display", "Hint: Your circuit passed when given only one-hot inputs, but not with two-hot inputs." {0 0 0};
T_5.14 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x24f23a0_0, 0, 32;
    %pushi/vec4 800, 0, 32;
T_5.17 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_5.18, 5;
    %jmp/1 T_5.18, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_0x248fdc0;
    %vpi_func 3 103 "$random" 32 {0 0 0};
    %pad/s 10;
    %assign/vec4 v0x24f2790_0, 0;
    %vpi_func 3 104 "$random" 32 {0 0 0};
    %pad/s 1;
    %assign/vec4 v0x24f2460_0, 0;
    %load/vec4 v0x24f2910_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.19, 8;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x24f23a0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x24f23a0_0, 0, 32;
T_5.19 ;
    %jmp T_5.17;
T_5.18 ;
    %pop/vec4 1;
    %load/vec4 v0x24f26d0_0;
    %nor/r;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_5.23, 9;
    %load/vec4 v0x24f23a0_0;
    %pushi/vec4 0, 0, 32;
    %cmp/ne;
    %flag_get/vec4 4;
    %and;
T_5.23;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.21, 8;
    %vpi_call/w 3 109 "$display", "Hint: Your circuit passed when given only one-hot inputs, but not with random inputs." {0 0 0};
T_5.21 ;
    %load/vec4 v0x24f26d0_0;
    %nor/r;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_5.26, 9;
    %load/vec4 v0x24f22c0_0;
    %cmpi/ne 0, 0, 32;
    %flag_get/vec4 4;
    %jmp/1 T_5.27, 4;
    %load/vec4 v0x24f23a0_0;
    %pushi/vec4 0, 0, 32;
    %cmp/ne;
    %flag_get/vec4 4;
    %or;
T_5.27;
    %and;
T_5.26;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.24, 8;
    %vpi_call/w 3 112 "$display", "Hint: Are you doing something more complicated than deriving state transition equations by inspection?\012" {0 0 0};
T_5.24 ;
    %fork t_5, S_0x24f1a10;
    %jmp t_4;
    .scope S_0x24f1a10;
t_5 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x24f1bf0_0, 0, 32;
T_5.28 ; Top of for-loop 
    %load/vec4 v0x24f1bf0_0;
    %cmpi/u 10, 0, 32;
    %jmp/0xz T_5.29, 5;
    %load/vec4 v0x24f2850_0;
    %load/vec4 v0x24f1bf0_0;
    %part/s 1;
    %cmpi/e 0, 0, 1;
    %flag_mov 8, 6;
    %jmp/0 T_5.31, 8;
    %pushi/vec4 25455, 0, 32; draw_string_vec4
    %pushi/vec4 1920099683, 0, 32; draw_string_vec4
    %concat/vec4; draw_string_vec4
    %pushi/vec4 116, 0, 8; draw_string_vec4
    %concat/vec4; draw_string_vec4
    %jmp/1 T_5.32, 8;
T_5.31 ; End of true expr.
    %pushi/vec4 1768842095, 0, 32; draw_string_vec4
    %pushi/vec4 1920099683, 0, 32; draw_string_vec4
    %concat/vec4; draw_string_vec4
    %pushi/vec4 116, 0, 8; draw_string_vec4
    %concat/vec4; draw_string_vec4
    %jmp/0 T_5.32, 8;
 ; End of false expr.
    %blend;
T_5.32;
    %vpi_call/w 3 115 "$display", "Hint: next_state[%0d] is %s.", v0x24f1bf0_0, S<0,vec4,u72> {1 0 0};
T_5.30 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x24f1bf0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x24f1bf0_0, 0, 32;
    %jmp T_5.28;
T_5.29 ; for-loop exit label
    %end;
    .scope S_0x24f11b0;
t_4 %join;
    %delay 1, 0;
    %vpi_call/w 3 117 "$finish" {0 0 0};
    %end;
    .thread T_5;
    .scope S_0x2494a70;
T_6 ;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x24f61f0_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x24f68d0_0, 0, 1;
    %end;
    .thread T_6, $init;
    .scope S_0x2494a70;
T_7 ;
T_7.0 ;
    %delay 5, 0;
    %load/vec4 v0x24f61f0_0;
    %inv;
    %store/vec4 v0x24f61f0_0, 0, 1;
    %jmp T_7.0;
T_7.1 ;
    %end;
    .thread T_7;
    .scope S_0x2494a70;
T_8 ;
    %vpi_call/w 3 158 "$dumpfile", "wave.vcd" {0 0 0};
    %vpi_call/w 3 159 "$dumpvars", 32'sb00000000000000000000000000000001, v0x24f21e0_0, v0x24f6a40_0, v0x24f6290_0, v0x24f6790_0, v0x24f63d0_0, v0x24f6330_0, v0x24f6580_0, v0x24f64e0_0, v0x24f66c0_0, v0x24f6620_0 {0 0 0};
    %end;
    .thread T_8;
    .scope S_0x2494a70;
T_9 ;
    %load/vec4 v0x24f6830_0;
    %parti/u 32, 192, 32;
    %cmpi/ne 0, 0, 32;
    %jmp/0xz  T_9.0, 4;
    %load/vec4 v0x24f6830_0;
    %parti/u 32, 192, 32;
    %load/vec4 v0x24f6830_0;
    %parti/u 32, 160, 32;
    %vpi_call/w 3 196 "$display", "Hint: Output '%s' has %0d mismatches. First mismatch occurred at time %0d.", "next_state", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %jmp T_9.1;
T_9.0 ;
    %vpi_call/w 3 197 "$display", "Hint: Output '%s' has no mismatches.", "next_state" {0 0 0};
T_9.1 ;
    %load/vec4 v0x24f6830_0;
    %parti/u 32, 128, 32;
    %cmpi/ne 0, 0, 32;
    %jmp/0xz  T_9.2, 4;
    %load/vec4 v0x24f6830_0;
    %parti/u 32, 128, 32;
    %load/vec4 v0x24f6830_0;
    %parti/u 32, 96, 32;
    %vpi_call/w 3 198 "$display", "Hint: Output '%s' has %0d mismatches. First mismatch occurred at time %0d.", "out1", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %jmp T_9.3;
T_9.2 ;
    %vpi_call/w 3 199 "$display", "Hint: Output '%s' has no mismatches.", "out1" {0 0 0};
T_9.3 ;
    %load/vec4 v0x24f6830_0;
    %parti/u 32, 64, 32;
    %cmpi/ne 0, 0, 32;
    %jmp/0xz  T_9.4, 4;
    %load/vec4 v0x24f6830_0;
    %parti/u 32, 64, 32;
    %load/vec4 v0x24f6830_0;
    %parti/u 32, 32, 32;
    %vpi_call/w 3 200 "$display", "Hint: Output '%s' has %0d mismatches. First mismatch occurred at time %0d.", "out2", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %jmp T_9.5;
T_9.4 ;
    %vpi_call/w 3 201 "$display", "Hint: Output '%s' has no mismatches.", "out2" {0 0 0};
T_9.5 ;
    %load/vec4 v0x24f6830_0;
    %parti/u 32, 256, 32;
    %load/vec4 v0x24f6830_0;
    %parti/u 32, 0, 32;
    %vpi_call/w 3 203 "$display", "Hint: Total mismatched samples is %1d out of %1d samples\012", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %vpi_call/w 3 204 "$display", "Simulation finished at %0d ps", $time {0 0 0};
    %load/vec4 v0x24f6830_0;
    %parti/u 32, 256, 32;
    %load/vec4 v0x24f6830_0;
    %parti/u 32, 0, 32;
    %vpi_call/w 3 205 "$display", "Mismatches: %1d in %1d samples", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %end;
    .thread T_9, $final;
    .scope S_0x2494a70;
T_10 ;
    %wait E_0x248fdc0;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x24f6830_0;
    %pushi/vec4 0, 0, 32;
    %part/u 32;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x24f6830_0, 4, 32;
    %load/vec4 v0x24f6970_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_10.0, 8;
    %load/vec4 v0x24f6830_0;
    %parti/u 32, 256, 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_10.2, 4;
    %vpi_func 3 216 "$time" 64 {0 0 0};
    %cast2;
    %pad/u 32;
    %ix/load 4, 224, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x24f6830_0, 4, 32;
T_10.2 ;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x24f6830_0;
    %pushi/vec4 256, 0, 32;
    %part/u 32;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %ix/load 4, 256, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x24f6830_0, 4, 32;
T_10.0 ;
    %load/vec4 v0x24f63d0_0;
    %load/vec4 v0x24f63d0_0;
    %load/vec4 v0x24f6330_0;
    %xor;
    %load/vec4 v0x24f63d0_0;
    %xor;
    %cmp/ne;
    %jmp/0xz  T_10.4, 6;
    %load/vec4 v0x24f6830_0;
    %parti/u 32, 192, 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_10.6, 4;
    %vpi_func 3 220 "$time" 64 {0 0 0};
    %cast2;
    %pad/u 32;
    %ix/load 4, 160, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x24f6830_0, 4, 32;
T_10.6 ;
    %load/vec4 v0x24f6830_0;
    %parti/u 32, 192, 32;
    %addi 1, 0, 32;
    %ix/load 4, 192, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x24f6830_0, 4, 32;
T_10.4 ;
    %load/vec4 v0x24f6580_0;
    %load/vec4 v0x24f6580_0;
    %load/vec4 v0x24f64e0_0;
    %xor;
    %load/vec4 v0x24f6580_0;
    %xor;
    %cmp/ne;
    %jmp/0xz  T_10.8, 6;
    %load/vec4 v0x24f6830_0;
    %parti/u 32, 128, 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_10.10, 4;
    %vpi_func 3 223 "$time" 64 {0 0 0};
    %cast2;
    %pad/u 32;
    %ix/load 4, 96, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x24f6830_0, 4, 32;
T_10.10 ;
    %load/vec4 v0x24f6830_0;
    %parti/u 32, 128, 32;
    %addi 1, 0, 32;
    %ix/load 4, 128, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x24f6830_0, 4, 32;
T_10.8 ;
    %load/vec4 v0x24f66c0_0;
    %load/vec4 v0x24f66c0_0;
    %load/vec4 v0x24f6620_0;
    %xor;
    %load/vec4 v0x24f66c0_0;
    %xor;
    %cmp/ne;
    %jmp/0xz  T_10.12, 6;
    %load/vec4 v0x24f6830_0;
    %parti/u 32, 64, 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_10.14, 4;
    %vpi_func 3 226 "$time" 64 {0 0 0};
    %cast2;
    %pad/u 32;
    %ix/load 4, 32, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x24f6830_0, 4, 32;
T_10.14 ;
    %load/vec4 v0x24f6830_0;
    %parti/u 32, 64, 32;
    %addi 1, 0, 32;
    %ix/load 4, 64, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x24f6830_0, 4, 32;
T_10.12 ;
    %jmp T_10;
    .thread T_10;
# The file index is used to find the file name in the following table.
:file_names 5;
    "N/A";
    "<interactive>";
    "-";
    "/home/jmb9986/AutoChip/autochip_scripts/../verilogeval_prompts_tbs/ve_testbenches_machine/fsm_onehot/fsm_onehot_tb.sv";
    "/home/jmb9986/AutoChip/autochip_scripts/outputs/haiku/can10_depth0/machine/fsm_onehot/iter0/response4/top_module.sv";
