#! /usr/local/bin/vvp
:ivl_version "13.0 (devel)" "(s20221226-331-g77d7f0b8f)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision - 12;
:vpi_module "/usr/local/lib/ivl/system.vpi";
:vpi_module "/usr/local/lib/ivl/vhdl_sys.vpi";
:vpi_module "/usr/local/lib/ivl/vhdl_textio.vpi";
:vpi_module "/usr/local/lib/ivl/v2005_math.vpi";
:vpi_module "/usr/local/lib/ivl/va_math.vpi";
:vpi_module "/usr/local/lib/ivl/v2009.vpi";
S_0x24ce640 .scope package, "$unit" "$unit" 2 1;
 .timescale 0 0;
S_0x249b320 .scope module, "tb" "tb" 3 84;
 .timescale -12 -12;
L_0x24a2a90 .functor NOT 1, L_0x24fac90, C4<0>, C4<0>, C4<0>;
L_0x24faa70 .functor XOR 2, L_0x24fa910, L_0x24fa9d0, C4<00>, C4<00>;
L_0x24fab80 .functor XOR 2, L_0x24faa70, L_0x24faae0, C4<00>, C4<00>;
v0x24f6f00_0 .net *"_ivl_10", 1 0, L_0x24faae0;  1 drivers
v0x24f7000_0 .net *"_ivl_12", 1 0, L_0x24fab80;  1 drivers
v0x24f70e0_0 .net *"_ivl_2", 1 0, L_0x24fa850;  1 drivers
v0x24f71a0_0 .net *"_ivl_4", 1 0, L_0x24fa910;  1 drivers
v0x24f7280_0 .net *"_ivl_6", 1 0, L_0x24fa9d0;  1 drivers
v0x24f73b0_0 .net *"_ivl_8", 1 0, L_0x24faa70;  1 drivers
v0x24f7490_0 .net "a", 0 0, v0x24f49e0_0;  1 drivers
v0x24f7530_0 .net "b", 0 0, v0x24f4a80_0;  1 drivers
v0x24f75d0_0 .net "c", 0 0, v0x24f4b20_0;  1 drivers
v0x24f7670_0 .var "clk", 0 0;
v0x24f7710_0 .net "d", 0 0, v0x24f4c60_0;  1 drivers
v0x24f77b0_0 .net "out_pos_dut", 0 0, L_0x24fa330;  1 drivers
v0x24f7850_0 .net "out_pos_ref", 0 0, L_0x24f8e90;  1 drivers
v0x24f78f0_0 .net "out_sop_dut", 0 0, L_0x24f9700;  1 drivers
v0x24f7990_0 .net "out_sop_ref", 0 0, L_0x24cfb50;  1 drivers
v0x24f7a30_0 .var/2u "stats1", 223 0;
v0x24f7ad0_0 .var/2u "strobe", 0 0;
v0x24f7c80_0 .net "tb_match", 0 0, L_0x24fac90;  1 drivers
v0x24f7d50_0 .net "tb_mismatch", 0 0, L_0x24a2a90;  1 drivers
v0x24f7df0_0 .net "wavedrom_enable", 0 0, v0x24f4f30_0;  1 drivers
v0x24f7ec0_0 .net "wavedrom_title", 511 0, v0x24f4fd0_0;  1 drivers
L_0x24fa850 .concat [ 1 1 0 0], L_0x24f8e90, L_0x24cfb50;
L_0x24fa910 .concat [ 1 1 0 0], L_0x24f8e90, L_0x24cfb50;
L_0x24fa9d0 .concat [ 1 1 0 0], L_0x24fa330, L_0x24f9700;
L_0x24faae0 .concat [ 1 1 0 0], L_0x24f8e90, L_0x24cfb50;
L_0x24fac90 .cmp/eeq 2, L_0x24fa850, L_0x24fab80;
S_0x249f7c0 .scope module, "good1" "reference_module" 3 133, 3 4 0, S_0x249b320;
 .timescale -12 -12;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /INPUT 1 "c";
    .port_info 3 /INPUT 1 "d";
    .port_info 4 /OUTPUT 1 "out_sop";
    .port_info 5 /OUTPUT 1 "out_pos";
L_0x24a2e70 .functor AND 1, v0x24f4b20_0, v0x24f4c60_0, C4<1>, C4<1>;
L_0x24a3250 .functor NOT 1, v0x24f49e0_0, C4<0>, C4<0>, C4<0>;
L_0x24a3630 .functor NOT 1, v0x24f4a80_0, C4<0>, C4<0>, C4<0>;
L_0x24a38b0 .functor AND 1, L_0x24a3250, L_0x24a3630, C4<1>, C4<1>;
L_0x24bade0 .functor AND 1, L_0x24a38b0, v0x24f4b20_0, C4<1>, C4<1>;
L_0x24cfb50 .functor OR 1, L_0x24a2e70, L_0x24bade0, C4<0>, C4<0>;
L_0x24f8310 .functor NOT 1, v0x24f4a80_0, C4<0>, C4<0>, C4<0>;
L_0x24f8380 .functor OR 1, L_0x24f8310, v0x24f4c60_0, C4<0>, C4<0>;
L_0x24f8490 .functor AND 1, v0x24f4b20_0, L_0x24f8380, C4<1>, C4<1>;
L_0x24f8550 .functor NOT 1, v0x24f49e0_0, C4<0>, C4<0>, C4<0>;
L_0x24f8620 .functor OR 1, L_0x24f8550, v0x24f4a80_0, C4<0>, C4<0>;
L_0x24f8690 .functor AND 1, L_0x24f8490, L_0x24f8620, C4<1>, C4<1>;
L_0x24f8810 .functor NOT 1, v0x24f4a80_0, C4<0>, C4<0>, C4<0>;
L_0x24f8880 .functor OR 1, L_0x24f8810, v0x24f4c60_0, C4<0>, C4<0>;
L_0x24f87a0 .functor AND 1, v0x24f4b20_0, L_0x24f8880, C4<1>, C4<1>;
L_0x24f8a10 .functor NOT 1, v0x24f49e0_0, C4<0>, C4<0>, C4<0>;
L_0x24f8b10 .functor OR 1, L_0x24f8a10, v0x24f4c60_0, C4<0>, C4<0>;
L_0x24f8bd0 .functor AND 1, L_0x24f87a0, L_0x24f8b10, C4<1>, C4<1>;
L_0x24f8d80 .functor XNOR 1, L_0x24f8690, L_0x24f8bd0, C4<0>, C4<0>;
v0x24a23c0_0 .net *"_ivl_0", 0 0, L_0x24a2e70;  1 drivers
v0x24a27c0_0 .net *"_ivl_12", 0 0, L_0x24f8310;  1 drivers
v0x24a2ba0_0 .net *"_ivl_14", 0 0, L_0x24f8380;  1 drivers
v0x24a2f80_0 .net *"_ivl_16", 0 0, L_0x24f8490;  1 drivers
v0x24a3360_0 .net *"_ivl_18", 0 0, L_0x24f8550;  1 drivers
v0x24a3740_0 .net *"_ivl_2", 0 0, L_0x24a3250;  1 drivers
v0x24a39c0_0 .net *"_ivl_20", 0 0, L_0x24f8620;  1 drivers
v0x24f2f50_0 .net *"_ivl_24", 0 0, L_0x24f8810;  1 drivers
v0x24f3030_0 .net *"_ivl_26", 0 0, L_0x24f8880;  1 drivers
v0x24f3110_0 .net *"_ivl_28", 0 0, L_0x24f87a0;  1 drivers
v0x24f31f0_0 .net *"_ivl_30", 0 0, L_0x24f8a10;  1 drivers
v0x24f32d0_0 .net *"_ivl_32", 0 0, L_0x24f8b10;  1 drivers
v0x24f33b0_0 .net *"_ivl_36", 0 0, L_0x24f8d80;  1 drivers
L_0x7f7b99996018 .functor BUFT 1, C4<x>, C4<0>, C4<0>, C4<0>;
v0x24f3470_0 .net *"_ivl_38", 0 0, L_0x7f7b99996018;  1 drivers
v0x24f3550_0 .net *"_ivl_4", 0 0, L_0x24a3630;  1 drivers
v0x24f3630_0 .net *"_ivl_6", 0 0, L_0x24a38b0;  1 drivers
v0x24f3710_0 .net *"_ivl_8", 0 0, L_0x24bade0;  1 drivers
v0x24f37f0_0 .net "a", 0 0, v0x24f49e0_0;  alias, 1 drivers
v0x24f38b0_0 .net "b", 0 0, v0x24f4a80_0;  alias, 1 drivers
v0x24f3970_0 .net "c", 0 0, v0x24f4b20_0;  alias, 1 drivers
v0x24f3a30_0 .net "d", 0 0, v0x24f4c60_0;  alias, 1 drivers
v0x24f3af0_0 .net "out_pos", 0 0, L_0x24f8e90;  alias, 1 drivers
v0x24f3bb0_0 .net "out_sop", 0 0, L_0x24cfb50;  alias, 1 drivers
v0x24f3c70_0 .net "pos0", 0 0, L_0x24f8690;  1 drivers
v0x24f3d30_0 .net "pos1", 0 0, L_0x24f8bd0;  1 drivers
L_0x24f8e90 .functor MUXZ 1, L_0x7f7b99996018, L_0x24f8690, L_0x24f8d80, C4<>;
S_0x24f3eb0 .scope module, "stim1" "stimulus_gen" 3 126, 3 22 0, S_0x249b320;
 .timescale -12 -12;
    .port_info 0 /INPUT 1 "clk";
    .port_info 1 /OUTPUT 1 "a";
    .port_info 2 /OUTPUT 1 "b";
    .port_info 3 /OUTPUT 1 "c";
    .port_info 4 /OUTPUT 1 "d";
    .port_info 5 /OUTPUT 512 "wavedrom_title";
    .port_info 6 /OUTPUT 1 "wavedrom_enable";
    .port_info 7 /INPUT 1 "tb_match";
v0x24f49e0_0 .var "a", 0 0;
v0x24f4a80_0 .var "b", 0 0;
v0x24f4b20_0 .var "c", 0 0;
v0x24f4bc0_0 .net "clk", 0 0, v0x24f7670_0;  1 drivers
v0x24f4c60_0 .var "d", 0 0;
v0x24f4d50_0 .var/2u "fail", 0 0;
v0x24f4df0_0 .var/2u "fail1", 0 0;
v0x24f4e90_0 .net "tb_match", 0 0, L_0x24fac90;  alias, 1 drivers
v0x24f4f30_0 .var "wavedrom_enable", 0 0;
v0x24f4fd0_0 .var "wavedrom_title", 511 0;
E_0x24ae710/0 .event negedge, v0x24f4bc0_0;
E_0x24ae710/1 .event posedge, v0x24f4bc0_0;
E_0x24ae710 .event/or E_0x24ae710/0, E_0x24ae710/1;
S_0x24f41e0 .scope begin, "$ivl_for_loop0" "$ivl_for_loop0" 3 68, 3 68 0, S_0x24f3eb0;
 .timescale -12 -12;
v0x24f4420_0 .var/2s "i", 31 0;
E_0x24ae5b0 .event posedge, v0x24f4bc0_0;
S_0x24f4520 .scope task, "wavedrom_start" "wavedrom_start" 3 34, 3 34 0, S_0x24f3eb0;
 .timescale -12 -12;
v0x24f4720_0 .var "title", 511 0;
TD_tb.stim1.wavedrom_start ;
    %end;
S_0x24f4800 .scope task, "wavedrom_stop" "wavedrom_stop" 3 37, 3 37 0, S_0x24f3eb0;
 .timescale -12 -12;
TD_tb.stim1.wavedrom_stop ;
    %delay 1, 0;
    %end;
S_0x24f51b0 .scope module, "top_module1" "top_module" 3 141, 4 1 0, S_0x249b320;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /INPUT 1 "c";
    .port_info 3 /INPUT 1 "d";
    .port_info 4 /OUTPUT 1 "out_sop";
    .port_info 5 /OUTPUT 1 "out_pos";
L_0x24f9040 .functor AND 1, v0x24f4b20_0, v0x24f4c60_0, C4<1>, C4<1>;
L_0x24f92f0 .functor NOT 1, v0x24f49e0_0, C4<0>, C4<0>, C4<0>;
L_0x24f9380 .functor NOT 1, v0x24f4a80_0, C4<0>, C4<0>, C4<0>;
L_0x24f9500 .functor AND 1, L_0x24f92f0, L_0x24f9380, C4<1>, C4<1>;
L_0x24f9640 .functor AND 1, L_0x24f9500, v0x24f4b20_0, C4<1>, C4<1>;
L_0x24f9700 .functor OR 1, L_0x24f9040, L_0x24f9640, C4<0>, C4<0>;
L_0x24f98a0 .functor NOT 1, v0x24f4a80_0, C4<0>, C4<0>, C4<0>;
L_0x24f9910 .functor OR 1, L_0x24f98a0, v0x24f4c60_0, C4<0>, C4<0>;
L_0x24f9a20 .functor AND 1, v0x24f4b20_0, L_0x24f9910, C4<1>, C4<1>;
L_0x24f9ae0 .functor NOT 1, v0x24f49e0_0, C4<0>, C4<0>, C4<0>;
L_0x24f9cc0 .functor OR 1, L_0x24f9ae0, v0x24f4a80_0, C4<0>, C4<0>;
L_0x24f9d30 .functor AND 1, v0x24f4b20_0, L_0x24f9cc0, C4<1>, C4<1>;
L_0x24f9e60 .functor AND 1, L_0x24f9a20, L_0x24f9d30, C4<1>, C4<1>;
L_0x24f9f70 .functor NOT 1, v0x24f49e0_0, C4<0>, C4<0>, C4<0>;
L_0x24f9df0 .functor OR 1, L_0x24f9f70, v0x24f4c60_0, C4<0>, C4<0>;
L_0x24fa0b0 .functor AND 1, v0x24f4b20_0, L_0x24f9df0, C4<1>, C4<1>;
L_0x24fa200 .functor NOT 1, v0x24f4a80_0, C4<0>, C4<0>, C4<0>;
L_0x24fa270 .functor OR 1, L_0x24fa200, v0x24f4c60_0, C4<0>, C4<0>;
L_0x24fa3d0 .functor AND 1, v0x24f4b20_0, L_0x24fa270, C4<1>, C4<1>;
L_0x24fa490 .functor AND 1, L_0x24fa0b0, L_0x24fa3d0, C4<1>, C4<1>;
L_0x24fa650 .functor XNOR 1, L_0x24f9e60, L_0x24fa490, C4<0>, C4<0>;
v0x24f5370_0 .net *"_ivl_12", 0 0, L_0x24f98a0;  1 drivers
v0x24f5450_0 .net *"_ivl_14", 0 0, L_0x24f9910;  1 drivers
v0x24f5530_0 .net *"_ivl_16", 0 0, L_0x24f9a20;  1 drivers
v0x24f5620_0 .net *"_ivl_18", 0 0, L_0x24f9ae0;  1 drivers
v0x24f5700_0 .net *"_ivl_2", 0 0, L_0x24f92f0;  1 drivers
v0x24f5830_0 .net *"_ivl_20", 0 0, L_0x24f9cc0;  1 drivers
v0x24f5910_0 .net *"_ivl_22", 0 0, L_0x24f9d30;  1 drivers
v0x24f59f0_0 .net *"_ivl_26", 0 0, L_0x24f9f70;  1 drivers
v0x24f5ad0_0 .net *"_ivl_28", 0 0, L_0x24f9df0;  1 drivers
v0x24f5c40_0 .net *"_ivl_30", 0 0, L_0x24fa0b0;  1 drivers
v0x24f5d20_0 .net *"_ivl_32", 0 0, L_0x24fa200;  1 drivers
v0x24f5e00_0 .net *"_ivl_34", 0 0, L_0x24fa270;  1 drivers
v0x24f5ee0_0 .net *"_ivl_36", 0 0, L_0x24fa3d0;  1 drivers
v0x24f5fc0_0 .net *"_ivl_4", 0 0, L_0x24f9380;  1 drivers
v0x24f60a0_0 .net *"_ivl_40", 0 0, L_0x24fa650;  1 drivers
L_0x7f7b99996060 .functor BUFT 1, C4<x>, C4<0>, C4<0>, C4<0>;
v0x24f6160_0 .net *"_ivl_42", 0 0, L_0x7f7b99996060;  1 drivers
v0x24f6240_0 .net *"_ivl_6", 0 0, L_0x24f9500;  1 drivers
v0x24f6430_0 .net "a", 0 0, v0x24f49e0_0;  alias, 1 drivers
v0x24f64d0_0 .net "b", 0 0, v0x24f4a80_0;  alias, 1 drivers
v0x24f65c0_0 .net "c", 0 0, v0x24f4b20_0;  alias, 1 drivers
v0x24f66b0_0 .net "d", 0 0, v0x24f4c60_0;  alias, 1 drivers
v0x24f67a0_0 .net "out_pos", 0 0, L_0x24fa330;  alias, 1 drivers
v0x24f6860_0 .net "out_sop", 0 0, L_0x24f9700;  alias, 1 drivers
v0x24f6920_0 .net "pos0", 0 0, L_0x24f9e60;  1 drivers
v0x24f69e0_0 .net "pos1", 0 0, L_0x24fa490;  1 drivers
v0x24f6aa0_0 .net "sop_term1", 0 0, L_0x24f9040;  1 drivers
v0x24f6b60_0 .net "sop_term2", 0 0, L_0x24f9640;  1 drivers
L_0x24fa330 .functor MUXZ 1, L_0x7f7b99996060, L_0x24f9e60, L_0x24fa650, C4<>;
S_0x24f6ce0 .scope task, "wait_for_end_of_timestep" "wait_for_end_of_timestep" 3 151, 3 151 0, S_0x249b320;
 .timescale -12 -12;
E_0x24979f0 .event anyedge, v0x24f7ad0_0;
TD_tb.wait_for_end_of_timestep ;
    %pushi/vec4 5, 0, 32;
T_2.0 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_2.1, 5;
    %jmp/1 T_2.1, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %load/vec4 v0x24f7ad0_0;
    %nor/r;
    %assign/vec4 v0x24f7ad0_0, 0;
    %wait E_0x24979f0;
    %jmp T_2.0;
T_2.1 ;
    %pop/vec4 1;
    %end;
    .scope S_0x24f3eb0;
T_3 ;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x24f4d50_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x24f4df0_0, 0, 1;
    %end;
    .thread T_3, $init;
    .scope S_0x24f3eb0;
T_4 ;
    %wait E_0x24ae710;
    %load/vec4 v0x24f4e90_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_4.0, 8;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x24f4d50_0, 0, 1;
T_4.0 ;
    %jmp T_4;
    .thread T_4;
    .scope S_0x24f3eb0;
T_5 ;
    %wait E_0x24ae5b0;
    %pushi/vec4 0, 0, 4;
    %split/vec4 1;
    %assign/vec4 v0x24f4c60_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x24f4b20_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x24f4a80_0, 0;
    %assign/vec4 v0x24f49e0_0, 0;
    %wait E_0x24ae5b0;
    %pushi/vec4 1, 0, 4;
    %split/vec4 1;
    %assign/vec4 v0x24f4c60_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x24f4b20_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x24f4a80_0, 0;
    %assign/vec4 v0x24f49e0_0, 0;
    %wait E_0x24ae5b0;
    %pushi/vec4 2, 0, 4;
    %split/vec4 1;
    %assign/vec4 v0x24f4c60_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x24f4b20_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x24f4a80_0, 0;
    %assign/vec4 v0x24f49e0_0, 0;
    %wait E_0x24ae5b0;
    %pushi/vec4 4, 0, 4;
    %split/vec4 1;
    %assign/vec4 v0x24f4c60_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x24f4b20_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x24f4a80_0, 0;
    %assign/vec4 v0x24f49e0_0, 0;
    %wait E_0x24ae5b0;
    %pushi/vec4 5, 0, 4;
    %split/vec4 1;
    %assign/vec4 v0x24f4c60_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x24f4b20_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x24f4a80_0, 0;
    %assign/vec4 v0x24f49e0_0, 0;
    %wait E_0x24ae5b0;
    %pushi/vec4 6, 0, 4;
    %split/vec4 1;
    %assign/vec4 v0x24f4c60_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x24f4b20_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x24f4a80_0, 0;
    %assign/vec4 v0x24f49e0_0, 0;
    %wait E_0x24ae5b0;
    %pushi/vec4 7, 0, 4;
    %split/vec4 1;
    %assign/vec4 v0x24f4c60_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x24f4b20_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x24f4a80_0, 0;
    %assign/vec4 v0x24f49e0_0, 0;
    %wait E_0x24ae5b0;
    %pushi/vec4 9, 0, 4;
    %split/vec4 1;
    %assign/vec4 v0x24f4c60_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x24f4b20_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x24f4a80_0, 0;
    %assign/vec4 v0x24f49e0_0, 0;
    %wait E_0x24ae5b0;
    %pushi/vec4 10, 0, 4;
    %split/vec4 1;
    %assign/vec4 v0x24f4c60_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x24f4b20_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x24f4a80_0, 0;
    %assign/vec4 v0x24f49e0_0, 0;
    %wait E_0x24ae5b0;
    %pushi/vec4 13, 0, 4;
    %split/vec4 1;
    %assign/vec4 v0x24f4c60_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x24f4b20_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x24f4a80_0, 0;
    %assign/vec4 v0x24f49e0_0, 0;
    %wait E_0x24ae5b0;
    %pushi/vec4 14, 0, 4;
    %split/vec4 1;
    %assign/vec4 v0x24f4c60_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x24f4b20_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x24f4a80_0, 0;
    %assign/vec4 v0x24f49e0_0, 0;
    %wait E_0x24ae5b0;
    %pushi/vec4 15, 0, 4;
    %split/vec4 1;
    %assign/vec4 v0x24f4c60_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x24f4b20_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x24f4a80_0, 0;
    %assign/vec4 v0x24f49e0_0, 0;
    %wait E_0x24ae5b0;
    %load/vec4 v0x24f4d50_0;
    %store/vec4 v0x24f4df0_0, 0, 1;
    %fork t_1, S_0x24f41e0;
    %jmp t_0;
    .scope S_0x24f41e0;
t_1 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x24f4420_0, 0, 32;
T_5.0 ; Top of for-loop 
    %load/vec4 v0x24f4420_0;
    %cmpi/s 16, 0, 32;
    %jmp/0xz T_5.1, 5;
    %wait E_0x24ae5b0;
    %load/vec4 v0x24f4420_0;
    %pad/s 4;
    %split/vec4 1;
    %assign/vec4 v0x24f4c60_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x24f4b20_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x24f4a80_0, 0;
    %assign/vec4 v0x24f49e0_0, 0;
T_5.2 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x24f4420_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x24f4420_0, 0, 32;
    %jmp T_5.0;
T_5.1 ; for-loop exit label
    %end;
    .scope S_0x24f3eb0;
t_0 %join;
    %pushi/vec4 50, 0, 32;
T_5.3 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_5.4, 5;
    %jmp/1 T_5.4, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_0x24ae710;
    %vpi_func 3 74 "$random" 32 {0 0 0};
    %pad/s 4;
    %split/vec4 1;
    %assign/vec4 v0x24f4c60_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x24f4b20_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x24f4a80_0, 0;
    %assign/vec4 v0x24f49e0_0, 0;
    %jmp T_5.3;
T_5.4 ;
    %pop/vec4 1;
    %load/vec4 v0x24f4d50_0;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_5.7, 9;
    %load/vec4 v0x24f4df0_0;
    %inv;
    %and;
T_5.7;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.5, 8;
    %vpi_call/w 3 77 "$display", "Hint: Your circuit passes on the 12 required input combinations, but doesn't match the don't-care cases. Are you using minimal SOP and POS?" {0 0 0};
T_5.5 ;
    %vpi_call/w 3 79 "$finish" {0 0 0};
    %end;
    .thread T_5;
    .scope S_0x249b320;
T_6 ;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x24f7670_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x24f7ad0_0, 0, 1;
    %end;
    .thread T_6, $init;
    .scope S_0x249b320;
T_7 ;
T_7.0 ;
    %delay 5, 0;
    %load/vec4 v0x24f7670_0;
    %inv;
    %store/vec4 v0x24f7670_0, 0, 1;
    %jmp T_7.0;
T_7.1 ;
    %end;
    .thread T_7;
    .scope S_0x249b320;
T_8 ;
    %vpi_call/w 3 118 "$dumpfile", "wave.vcd" {0 0 0};
    %vpi_call/w 3 119 "$dumpvars", 32'sb00000000000000000000000000000001, v0x24f4bc0_0, v0x24f7d50_0, v0x24f7490_0, v0x24f7530_0, v0x24f75d0_0, v0x24f7710_0, v0x24f7990_0, v0x24f78f0_0, v0x24f7850_0, v0x24f77b0_0 {0 0 0};
    %end;
    .thread T_8;
    .scope S_0x249b320;
T_9 ;
    %load/vec4 v0x24f7a30_0;
    %parti/u 32, 128, 32;
    %cmpi/ne 0, 0, 32;
    %jmp/0xz  T_9.0, 4;
    %load/vec4 v0x24f7a30_0;
    %parti/u 32, 128, 32;
    %load/vec4 v0x24f7a30_0;
    %parti/u 32, 96, 32;
    %vpi_call/w 3 160 "$display", "Hint: Output '%s' has %0d mismatches. First mismatch occurred at time %0d.", "out_sop", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %jmp T_9.1;
T_9.0 ;
    %vpi_call/w 3 161 "$display", "Hint: Output '%s' has no mismatches.", "out_sop" {0 0 0};
T_9.1 ;
    %load/vec4 v0x24f7a30_0;
    %parti/u 32, 64, 32;
    %cmpi/ne 0, 0, 32;
    %jmp/0xz  T_9.2, 4;
    %load/vec4 v0x24f7a30_0;
    %parti/u 32, 64, 32;
    %load/vec4 v0x24f7a30_0;
    %parti/u 32, 32, 32;
    %vpi_call/w 3 162 "$display", "Hint: Output '%s' has %0d mismatches. First mismatch occurred at time %0d.", "out_pos", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %jmp T_9.3;
T_9.2 ;
    %vpi_call/w 3 163 "$display", "Hint: Output '%s' has no mismatches.", "out_pos" {0 0 0};
T_9.3 ;
    %load/vec4 v0x24f7a30_0;
    %parti/u 32, 192, 32;
    %load/vec4 v0x24f7a30_0;
    %parti/u 32, 0, 32;
    %vpi_call/w 3 165 "$display", "Hint: Total mismatched samples is %1d out of %1d samples\012", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %vpi_call/w 3 166 "$display", "Simulation finished at %0d ps", $time {0 0 0};
    %load/vec4 v0x24f7a30_0;
    %parti/u 32, 192, 32;
    %load/vec4 v0x24f7a30_0;
    %parti/u 32, 0, 32;
    %vpi_call/w 3 167 "$display", "Mismatches: %1d in %1d samples", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %end;
    .thread T_9, $final;
    .scope S_0x249b320;
T_10 ;
    %wait E_0x24ae710;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x24f7a30_0;
    %pushi/vec4 0, 0, 32;
    %part/u 32;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x24f7a30_0, 4, 32;
    %load/vec4 v0x24f7c80_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_10.0, 8;
    %load/vec4 v0x24f7a30_0;
    %parti/u 32, 192, 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_10.2, 4;
    %vpi_func 3 178 "$time" 64 {0 0 0};
    %cast2;
    %pad/u 32;
    %ix/load 4, 160, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x24f7a30_0, 4, 32;
T_10.2 ;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x24f7a30_0;
    %pushi/vec4 192, 0, 32;
    %part/u 32;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %ix/load 4, 192, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x24f7a30_0, 4, 32;
T_10.0 ;
    %load/vec4 v0x24f7990_0;
    %load/vec4 v0x24f7990_0;
    %load/vec4 v0x24f78f0_0;
    %xor;
    %load/vec4 v0x24f7990_0;
    %xor;
    %cmp/ne;
    %jmp/0xz  T_10.4, 6;
    %load/vec4 v0x24f7a30_0;
    %parti/u 32, 128, 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_10.6, 4;
    %vpi_func 3 182 "$time" 64 {0 0 0};
    %cast2;
    %pad/u 32;
    %ix/load 4, 96, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x24f7a30_0, 4, 32;
T_10.6 ;
    %load/vec4 v0x24f7a30_0;
    %parti/u 32, 128, 32;
    %addi 1, 0, 32;
    %ix/load 4, 128, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x24f7a30_0, 4, 32;
T_10.4 ;
    %load/vec4 v0x24f7850_0;
    %load/vec4 v0x24f7850_0;
    %load/vec4 v0x24f77b0_0;
    %xor;
    %load/vec4 v0x24f7850_0;
    %xor;
    %cmp/ne;
    %jmp/0xz  T_10.8, 6;
    %load/vec4 v0x24f7a30_0;
    %parti/u 32, 64, 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_10.10, 4;
    %vpi_func 3 185 "$time" 64 {0 0 0};
    %cast2;
    %pad/u 32;
    %ix/load 4, 32, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x24f7a30_0, 4, 32;
T_10.10 ;
    %load/vec4 v0x24f7a30_0;
    %parti/u 32, 64, 32;
    %addi 1, 0, 32;
    %ix/load 4, 64, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x24f7a30_0, 4, 32;
T_10.8 ;
    %jmp T_10;
    .thread T_10;
# The file index is used to find the file name in the following table.
:file_names 5;
    "N/A";
    "<interactive>";
    "-";
    "/home/jmb9986/AutoChip/autochip_scripts/../verilogeval_prompts_tbs/ve_testbenches_machine/ece241_2013_q2/ece241_2013_q2_tb.sv";
    "/home/jmb9986/AutoChip/autochip_scripts/outputs/haiku/can55_depth0/machine/ece241_2013_q2/iter0/response12/top_module.sv";
