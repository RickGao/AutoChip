#! /usr/local/bin/vvp
:ivl_version "13.0 (devel)" "(s20221226-331-g77d7f0b8f)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision - 12;
:vpi_module "/usr/local/lib/ivl/system.vpi";
:vpi_module "/usr/local/lib/ivl/vhdl_sys.vpi";
:vpi_module "/usr/local/lib/ivl/vhdl_textio.vpi";
:vpi_module "/usr/local/lib/ivl/v2005_math.vpi";
:vpi_module "/usr/local/lib/ivl/va_math.vpi";
:vpi_module "/usr/local/lib/ivl/v2009.vpi";
S_0x128b230 .scope package, "$unit" "$unit" 2 1;
 .timescale 0 0;
S_0x129ea70 .scope module, "tb" "tb" 3 122;
 .timescale -12 -12;
L_0x128b6c0 .functor NOT 1, L_0x13060a0, C4<0>, C4<0>, C4<0>;
L_0x1305f20 .functor XOR 12, L_0x1305de0, L_0x1305e80, C4<000000000000>, C4<000000000000>;
L_0x1306030 .functor XOR 12, L_0x1305f20, L_0x1305f90, C4<000000000000>, C4<000000000000>;
v0x12ff3b0_0 .net *"_ivl_10", 11 0, L_0x1305f90;  1 drivers
v0x12ff4b0_0 .net *"_ivl_12", 11 0, L_0x1306030;  1 drivers
v0x12ff590_0 .net *"_ivl_2", 11 0, L_0x1305d40;  1 drivers
v0x12ff650_0 .net *"_ivl_4", 11 0, L_0x1305de0;  1 drivers
v0x12ff730_0 .net *"_ivl_6", 11 0, L_0x1305e80;  1 drivers
v0x12ff860_0 .net *"_ivl_8", 11 0, L_0x1305f20;  1 drivers
v0x12ff940_0 .var "clk", 0 0;
v0x12ff9e0_0 .net "in", 0 0, v0x12fbd70_0;  1 drivers
v0x12ffa80_0 .net "next_state_dut", 9 0, L_0x1305600;  1 drivers
v0x12ffb20_0 .net "next_state_ref", 9 0, L_0x13029c0;  1 drivers
v0x12ffc30_0 .net "out1_dut", 0 0, L_0x1303280;  1 drivers
v0x12ffcd0_0 .net "out1_ref", 0 0, L_0x128e510;  1 drivers
v0x12ffd70_0 .net "out2_dut", 0 0, L_0x1303520;  1 drivers
v0x12ffe10_0 .net "out2_ref", 0 0, L_0x128f3b0;  1 drivers
v0x12ffee0_0 .net "state", 9 0, v0x12fc0a0_0;  1 drivers
v0x12fff80_0 .var/2u "stats1", 287 0;
v0x1300020_0 .var/2u "strobe", 0 0;
v0x13000c0_0 .net "tb_match", 0 0, L_0x13060a0;  1 drivers
v0x1300190_0 .net "tb_mismatch", 0 0, L_0x128b6c0;  1 drivers
v0x1300230_0 .net "wavedrom_enable", 0 0, v0x12fc2e0_0;  1 drivers
v0x1300300_0 .net "wavedrom_title", 511 0, v0x12fc3a0_0;  1 drivers
L_0x1305d40 .concat [ 1 1 10 0], L_0x128f3b0, L_0x128e510, L_0x13029c0;
L_0x1305de0 .concat [ 1 1 10 0], L_0x128f3b0, L_0x128e510, L_0x13029c0;
L_0x1305e80 .concat [ 1 1 10 0], L_0x1303520, L_0x1303280, L_0x1305600;
L_0x1305f90 .concat [ 1 1 10 0], L_0x128f3b0, L_0x128e510, L_0x13029c0;
L_0x13060a0 .cmp/eeq 12, L_0x1305d40, L_0x1306030;
S_0x129ec00 .scope module, "good1" "reference_module" 3 171, 3 4 0, S_0x129ea70;
 .timescale -12 -12;
    .port_info 0 /INPUT 1 "in";
    .port_info 1 /INPUT 10 "state";
    .port_info 2 /OUTPUT 10 "next_state";
    .port_info 3 /OUTPUT 1 "out1";
    .port_info 4 /OUTPUT 1 "out2";
L_0x128e510 .functor OR 1, L_0x1300450, L_0x13004f0, C4<0>, C4<0>;
L_0x128f3b0 .functor OR 1, L_0x1300680, L_0x1300720, C4<0>, C4<0>;
L_0x128fb00 .functor OR 1, L_0x1300c00, L_0x1300ca0, C4<0>, C4<0>;
L_0x128c510 .functor OR 1, L_0x128fb00, L_0x1300e30, C4<0>, C4<0>;
L_0x12ac5a0 .functor OR 1, L_0x128c510, L_0x1300fa0, C4<0>, C4<0>;
L_0x12d26e0 .functor AND 1, L_0x13008e0, L_0x12ac5a0, C4<1>, C4<1>;
L_0x1301380 .functor OR 1, L_0x13011d0, L_0x1301270, C4<0>, C4<0>;
L_0x1301530 .functor OR 1, L_0x1301380, L_0x1301490, C4<0>, C4<0>;
L_0x1301690 .functor AND 1, v0x12fbd70_0, L_0x1301530, C4<1>, C4<1>;
L_0x1301310 .functor AND 1, v0x12fbd70_0, L_0x1301750, C4<1>, C4<1>;
L_0x1301bd0 .functor AND 1, v0x12fbd70_0, L_0x1301920, C4<1>, C4<1>;
L_0x1301d70 .functor AND 1, v0x12fbd70_0, L_0x1301c40, C4<1>, C4<1>;
L_0x1301f40 .functor AND 1, v0x12fbd70_0, L_0x1301ea0, C4<1>, C4<1>;
L_0x1302170 .functor AND 1, v0x12fbd70_0, L_0x1302030, C4<1>, C4<1>;
L_0x1301e30 .functor OR 1, L_0x13022e0, L_0x1302380, C4<0>, C4<0>;
L_0x13025d0 .functor AND 1, v0x12fbd70_0, L_0x1301e30, C4<1>, C4<1>;
L_0x1302880 .functor AND 1, L_0x13020d0, L_0x1302720, C4<1>, C4<1>;
L_0x1302f40 .functor AND 1, L_0x1302d30, L_0x1302ea0, C4<1>, C4<1>;
v0x128e6c0_0 .net *"_ivl_1", 0 0, L_0x1300450;  1 drivers
v0x128f4c0_0 .net *"_ivl_100", 0 0, L_0x1302d30;  1 drivers
v0x128f560_0 .net *"_ivl_102", 0 0, L_0x1302ea0;  1 drivers
v0x128fd70_0 .net *"_ivl_104", 0 0, L_0x1302f40;  1 drivers
v0x128fe10_0 .net *"_ivl_15", 0 0, L_0x13008e0;  1 drivers
v0x128c660_0 .net *"_ivl_17", 4 0, L_0x1300a10;  1 drivers
v0x128c700_0 .net *"_ivl_19", 0 0, L_0x1300c00;  1 drivers
v0x12f8870_0 .net *"_ivl_21", 0 0, L_0x1300ca0;  1 drivers
v0x12f8950_0 .net *"_ivl_22", 0 0, L_0x128fb00;  1 drivers
v0x12f8a30_0 .net *"_ivl_25", 0 0, L_0x1300e30;  1 drivers
v0x12f8b10_0 .net *"_ivl_26", 0 0, L_0x128c510;  1 drivers
v0x12f8bf0_0 .net *"_ivl_29", 0 0, L_0x1300fa0;  1 drivers
v0x12f8cd0_0 .net *"_ivl_3", 0 0, L_0x13004f0;  1 drivers
v0x12f8db0_0 .net *"_ivl_30", 0 0, L_0x12ac5a0;  1 drivers
v0x12f8e90_0 .net *"_ivl_33", 0 0, L_0x12d26e0;  1 drivers
v0x12f8f50_0 .net *"_ivl_37", 0 0, L_0x13011d0;  1 drivers
v0x12f9030_0 .net *"_ivl_39", 0 0, L_0x1301270;  1 drivers
v0x12f9110_0 .net *"_ivl_40", 0 0, L_0x1301380;  1 drivers
v0x12f91f0_0 .net *"_ivl_43", 0 0, L_0x1301490;  1 drivers
v0x12f92d0_0 .net *"_ivl_44", 0 0, L_0x1301530;  1 drivers
v0x12f93b0_0 .net *"_ivl_47", 0 0, L_0x1301690;  1 drivers
v0x12f9470_0 .net *"_ivl_51", 0 0, L_0x1301750;  1 drivers
v0x12f9550_0 .net *"_ivl_53", 0 0, L_0x1301310;  1 drivers
v0x12f9610_0 .net *"_ivl_57", 0 0, L_0x1301920;  1 drivers
v0x12f96f0_0 .net *"_ivl_59", 0 0, L_0x1301bd0;  1 drivers
v0x12f97b0_0 .net *"_ivl_63", 0 0, L_0x1301c40;  1 drivers
v0x12f9890_0 .net *"_ivl_65", 0 0, L_0x1301d70;  1 drivers
v0x12f9950_0 .net *"_ivl_69", 0 0, L_0x1301ea0;  1 drivers
v0x12f9a30_0 .net *"_ivl_7", 0 0, L_0x1300680;  1 drivers
v0x12f9b10_0 .net *"_ivl_71", 0 0, L_0x1301f40;  1 drivers
v0x12f9bd0_0 .net *"_ivl_75", 0 0, L_0x1302030;  1 drivers
v0x12f9cb0_0 .net *"_ivl_77", 0 0, L_0x1302170;  1 drivers
v0x12f9d70_0 .net *"_ivl_81", 0 0, L_0x13022e0;  1 drivers
v0x12fa060_0 .net *"_ivl_83", 0 0, L_0x1302380;  1 drivers
v0x12fa140_0 .net *"_ivl_84", 0 0, L_0x1301e30;  1 drivers
v0x12fa220_0 .net *"_ivl_87", 0 0, L_0x13025d0;  1 drivers
v0x12fa2e0_0 .net *"_ivl_9", 0 0, L_0x1300720;  1 drivers
v0x12fa3c0_0 .net *"_ivl_91", 0 0, L_0x13020d0;  1 drivers
v0x12fa480_0 .net *"_ivl_93", 0 0, L_0x1302720;  1 drivers
v0x12fa560_0 .net *"_ivl_95", 0 0, L_0x1302880;  1 drivers
v0x12fa620_0 .net "in", 0 0, v0x12fbd70_0;  alias, 1 drivers
v0x12fa6e0_0 .net "next_state", 9 0, L_0x13029c0;  alias, 1 drivers
v0x12fa7c0_0 .net "out1", 0 0, L_0x128e510;  alias, 1 drivers
v0x12fa880_0 .net "out2", 0 0, L_0x128f3b0;  alias, 1 drivers
v0x12fa940_0 .net "state", 9 0, v0x12fc0a0_0;  alias, 1 drivers
L_0x1300450 .part v0x12fc0a0_0, 8, 1;
L_0x13004f0 .part v0x12fc0a0_0, 9, 1;
L_0x1300680 .part v0x12fc0a0_0, 7, 1;
L_0x1300720 .part v0x12fc0a0_0, 9, 1;
L_0x13008e0 .reduce/nor v0x12fbd70_0;
L_0x1300a10 .part v0x12fc0a0_0, 0, 5;
L_0x1300c00 .reduce/or L_0x1300a10;
L_0x1300ca0 .part v0x12fc0a0_0, 7, 1;
L_0x1300e30 .part v0x12fc0a0_0, 8, 1;
L_0x1300fa0 .part v0x12fc0a0_0, 9, 1;
L_0x13011d0 .part v0x12fc0a0_0, 0, 1;
L_0x1301270 .part v0x12fc0a0_0, 8, 1;
L_0x1301490 .part v0x12fc0a0_0, 9, 1;
L_0x1301750 .part v0x12fc0a0_0, 1, 1;
L_0x1301920 .part v0x12fc0a0_0, 2, 1;
L_0x1301c40 .part v0x12fc0a0_0, 3, 1;
L_0x1301ea0 .part v0x12fc0a0_0, 4, 1;
L_0x1302030 .part v0x12fc0a0_0, 5, 1;
L_0x13022e0 .part v0x12fc0a0_0, 6, 1;
L_0x1302380 .part v0x12fc0a0_0, 7, 1;
L_0x13020d0 .reduce/nor v0x12fbd70_0;
L_0x1302720 .part v0x12fc0a0_0, 5, 1;
LS_0x13029c0_0_0 .concat8 [ 1 1 1 1], L_0x12d26e0, L_0x1301690, L_0x1301310, L_0x1301bd0;
LS_0x13029c0_0_4 .concat8 [ 1 1 1 1], L_0x1301d70, L_0x1301f40, L_0x1302170, L_0x13025d0;
LS_0x13029c0_0_8 .concat8 [ 1 1 0 0], L_0x1302880, L_0x1302f40;
L_0x13029c0 .concat8 [ 4 4 2 0], LS_0x13029c0_0_0, LS_0x13029c0_0_4, LS_0x13029c0_0_8;
L_0x1302d30 .reduce/nor v0x12fbd70_0;
L_0x1302ea0 .part v0x12fc0a0_0, 6, 1;
S_0x12faac0 .scope module, "stim1" "stimulus_gen" 3 166, 3 29 0, S_0x129ea70;
 .timescale -12 -12;
    .port_info 0 /INPUT 1 "clk";
    .port_info 1 /OUTPUT 1 "in";
    .port_info 2 /OUTPUT 10 "state";
    .port_info 3 /INPUT 1 "tb_match";
    .port_info 4 /INPUT 10 "next_state_ref";
    .port_info 5 /INPUT 10 "next_state_dut";
    .port_info 6 /OUTPUT 512 "wavedrom_title";
    .port_info 7 /OUTPUT 1 "wavedrom_enable";
v0x12fbaf0_0 .net "clk", 0 0, v0x12ff940_0;  1 drivers
v0x12fbbd0_0 .var/2s "errored1", 31 0;
v0x12fbcb0_0 .var/2s "errored2", 31 0;
v0x12fbd70_0 .var "in", 0 0;
v0x12fbe10_0 .net "next_state_dut", 9 0, L_0x1305600;  alias, 1 drivers
v0x12fbf20_0 .net "next_state_ref", 9 0, L_0x13029c0;  alias, 1 drivers
v0x12fbfe0_0 .var/2s "onehot_error", 31 0;
v0x12fc0a0_0 .var "state", 9 0;
v0x12fc160_0 .var "state_error", 9 0;
v0x12fc220_0 .net "tb_match", 0 0, L_0x13060a0;  alias, 1 drivers
v0x12fc2e0_0 .var "wavedrom_enable", 0 0;
v0x12fc3a0_0 .var "wavedrom_title", 511 0;
E_0x129a4f0 .event negedge, v0x12fbaf0_0;
E_0x129a740 .event posedge, v0x12fbaf0_0;
S_0x12fad00 .scope begin, "$ivl_for_loop0" "$ivl_for_loop0" 3 69, 3 69 0, S_0x12faac0;
 .timescale -12 -12;
v0x12faf40_0 .var/2s "i", 31 0;
E_0x1299dc0/0 .event negedge, v0x12fbaf0_0;
E_0x1299dc0/1 .event posedge, v0x12fbaf0_0;
E_0x1299dc0 .event/or E_0x1299dc0/0, E_0x1299dc0/1;
S_0x12fb040 .scope begin, "$ivl_for_loop1" "$ivl_for_loop1" 3 74, 3 74 0, S_0x12faac0;
 .timescale -12 -12;
v0x12fb240_0 .var/2s "i", 31 0;
S_0x12fb320 .scope begin, "$ivl_for_loop2" "$ivl_for_loop2" 3 114, 3 114 0, S_0x12faac0;
 .timescale -12 -12;
v0x12fb500_0 .var/2s "i", 31 0;
S_0x12fb5e0 .scope task, "wavedrom_start" "wavedrom_start" 3 45, 3 45 0, S_0x12faac0;
 .timescale -12 -12;
v0x12fb7c0_0 .var "title", 511 0;
TD_tb.stim1.wavedrom_start ;
    %end;
S_0x12fb8c0 .scope task, "wavedrom_stop" "wavedrom_stop" 3 48, 3 48 0, S_0x12faac0;
 .timescale -12 -12;
TD_tb.stim1.wavedrom_stop ;
    %delay 1, 0;
    %end;
S_0x12fc580 .scope module, "top_module1" "top_module" 3 178, 4 1 0, S_0x129ea70;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "in";
    .port_info 1 /INPUT 10 "state";
    .port_info 2 /OUTPUT 10 "next_state";
    .port_info 3 /OUTPUT 1 "out1";
    .port_info 4 /OUTPUT 1 "out2";
L_0x1303280 .functor OR 1, L_0x1303140, L_0x13031e0, C4<0>, C4<0>;
L_0x1303520 .functor OR 1, L_0x13033e0, L_0x1303480, C4<0>, C4<0>;
L_0x1303680 .functor NOT 1, v0x12fbd70_0, C4<0>, C4<0>, C4<0>;
L_0x1303d30 .functor AND 1, L_0x1303680, L_0x1303be0, C4<1>, C4<1>;
L_0x13043b0 .functor OR 1, L_0x1303df0, L_0x13042a0, C4<0>, C4<0>;
L_0x1304560 .functor OR 1, L_0x13043b0, L_0x13044c0, C4<0>, C4<0>;
L_0x1304670 .functor AND 1, v0x12fbd70_0, L_0x1304560, C4<1>, C4<1>;
L_0x1304340 .functor AND 1, v0x12fbd70_0, L_0x1304730, C4<1>, C4<1>;
L_0x1304990 .functor AND 1, v0x12fbd70_0, L_0x13048f0, C4<1>, C4<1>;
L_0x1304b80 .functor AND 1, v0x12fbd70_0, L_0x1304a50, C4<1>, C4<1>;
L_0x1304d40 .functor AND 1, v0x12fbd70_0, L_0x1304ca0, C4<1>, C4<1>;
L_0x1304ef0 .functor AND 1, v0x12fbd70_0, L_0x1304db0, C4<1>, C4<1>;
L_0x1305210 .functor OR 1, L_0x1305020, L_0x13050c0, C4<0>, C4<0>;
L_0x1305320 .functor AND 1, v0x12fbd70_0, L_0x1305210, C4<1>, C4<1>;
L_0x1304fb0 .functor NOT 1, v0x12fbd70_0, C4<0>, C4<0>, C4<0>;
L_0x1305460 .functor AND 1, L_0x1304fb0, L_0x1304e50, C4<1>, C4<1>;
L_0x1305a30 .functor NOT 1, v0x12fbd70_0, C4<0>, C4<0>, C4<0>;
L_0x1305b40 .functor AND 1, L_0x1305a30, L_0x1305aa0, C4<1>, C4<1>;
v0x12fc7f0_0 .net *"_ivl_1", 0 0, L_0x1303140;  1 drivers
v0x12fc8d0_0 .net *"_ivl_14", 0 0, L_0x1303680;  1 drivers
v0x12fc9b0_0 .net *"_ivl_17", 4 0, L_0x13036f0;  1 drivers
v0x12fcaa0_0 .net *"_ivl_19", 0 0, L_0x1303790;  1 drivers
v0x12fcb80_0 .net *"_ivl_21", 0 0, L_0x1303870;  1 drivers
v0x12fccb0_0 .net *"_ivl_23", 0 0, L_0x1303910;  1 drivers
v0x12fcd90_0 .net *"_ivl_24", 7 0, L_0x1303a00;  1 drivers
v0x12fce70_0 .net *"_ivl_27", 0 0, L_0x1303be0;  1 drivers
v0x12fcf30_0 .net *"_ivl_28", 0 0, L_0x1303d30;  1 drivers
v0x12fd0a0_0 .net *"_ivl_3", 0 0, L_0x13031e0;  1 drivers
v0x12fd180_0 .net *"_ivl_33", 0 0, L_0x1303df0;  1 drivers
v0x12fd260_0 .net *"_ivl_35", 0 0, L_0x13042a0;  1 drivers
v0x12fd340_0 .net *"_ivl_36", 0 0, L_0x13043b0;  1 drivers
v0x12fd420_0 .net *"_ivl_39", 0 0, L_0x13044c0;  1 drivers
v0x12fd500_0 .net *"_ivl_40", 0 0, L_0x1304560;  1 drivers
v0x12fd5e0_0 .net *"_ivl_42", 0 0, L_0x1304670;  1 drivers
v0x12fd6c0_0 .net *"_ivl_47", 0 0, L_0x1304730;  1 drivers
v0x12fd8b0_0 .net *"_ivl_48", 0 0, L_0x1304340;  1 drivers
v0x12fd990_0 .net *"_ivl_53", 0 0, L_0x13048f0;  1 drivers
v0x12fda70_0 .net *"_ivl_54", 0 0, L_0x1304990;  1 drivers
v0x12fdb50_0 .net *"_ivl_59", 0 0, L_0x1304a50;  1 drivers
v0x12fdc30_0 .net *"_ivl_60", 0 0, L_0x1304b80;  1 drivers
v0x12fdd10_0 .net *"_ivl_65", 0 0, L_0x1304ca0;  1 drivers
v0x12fddf0_0 .net *"_ivl_66", 0 0, L_0x1304d40;  1 drivers
v0x12fded0_0 .net *"_ivl_7", 0 0, L_0x13033e0;  1 drivers
v0x12fdfb0_0 .net *"_ivl_71", 0 0, L_0x1304db0;  1 drivers
v0x12fe090_0 .net *"_ivl_72", 0 0, L_0x1304ef0;  1 drivers
v0x12fe170_0 .net *"_ivl_77", 0 0, L_0x1305020;  1 drivers
v0x12fe250_0 .net *"_ivl_79", 0 0, L_0x13050c0;  1 drivers
v0x12fe330_0 .net *"_ivl_80", 0 0, L_0x1305210;  1 drivers
v0x12fe410_0 .net *"_ivl_82", 0 0, L_0x1305320;  1 drivers
v0x12fe4f0_0 .net *"_ivl_86", 0 0, L_0x1304fb0;  1 drivers
v0x12fe5d0_0 .net *"_ivl_89", 0 0, L_0x1304e50;  1 drivers
v0x12fe8c0_0 .net *"_ivl_9", 0 0, L_0x1303480;  1 drivers
v0x12fe9a0_0 .net *"_ivl_90", 0 0, L_0x1305460;  1 drivers
v0x12fea80_0 .net *"_ivl_95", 0 0, L_0x1305a30;  1 drivers
v0x12feb60_0 .net *"_ivl_98", 0 0, L_0x1305aa0;  1 drivers
v0x12fec40_0 .net *"_ivl_99", 0 0, L_0x1305b40;  1 drivers
v0x12fed20_0 .net "in", 0 0, v0x12fbd70_0;  alias, 1 drivers
v0x12fedc0_0 .net "next_state", 9 0, L_0x1305600;  alias, 1 drivers
v0x12fee80_0 .net "out1", 0 0, L_0x1303280;  alias, 1 drivers
v0x12fef20_0 .net "out2", 0 0, L_0x1303520;  alias, 1 drivers
v0x12fefe0_0 .net "state", 9 0, v0x12fc0a0_0;  alias, 1 drivers
L_0x1303140 .part v0x12fc0a0_0, 8, 1;
L_0x13031e0 .part v0x12fc0a0_0, 9, 1;
L_0x13033e0 .part v0x12fc0a0_0, 7, 1;
L_0x1303480 .part v0x12fc0a0_0, 9, 1;
L_0x13036f0 .part v0x12fc0a0_0, 0, 5;
L_0x1303790 .part v0x12fc0a0_0, 7, 1;
L_0x1303870 .part v0x12fc0a0_0, 8, 1;
L_0x1303910 .part v0x12fc0a0_0, 9, 1;
L_0x1303a00 .concat [ 1 1 1 5], L_0x1303910, L_0x1303870, L_0x1303790, L_0x13036f0;
L_0x1303be0 .reduce/or L_0x1303a00;
L_0x1303df0 .part v0x12fc0a0_0, 0, 1;
L_0x13042a0 .part v0x12fc0a0_0, 8, 1;
L_0x13044c0 .part v0x12fc0a0_0, 9, 1;
L_0x1304730 .part v0x12fc0a0_0, 1, 1;
L_0x13048f0 .part v0x12fc0a0_0, 2, 1;
L_0x1304a50 .part v0x12fc0a0_0, 3, 1;
L_0x1304ca0 .part v0x12fc0a0_0, 4, 1;
L_0x1304db0 .part v0x12fc0a0_0, 5, 1;
L_0x1305020 .part v0x12fc0a0_0, 6, 1;
L_0x13050c0 .part v0x12fc0a0_0, 7, 1;
L_0x1304e50 .part v0x12fc0a0_0, 5, 1;
LS_0x1305600_0_0 .concat8 [ 1 1 1 1], L_0x1303d30, L_0x1304670, L_0x1304340, L_0x1304990;
LS_0x1305600_0_4 .concat8 [ 1 1 1 1], L_0x1304b80, L_0x1304d40, L_0x1304ef0, L_0x1305320;
LS_0x1305600_0_8 .concat8 [ 1 1 0 0], L_0x1305460, L_0x1305b40;
L_0x1305600 .concat8 [ 4 4 2 0], LS_0x1305600_0_0, LS_0x1305600_0_4, LS_0x1305600_0_8;
L_0x1305aa0 .part v0x12fc0a0_0, 6, 1;
S_0x12ff190 .scope task, "wait_for_end_of_timestep" "wait_for_end_of_timestep" 3 187, 3 187 0, S_0x129ea70;
 .timescale -12 -12;
E_0x1281a20 .event anyedge, v0x1300020_0;
TD_tb.wait_for_end_of_timestep ;
    %pushi/vec4 5, 0, 32;
T_2.0 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_2.1, 5;
    %jmp/1 T_2.1, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %load/vec4 v0x1300020_0;
    %nor/r;
    %assign/vec4 v0x1300020_0, 0;
    %wait E_0x1281a20;
    %jmp T_2.0;
T_2.1 ;
    %pop/vec4 1;
    %end;
    .scope S_0x12faac0;
T_3 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x12fbbd0_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x12fbcb0_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x12fbfe0_0, 0, 32;
    %pushi/vec4 0, 0, 10;
    %store/vec4 v0x12fc160_0, 0, 10;
    %end;
    .thread T_3, $init;
    .scope S_0x12faac0;
T_4 ;
    %pushi/vec4 2, 0, 32;
T_4.0 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_4.1, 5;
    %jmp/1 T_4.1, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_0x129a740;
    %jmp T_4.0;
T_4.1 ;
    %pop/vec4 1;
T_4.2 ;
    %wait E_0x1299dc0;
    %load/vec4 v0x12fc160_0;
    %load/vec4 v0x12fbf20_0;
    %load/vec4 v0x12fbe10_0;
    %xor;
    %or;
    %assign/vec4 v0x12fc160_0, 0;
    %jmp T_4.2;
T_4.3 ;
    %end;
    .thread T_4;
    .scope S_0x12faac0;
T_5 ;
    %pushi/vec4 0, 0, 10;
    %assign/vec4 v0x12fc0a0_0, 0;
    %wait E_0x129a4f0;
    %fork t_1, S_0x12fad00;
    %jmp t_0;
    .scope S_0x12fad00;
t_1 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x12faf40_0, 0, 32;
T_5.0 ; Top of for-loop 
    %load/vec4 v0x12faf40_0;
    %cmpi/s 10, 0, 32;
    %jmp/0xz T_5.1, 5;
    %wait E_0x1299dc0;
    %pushi/vec4 1, 0, 10;
    %load/vec4 v0x12faf40_0;
    %ix/vec4 4;
    %shiftl 4;
    %assign/vec4 v0x12fc0a0_0, 0;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0x12fbd70_0, 0;
T_5.2 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x12faf40_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x12faf40_0, 0, 32;
    %jmp T_5.0;
T_5.1 ; for-loop exit label
    %end;
    .scope S_0x12faac0;
t_0 %join;
    %fork t_3, S_0x12fb040;
    %jmp t_2;
    .scope S_0x12fb040;
t_3 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x12fb240_0, 0, 32;
T_5.3 ; Top of for-loop 
    %load/vec4 v0x12fb240_0;
    %cmpi/s 10, 0, 32;
    %jmp/0xz T_5.4, 5;
    %wait E_0x1299dc0;
    %pushi/vec4 1, 0, 10;
    %load/vec4 v0x12fb240_0;
    %ix/vec4 4;
    %shiftl 4;
    %assign/vec4 v0x12fc0a0_0, 0;
    %pushi/vec4 1, 0, 1;
    %assign/vec4 v0x12fbd70_0, 0;
T_5.5 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x12fb240_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x12fb240_0, 0, 32;
    %jmp T_5.3;
T_5.4 ; for-loop exit label
    %end;
    .scope S_0x12faac0;
t_2 %join;
    %wait E_0x129a4f0;
    %fork TD_tb.stim1.wavedrom_stop, S_0x12fb8c0;
    %join;
    %pushi/vec4 200, 0, 32;
T_5.6 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_5.7, 5;
    %jmp/1 T_5.7, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_0x1299dc0;
    %pushi/vec4 1, 0, 10;
    %vpi_func 3 83 "$random" 32 {0 0 0};
    %pushi/vec4 10, 0, 32;
    %mod;
    %ix/vec4 4;
    %shiftl 4;
    %assign/vec4 v0x12fc0a0_0, 0;
    %vpi_func 3 84 "$random" 32 {0 0 0};
    %pad/s 1;
    %assign/vec4 v0x12fbd70_0, 0;
    %load/vec4 v0x12fc220_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.8, 8;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x12fbfe0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x12fbfe0_0, 0, 32;
T_5.8 ;
    %jmp T_5.6;
T_5.7 ;
    %pop/vec4 1;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x12fbbd0_0, 0, 32;
    %pushi/vec4 400, 0, 32;
T_5.10 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_5.11, 5;
    %jmp/1 T_5.11, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_0x1299dc0;
    %pushi/vec4 1, 0, 10;
    %vpi_func 3 91 "$random" 32 {0 0 0};
    %pushi/vec4 10, 0, 32;
    %mod;
    %ix/vec4 4;
    %shiftl 4;
    %pushi/vec4 1, 0, 10;
    %vpi_func 3 91 "$random" 32 {0 0 0};
    %pushi/vec4 10, 0, 32;
    %mod;
    %ix/vec4 4;
    %shiftl 4;
    %or;
    %assign/vec4 v0x12fc0a0_0, 0;
    %vpi_func 3 92 "$random" 32 {0 0 0};
    %pad/s 1;
    %assign/vec4 v0x12fbd70_0, 0;
    %load/vec4 v0x12fc220_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.12, 8;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x12fbbd0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x12fbbd0_0, 0, 32;
T_5.12 ;
    %jmp T_5.10;
T_5.11 ;
    %pop/vec4 1;
    %load/vec4 v0x12fbfe0_0;
    %nor/r;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_5.16, 9;
    %load/vec4 v0x12fbbd0_0;
    %pushi/vec4 0, 0, 32;
    %cmp/ne;
    %flag_get/vec4 4;
    %and;
T_5.16;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.14, 8;
    %vpi_call/w 3 98 "$display", "Hint: Your circuit passed when given only one-hot inputs, but not with two-hot inputs." {0 0 0};
T_5.14 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x12fbcb0_0, 0, 32;
    %pushi/vec4 800, 0, 32;
T_5.17 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_5.18, 5;
    %jmp/1 T_5.18, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_0x1299dc0;
    %vpi_func 3 103 "$random" 32 {0 0 0};
    %pad/s 10;
    %assign/vec4 v0x12fc0a0_0, 0;
    %vpi_func 3 104 "$random" 32 {0 0 0};
    %pad/s 1;
    %assign/vec4 v0x12fbd70_0, 0;
    %load/vec4 v0x12fc220_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.19, 8;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x12fbcb0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x12fbcb0_0, 0, 32;
T_5.19 ;
    %jmp T_5.17;
T_5.18 ;
    %pop/vec4 1;
    %load/vec4 v0x12fbfe0_0;
    %nor/r;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_5.23, 9;
    %load/vec4 v0x12fbcb0_0;
    %pushi/vec4 0, 0, 32;
    %cmp/ne;
    %flag_get/vec4 4;
    %and;
T_5.23;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.21, 8;
    %vpi_call/w 3 109 "$display", "Hint: Your circuit passed when given only one-hot inputs, but not with random inputs." {0 0 0};
T_5.21 ;
    %load/vec4 v0x12fbfe0_0;
    %nor/r;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_5.26, 9;
    %load/vec4 v0x12fbbd0_0;
    %cmpi/ne 0, 0, 32;
    %flag_get/vec4 4;
    %jmp/1 T_5.27, 4;
    %load/vec4 v0x12fbcb0_0;
    %pushi/vec4 0, 0, 32;
    %cmp/ne;
    %flag_get/vec4 4;
    %or;
T_5.27;
    %and;
T_5.26;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.24, 8;
    %vpi_call/w 3 112 "$display", "Hint: Are you doing something more complicated than deriving state transition equations by inspection?\012" {0 0 0};
T_5.24 ;
    %fork t_5, S_0x12fb320;
    %jmp t_4;
    .scope S_0x12fb320;
t_5 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x12fb500_0, 0, 32;
T_5.28 ; Top of for-loop 
    %load/vec4 v0x12fb500_0;
    %cmpi/u 10, 0, 32;
    %jmp/0xz T_5.29, 5;
    %load/vec4 v0x12fc160_0;
    %load/vec4 v0x12fb500_0;
    %part/s 1;
    %cmpi/e 0, 0, 1;
    %flag_mov 8, 6;
    %jmp/0 T_5.31, 8;
    %pushi/vec4 25455, 0, 32; draw_string_vec4
    %pushi/vec4 1920099683, 0, 32; draw_string_vec4
    %concat/vec4; draw_string_vec4
    %pushi/vec4 116, 0, 8; draw_string_vec4
    %concat/vec4; draw_string_vec4
    %jmp/1 T_5.32, 8;
T_5.31 ; End of true expr.
    %pushi/vec4 1768842095, 0, 32; draw_string_vec4
    %pushi/vec4 1920099683, 0, 32; draw_string_vec4
    %concat/vec4; draw_string_vec4
    %pushi/vec4 116, 0, 8; draw_string_vec4
    %concat/vec4; draw_string_vec4
    %jmp/0 T_5.32, 8;
 ; End of false expr.
    %blend;
T_5.32;
    %vpi_call/w 3 115 "$display", "Hint: next_state[%0d] is %s.", v0x12fb500_0, S<0,vec4,u72> {1 0 0};
T_5.30 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x12fb500_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x12fb500_0, 0, 32;
    %jmp T_5.28;
T_5.29 ; for-loop exit label
    %end;
    .scope S_0x12faac0;
t_4 %join;
    %delay 1, 0;
    %vpi_call/w 3 117 "$finish" {0 0 0};
    %end;
    .thread T_5;
    .scope S_0x129ea70;
T_6 ;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x12ff940_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x1300020_0, 0, 1;
    %end;
    .thread T_6, $init;
    .scope S_0x129ea70;
T_7 ;
T_7.0 ;
    %delay 5, 0;
    %load/vec4 v0x12ff940_0;
    %inv;
    %store/vec4 v0x12ff940_0, 0, 1;
    %jmp T_7.0;
T_7.1 ;
    %end;
    .thread T_7;
    .scope S_0x129ea70;
T_8 ;
    %vpi_call/w 3 158 "$dumpfile", "wave.vcd" {0 0 0};
    %vpi_call/w 3 159 "$dumpvars", 32'sb00000000000000000000000000000001, v0x12fbaf0_0, v0x1300190_0, v0x12ff9e0_0, v0x12ffee0_0, v0x12ffb20_0, v0x12ffa80_0, v0x12ffcd0_0, v0x12ffc30_0, v0x12ffe10_0, v0x12ffd70_0 {0 0 0};
    %end;
    .thread T_8;
    .scope S_0x129ea70;
T_9 ;
    %load/vec4 v0x12fff80_0;
    %parti/u 32, 192, 32;
    %cmpi/ne 0, 0, 32;
    %jmp/0xz  T_9.0, 4;
    %load/vec4 v0x12fff80_0;
    %parti/u 32, 192, 32;
    %load/vec4 v0x12fff80_0;
    %parti/u 32, 160, 32;
    %vpi_call/w 3 196 "$display", "Hint: Output '%s' has %0d mismatches. First mismatch occurred at time %0d.", "next_state", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %jmp T_9.1;
T_9.0 ;
    %vpi_call/w 3 197 "$display", "Hint: Output '%s' has no mismatches.", "next_state" {0 0 0};
T_9.1 ;
    %load/vec4 v0x12fff80_0;
    %parti/u 32, 128, 32;
    %cmpi/ne 0, 0, 32;
    %jmp/0xz  T_9.2, 4;
    %load/vec4 v0x12fff80_0;
    %parti/u 32, 128, 32;
    %load/vec4 v0x12fff80_0;
    %parti/u 32, 96, 32;
    %vpi_call/w 3 198 "$display", "Hint: Output '%s' has %0d mismatches. First mismatch occurred at time %0d.", "out1", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %jmp T_9.3;
T_9.2 ;
    %vpi_call/w 3 199 "$display", "Hint: Output '%s' has no mismatches.", "out1" {0 0 0};
T_9.3 ;
    %load/vec4 v0x12fff80_0;
    %parti/u 32, 64, 32;
    %cmpi/ne 0, 0, 32;
    %jmp/0xz  T_9.4, 4;
    %load/vec4 v0x12fff80_0;
    %parti/u 32, 64, 32;
    %load/vec4 v0x12fff80_0;
    %parti/u 32, 32, 32;
    %vpi_call/w 3 200 "$display", "Hint: Output '%s' has %0d mismatches. First mismatch occurred at time %0d.", "out2", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %jmp T_9.5;
T_9.4 ;
    %vpi_call/w 3 201 "$display", "Hint: Output '%s' has no mismatches.", "out2" {0 0 0};
T_9.5 ;
    %load/vec4 v0x12fff80_0;
    %parti/u 32, 256, 32;
    %load/vec4 v0x12fff80_0;
    %parti/u 32, 0, 32;
    %vpi_call/w 3 203 "$display", "Hint: Total mismatched samples is %1d out of %1d samples\012", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %vpi_call/w 3 204 "$display", "Simulation finished at %0d ps", $time {0 0 0};
    %load/vec4 v0x12fff80_0;
    %parti/u 32, 256, 32;
    %load/vec4 v0x12fff80_0;
    %parti/u 32, 0, 32;
    %vpi_call/w 3 205 "$display", "Mismatches: %1d in %1d samples", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %end;
    .thread T_9, $final;
    .scope S_0x129ea70;
T_10 ;
    %wait E_0x1299dc0;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x12fff80_0;
    %pushi/vec4 0, 0, 32;
    %part/u 32;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x12fff80_0, 4, 32;
    %load/vec4 v0x13000c0_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_10.0, 8;
    %load/vec4 v0x12fff80_0;
    %parti/u 32, 256, 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_10.2, 4;
    %vpi_func 3 216 "$time" 64 {0 0 0};
    %cast2;
    %pad/u 32;
    %ix/load 4, 224, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x12fff80_0, 4, 32;
T_10.2 ;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x12fff80_0;
    %pushi/vec4 256, 0, 32;
    %part/u 32;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %ix/load 4, 256, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x12fff80_0, 4, 32;
T_10.0 ;
    %load/vec4 v0x12ffb20_0;
    %load/vec4 v0x12ffb20_0;
    %load/vec4 v0x12ffa80_0;
    %xor;
    %load/vec4 v0x12ffb20_0;
    %xor;
    %cmp/ne;
    %jmp/0xz  T_10.4, 6;
    %load/vec4 v0x12fff80_0;
    %parti/u 32, 192, 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_10.6, 4;
    %vpi_func 3 220 "$time" 64 {0 0 0};
    %cast2;
    %pad/u 32;
    %ix/load 4, 160, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x12fff80_0, 4, 32;
T_10.6 ;
    %load/vec4 v0x12fff80_0;
    %parti/u 32, 192, 32;
    %addi 1, 0, 32;
    %ix/load 4, 192, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x12fff80_0, 4, 32;
T_10.4 ;
    %load/vec4 v0x12ffcd0_0;
    %load/vec4 v0x12ffcd0_0;
    %load/vec4 v0x12ffc30_0;
    %xor;
    %load/vec4 v0x12ffcd0_0;
    %xor;
    %cmp/ne;
    %jmp/0xz  T_10.8, 6;
    %load/vec4 v0x12fff80_0;
    %parti/u 32, 128, 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_10.10, 4;
    %vpi_func 3 223 "$time" 64 {0 0 0};
    %cast2;
    %pad/u 32;
    %ix/load 4, 96, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x12fff80_0, 4, 32;
T_10.10 ;
    %load/vec4 v0x12fff80_0;
    %parti/u 32, 128, 32;
    %addi 1, 0, 32;
    %ix/load 4, 128, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x12fff80_0, 4, 32;
T_10.8 ;
    %load/vec4 v0x12ffe10_0;
    %load/vec4 v0x12ffe10_0;
    %load/vec4 v0x12ffd70_0;
    %xor;
    %load/vec4 v0x12ffe10_0;
    %xor;
    %cmp/ne;
    %jmp/0xz  T_10.12, 6;
    %load/vec4 v0x12fff80_0;
    %parti/u 32, 64, 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_10.14, 4;
    %vpi_func 3 226 "$time" 64 {0 0 0};
    %cast2;
    %pad/u 32;
    %ix/load 4, 32, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x12fff80_0, 4, 32;
T_10.14 ;
    %load/vec4 v0x12fff80_0;
    %parti/u 32, 64, 32;
    %addi 1, 0, 32;
    %ix/load 4, 64, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x12fff80_0, 4, 32;
T_10.12 ;
    %jmp T_10;
    .thread T_10;
# The file index is used to find the file name in the following table.
:file_names 5;
    "N/A";
    "<interactive>";
    "-";
    "/home/jmb9986/AutoChip/autochip_scripts/../verilogeval_prompts_tbs/ve_testbenches_machine/fsm_onehot/fsm_onehot_tb.sv";
    "/home/jmb9986/AutoChip/autochip_scripts/outputs/haiku/can55_depth0/machine/fsm_onehot/iter0/response47/top_module.sv";
