#! /usr/local/bin/vvp
:ivl_version "13.0 (devel)" "(s20221226-331-g77d7f0b8f)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision - 12;
:vpi_module "/usr/local/lib/ivl/system.vpi";
:vpi_module "/usr/local/lib/ivl/vhdl_sys.vpi";
:vpi_module "/usr/local/lib/ivl/vhdl_textio.vpi";
:vpi_module "/usr/local/lib/ivl/v2005_math.vpi";
:vpi_module "/usr/local/lib/ivl/va_math.vpi";
:vpi_module "/usr/local/lib/ivl/v2009.vpi";
S_0x1e7f230 .scope package, "$unit" "$unit" 2 1;
 .timescale 0 0;
S_0x1e940a0 .scope module, "tb" "tb" 3 122;
 .timescale -12 -12;
L_0x1e7f6c0 .functor NOT 1, L_0x1f09000, C4<0>, C4<0>, C4<0>;
L_0x1f08e80 .functor XOR 12, L_0x1f08d40, L_0x1f08de0, C4<000000000000>, C4<000000000000>;
L_0x1f08f90 .functor XOR 12, L_0x1f08e80, L_0x1f08ef0, C4<000000000000>, C4<000000000000>;
v0x1eff3b0_0 .net *"_ivl_10", 11 0, L_0x1f08ef0;  1 drivers
v0x1eff4b0_0 .net *"_ivl_12", 11 0, L_0x1f08f90;  1 drivers
v0x1eff590_0 .net *"_ivl_2", 11 0, L_0x1f08ca0;  1 drivers
v0x1eff650_0 .net *"_ivl_4", 11 0, L_0x1f08d40;  1 drivers
v0x1eff730_0 .net *"_ivl_6", 11 0, L_0x1f08de0;  1 drivers
v0x1eff860_0 .net *"_ivl_8", 11 0, L_0x1f08e80;  1 drivers
v0x1eff940_0 .var "clk", 0 0;
v0x1eff9e0_0 .net "in", 0 0, v0x1ef9b80_0;  1 drivers
v0x1effa80_0 .net "next_state_dut", 9 0, L_0x1f069f0;  1 drivers
v0x1effb20_0 .net "next_state_ref", 9 0, L_0x1f027b0;  1 drivers
v0x1effc30_0 .net "out1_dut", 0 0, L_0x1f08330;  1 drivers
v0x1effcd0_0 .net "out1_ref", 0 0, L_0x1e82510;  1 drivers
v0x1effd70_0 .net "out2_dut", 0 0, L_0x1f08b40;  1 drivers
v0x1effe10_0 .net "out2_ref", 0 0, L_0x1e833b0;  1 drivers
v0x1effee0_0 .net "state", 9 0, v0x1ef9eb0_0;  1 drivers
v0x1efff80_0 .var/2u "stats1", 287 0;
v0x1f00020_0 .var/2u "strobe", 0 0;
v0x1f000c0_0 .net "tb_match", 0 0, L_0x1f09000;  1 drivers
v0x1f00190_0 .net "tb_mismatch", 0 0, L_0x1e7f6c0;  1 drivers
v0x1f00230_0 .net "wavedrom_enable", 0 0, v0x1efa0f0_0;  1 drivers
v0x1f00300_0 .net "wavedrom_title", 511 0, v0x1efa1b0_0;  1 drivers
L_0x1f08ca0 .concat [ 1 1 10 0], L_0x1e833b0, L_0x1e82510, L_0x1f027b0;
L_0x1f08d40 .concat [ 1 1 10 0], L_0x1e833b0, L_0x1e82510, L_0x1f027b0;
L_0x1f08de0 .concat [ 1 1 10 0], L_0x1f08b40, L_0x1f08330, L_0x1f069f0;
L_0x1f08ef0 .concat [ 1 1 10 0], L_0x1e833b0, L_0x1e82510, L_0x1f027b0;
L_0x1f09000 .cmp/eeq 12, L_0x1f08ca0, L_0x1f08f90;
S_0x1e94230 .scope module, "good1" "reference_module" 3 171, 3 4 0, S_0x1e940a0;
 .timescale -12 -12;
    .port_info 0 /INPUT 1 "in";
    .port_info 1 /INPUT 10 "state";
    .port_info 2 /OUTPUT 10 "next_state";
    .port_info 3 /OUTPUT 1 "out1";
    .port_info 4 /OUTPUT 1 "out2";
L_0x1e82510 .functor OR 1, L_0x1f00450, L_0x1f004f0, C4<0>, C4<0>;
L_0x1e833b0 .functor OR 1, L_0x1f00680, L_0x1f00720, C4<0>, C4<0>;
L_0x1e83b00 .functor OR 1, L_0x1f00c00, L_0x1f00ca0, C4<0>, C4<0>;
L_0x1e80510 .functor OR 1, L_0x1e83b00, L_0x1f00e30, C4<0>, C4<0>;
L_0x1ea1bd0 .functor OR 1, L_0x1e80510, L_0x1f00fa0, C4<0>, C4<0>;
L_0x1ed03b0 .functor AND 1, L_0x1f008e0, L_0x1ea1bd0, C4<1>, C4<1>;
L_0x1f01380 .functor OR 1, L_0x1f011d0, L_0x1f01270, C4<0>, C4<0>;
L_0x1f01530 .functor OR 1, L_0x1f01380, L_0x1f01490, C4<0>, C4<0>;
L_0x1f01690 .functor AND 1, v0x1ef9b80_0, L_0x1f01530, C4<1>, C4<1>;
L_0x1f01310 .functor AND 1, v0x1ef9b80_0, L_0x1f01750, C4<1>, C4<1>;
L_0x1f019c0 .functor AND 1, v0x1ef9b80_0, L_0x1f01920, C4<1>, C4<1>;
L_0x1f01b60 .functor AND 1, v0x1ef9b80_0, L_0x1f01a30, C4<1>, C4<1>;
L_0x1f01d30 .functor AND 1, v0x1ef9b80_0, L_0x1f01c90, C4<1>, C4<1>;
L_0x1f01f60 .functor AND 1, v0x1ef9b80_0, L_0x1f01e20, C4<1>, C4<1>;
L_0x1f01c20 .functor OR 1, L_0x1f020d0, L_0x1f02170, C4<0>, C4<0>;
L_0x1f023c0 .functor AND 1, v0x1ef9b80_0, L_0x1f01c20, C4<1>, C4<1>;
L_0x1f02670 .functor AND 1, L_0x1f01ec0, L_0x1f02510, C4<1>, C4<1>;
L_0x1f02d30 .functor AND 1, L_0x1f02b20, L_0x1f02c90, C4<1>, C4<1>;
v0x1e826c0_0 .net *"_ivl_1", 0 0, L_0x1f00450;  1 drivers
v0x1e834c0_0 .net *"_ivl_100", 0 0, L_0x1f02b20;  1 drivers
v0x1e83560_0 .net *"_ivl_102", 0 0, L_0x1f02c90;  1 drivers
v0x1e83d70_0 .net *"_ivl_104", 0 0, L_0x1f02d30;  1 drivers
v0x1e83e10_0 .net *"_ivl_15", 0 0, L_0x1f008e0;  1 drivers
v0x1e80660_0 .net *"_ivl_17", 4 0, L_0x1f00a10;  1 drivers
v0x1e80700_0 .net *"_ivl_19", 0 0, L_0x1f00c00;  1 drivers
v0x1ef6680_0 .net *"_ivl_21", 0 0, L_0x1f00ca0;  1 drivers
v0x1ef6760_0 .net *"_ivl_22", 0 0, L_0x1e83b00;  1 drivers
v0x1ef6840_0 .net *"_ivl_25", 0 0, L_0x1f00e30;  1 drivers
v0x1ef6920_0 .net *"_ivl_26", 0 0, L_0x1e80510;  1 drivers
v0x1ef6a00_0 .net *"_ivl_29", 0 0, L_0x1f00fa0;  1 drivers
v0x1ef6ae0_0 .net *"_ivl_3", 0 0, L_0x1f004f0;  1 drivers
v0x1ef6bc0_0 .net *"_ivl_30", 0 0, L_0x1ea1bd0;  1 drivers
v0x1ef6ca0_0 .net *"_ivl_33", 0 0, L_0x1ed03b0;  1 drivers
v0x1ef6d60_0 .net *"_ivl_37", 0 0, L_0x1f011d0;  1 drivers
v0x1ef6e40_0 .net *"_ivl_39", 0 0, L_0x1f01270;  1 drivers
v0x1ef6f20_0 .net *"_ivl_40", 0 0, L_0x1f01380;  1 drivers
v0x1ef7000_0 .net *"_ivl_43", 0 0, L_0x1f01490;  1 drivers
v0x1ef70e0_0 .net *"_ivl_44", 0 0, L_0x1f01530;  1 drivers
v0x1ef71c0_0 .net *"_ivl_47", 0 0, L_0x1f01690;  1 drivers
v0x1ef7280_0 .net *"_ivl_51", 0 0, L_0x1f01750;  1 drivers
v0x1ef7360_0 .net *"_ivl_53", 0 0, L_0x1f01310;  1 drivers
v0x1ef7420_0 .net *"_ivl_57", 0 0, L_0x1f01920;  1 drivers
v0x1ef7500_0 .net *"_ivl_59", 0 0, L_0x1f019c0;  1 drivers
v0x1ef75c0_0 .net *"_ivl_63", 0 0, L_0x1f01a30;  1 drivers
v0x1ef76a0_0 .net *"_ivl_65", 0 0, L_0x1f01b60;  1 drivers
v0x1ef7760_0 .net *"_ivl_69", 0 0, L_0x1f01c90;  1 drivers
v0x1ef7840_0 .net *"_ivl_7", 0 0, L_0x1f00680;  1 drivers
v0x1ef7920_0 .net *"_ivl_71", 0 0, L_0x1f01d30;  1 drivers
v0x1ef79e0_0 .net *"_ivl_75", 0 0, L_0x1f01e20;  1 drivers
v0x1ef7ac0_0 .net *"_ivl_77", 0 0, L_0x1f01f60;  1 drivers
v0x1ef7b80_0 .net *"_ivl_81", 0 0, L_0x1f020d0;  1 drivers
v0x1ef7e70_0 .net *"_ivl_83", 0 0, L_0x1f02170;  1 drivers
v0x1ef7f50_0 .net *"_ivl_84", 0 0, L_0x1f01c20;  1 drivers
v0x1ef8030_0 .net *"_ivl_87", 0 0, L_0x1f023c0;  1 drivers
v0x1ef80f0_0 .net *"_ivl_9", 0 0, L_0x1f00720;  1 drivers
v0x1ef81d0_0 .net *"_ivl_91", 0 0, L_0x1f01ec0;  1 drivers
v0x1ef8290_0 .net *"_ivl_93", 0 0, L_0x1f02510;  1 drivers
v0x1ef8370_0 .net *"_ivl_95", 0 0, L_0x1f02670;  1 drivers
v0x1ef8430_0 .net "in", 0 0, v0x1ef9b80_0;  alias, 1 drivers
v0x1ef84f0_0 .net "next_state", 9 0, L_0x1f027b0;  alias, 1 drivers
v0x1ef85d0_0 .net "out1", 0 0, L_0x1e82510;  alias, 1 drivers
v0x1ef8690_0 .net "out2", 0 0, L_0x1e833b0;  alias, 1 drivers
v0x1ef8750_0 .net "state", 9 0, v0x1ef9eb0_0;  alias, 1 drivers
L_0x1f00450 .part v0x1ef9eb0_0, 8, 1;
L_0x1f004f0 .part v0x1ef9eb0_0, 9, 1;
L_0x1f00680 .part v0x1ef9eb0_0, 7, 1;
L_0x1f00720 .part v0x1ef9eb0_0, 9, 1;
L_0x1f008e0 .reduce/nor v0x1ef9b80_0;
L_0x1f00a10 .part v0x1ef9eb0_0, 0, 5;
L_0x1f00c00 .reduce/or L_0x1f00a10;
L_0x1f00ca0 .part v0x1ef9eb0_0, 7, 1;
L_0x1f00e30 .part v0x1ef9eb0_0, 8, 1;
L_0x1f00fa0 .part v0x1ef9eb0_0, 9, 1;
L_0x1f011d0 .part v0x1ef9eb0_0, 0, 1;
L_0x1f01270 .part v0x1ef9eb0_0, 8, 1;
L_0x1f01490 .part v0x1ef9eb0_0, 9, 1;
L_0x1f01750 .part v0x1ef9eb0_0, 1, 1;
L_0x1f01920 .part v0x1ef9eb0_0, 2, 1;
L_0x1f01a30 .part v0x1ef9eb0_0, 3, 1;
L_0x1f01c90 .part v0x1ef9eb0_0, 4, 1;
L_0x1f01e20 .part v0x1ef9eb0_0, 5, 1;
L_0x1f020d0 .part v0x1ef9eb0_0, 6, 1;
L_0x1f02170 .part v0x1ef9eb0_0, 7, 1;
L_0x1f01ec0 .reduce/nor v0x1ef9b80_0;
L_0x1f02510 .part v0x1ef9eb0_0, 5, 1;
LS_0x1f027b0_0_0 .concat8 [ 1 1 1 1], L_0x1ed03b0, L_0x1f01690, L_0x1f01310, L_0x1f019c0;
LS_0x1f027b0_0_4 .concat8 [ 1 1 1 1], L_0x1f01b60, L_0x1f01d30, L_0x1f01f60, L_0x1f023c0;
LS_0x1f027b0_0_8 .concat8 [ 1 1 0 0], L_0x1f02670, L_0x1f02d30;
L_0x1f027b0 .concat8 [ 4 4 2 0], LS_0x1f027b0_0_0, LS_0x1f027b0_0_4, LS_0x1f027b0_0_8;
L_0x1f02b20 .reduce/nor v0x1ef9b80_0;
L_0x1f02c90 .part v0x1ef9eb0_0, 6, 1;
S_0x1ef88d0 .scope module, "stim1" "stimulus_gen" 3 166, 3 29 0, S_0x1e940a0;
 .timescale -12 -12;
    .port_info 0 /INPUT 1 "clk";
    .port_info 1 /OUTPUT 1 "in";
    .port_info 2 /OUTPUT 10 "state";
    .port_info 3 /INPUT 1 "tb_match";
    .port_info 4 /INPUT 10 "next_state_ref";
    .port_info 5 /INPUT 10 "next_state_dut";
    .port_info 6 /OUTPUT 512 "wavedrom_title";
    .port_info 7 /OUTPUT 1 "wavedrom_enable";
v0x1ef9900_0 .net "clk", 0 0, v0x1eff940_0;  1 drivers
v0x1ef99e0_0 .var/2s "errored1", 31 0;
v0x1ef9ac0_0 .var/2s "errored2", 31 0;
v0x1ef9b80_0 .var "in", 0 0;
v0x1ef9c20_0 .net "next_state_dut", 9 0, L_0x1f069f0;  alias, 1 drivers
v0x1ef9d30_0 .net "next_state_ref", 9 0, L_0x1f027b0;  alias, 1 drivers
v0x1ef9df0_0 .var/2s "onehot_error", 31 0;
v0x1ef9eb0_0 .var "state", 9 0;
v0x1ef9f70_0 .var "state_error", 9 0;
v0x1efa030_0 .net "tb_match", 0 0, L_0x1f09000;  alias, 1 drivers
v0x1efa0f0_0 .var "wavedrom_enable", 0 0;
v0x1efa1b0_0 .var "wavedrom_title", 511 0;
E_0x1e8fb20 .event negedge, v0x1ef9900_0;
E_0x1e8fd70 .event posedge, v0x1ef9900_0;
S_0x1ef8b10 .scope begin, "$ivl_for_loop0" "$ivl_for_loop0" 3 69, 3 69 0, S_0x1ef88d0;
 .timescale -12 -12;
v0x1ef8d50_0 .var/2s "i", 31 0;
E_0x1e8f3f0/0 .event negedge, v0x1ef9900_0;
E_0x1e8f3f0/1 .event posedge, v0x1ef9900_0;
E_0x1e8f3f0 .event/or E_0x1e8f3f0/0, E_0x1e8f3f0/1;
S_0x1ef8e50 .scope begin, "$ivl_for_loop1" "$ivl_for_loop1" 3 74, 3 74 0, S_0x1ef88d0;
 .timescale -12 -12;
v0x1ef9050_0 .var/2s "i", 31 0;
S_0x1ef9130 .scope begin, "$ivl_for_loop2" "$ivl_for_loop2" 3 114, 3 114 0, S_0x1ef88d0;
 .timescale -12 -12;
v0x1ef9310_0 .var/2s "i", 31 0;
S_0x1ef93f0 .scope task, "wavedrom_start" "wavedrom_start" 3 45, 3 45 0, S_0x1ef88d0;
 .timescale -12 -12;
v0x1ef95d0_0 .var "title", 511 0;
TD_tb.stim1.wavedrom_start ;
    %end;
S_0x1ef96d0 .scope task, "wavedrom_stop" "wavedrom_stop" 3 48, 3 48 0, S_0x1ef88d0;
 .timescale -12 -12;
TD_tb.stim1.wavedrom_stop ;
    %delay 1, 0;
    %end;
S_0x1efa390 .scope module, "top_module1" "top_module" 3 178, 4 1 0, S_0x1e940a0;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "in";
    .port_info 1 /INPUT 10 "state";
    .port_info 2 /OUTPUT 10 "next_state";
    .port_info 3 /OUTPUT 1 "out1";
    .port_info 4 /OUTPUT 1 "out2";
L_0x1f02fd0 .functor NOT 1, v0x1ef9b80_0, C4<0>, C4<0>, C4<0>;
L_0x1f03040 .functor AND 1, L_0x1f02f30, L_0x1f02fd0, C4<1>, C4<1>;
L_0x1f031f0 .functor NOT 1, v0x1ef9b80_0, C4<0>, C4<0>, C4<0>;
L_0x1f03260 .functor AND 1, L_0x1f03150, L_0x1f031f0, C4<1>, C4<1>;
L_0x1f03370 .functor OR 1, L_0x1f03040, L_0x1f03260, C4<0>, C4<0>;
L_0x1f03520 .functor NOT 1, v0x1ef9b80_0, C4<0>, C4<0>, C4<0>;
L_0x1f037e0 .functor AND 1, L_0x1f03480, L_0x1f03520, C4<1>, C4<1>;
L_0x1f038f0 .functor OR 1, L_0x1f03370, L_0x1f037e0, C4<0>, C4<0>;
L_0x1f03af0 .functor NOT 1, v0x1ef9b80_0, C4<0>, C4<0>, C4<0>;
L_0x1f03b60 .functor AND 1, L_0x1f03a50, L_0x1f03af0, C4<1>, C4<1>;
L_0x1f03cd0 .functor OR 1, L_0x1f038f0, L_0x1f03b60, C4<0>, C4<0>;
L_0x1f03e30 .functor NOT 1, v0x1ef9b80_0, C4<0>, C4<0>, C4<0>;
L_0x1f03f10 .functor AND 1, L_0x1f03d90, L_0x1f03e30, C4<1>, C4<1>;
L_0x1f04020 .functor OR 1, L_0x1f03cd0, L_0x1f03f10, C4<0>, C4<0>;
L_0x1f03ea0 .functor AND 1, L_0x1f041b0, v0x1ef9b80_0, C4<1>, C4<1>;
L_0x1f042e0 .functor OR 1, L_0x1f04020, L_0x1f03ea0, C4<0>, C4<0>;
L_0x1f04520 .functor NOT 1, v0x1ef9b80_0, C4<0>, C4<0>, C4<0>;
L_0x1f04590 .functor AND 1, L_0x1f04480, L_0x1f04520, C4<1>, C4<1>;
L_0x1f04740 .functor OR 1, L_0x1f042e0, L_0x1f04590, C4<0>, C4<0>;
L_0x1f04940 .functor NOT 1, v0x1ef9b80_0, C4<0>, C4<0>, C4<0>;
L_0x1f04a60 .functor AND 1, L_0x1f04850, L_0x1f04940, C4<1>, C4<1>;
L_0x1f04b70 .functor OR 1, L_0x1f04740, L_0x1f04a60, C4<0>, C4<0>;
L_0x1f05150 .functor AND 1, L_0x1f046a0, v0x1ef9b80_0, C4<1>, C4<1>;
L_0x1f05310 .functor AND 1, L_0x1f05210, v0x1ef9b80_0, C4<1>, C4<1>;
L_0x1f05450 .functor OR 1, L_0x1f05150, L_0x1f05310, C4<0>, C4<0>;
L_0x1f05600 .functor AND 1, L_0x1f05560, v0x1ef9b80_0, C4<1>, C4<1>;
L_0x1f058b0 .functor AND 1, L_0x1f057a0, v0x1ef9b80_0, C4<1>, C4<1>;
L_0x1f05a10 .functor AND 1, L_0x1f05970, v0x1ef9b80_0, C4<1>, C4<1>;
L_0x1f05840 .functor AND 1, L_0x1f05bc0, v0x1ef9b80_0, C4<1>, C4<1>;
L_0x1f05dd0 .functor NOT 1, v0x1ef9b80_0, C4<0>, C4<0>, C4<0>;
L_0x1f05f40 .functor AND 1, L_0x1f05d30, L_0x1f05dd0, C4<1>, C4<1>;
L_0x1f06050 .functor OR 1, L_0x1f05840, L_0x1f05f40, C4<0>, C4<0>;
L_0x1f063a0 .functor AND 1, L_0x1f06270, v0x1ef9b80_0, C4<1>, C4<1>;
L_0x1f06500 .functor AND 1, L_0x1f06460, v0x1ef9b80_0, C4<1>, C4<1>;
L_0x1f066e0 .functor OR 1, L_0x1f063a0, L_0x1f06500, C4<0>, C4<0>;
L_0x1f06930 .functor AND 1, L_0x1f067f0, v0x1ef9b80_0, C4<1>, C4<1>;
L_0x1f06bc0 .functor NOT 1, v0x1ef9b80_0, C4<0>, C4<0>, C4<0>;
L_0x1f07040 .functor AND 1, L_0x1f06b20, L_0x1f06bc0, C4<1>, C4<1>;
L_0x1f075c0 .functor NOT 1, v0x1ef9b80_0, C4<0>, C4<0>, C4<0>;
L_0x1f07630 .functor AND 1, L_0x1f06890, L_0x1f075c0, C4<1>, C4<1>;
L_0x1f07a40 .functor NOT 1, v0x1ef9b80_0, C4<0>, C4<0>, C4<0>;
L_0x1f07ab0 .functor AND 1, L_0x1f078e0, L_0x1f07a40, C4<1>, C4<1>;
L_0x1f07dc0 .functor AND 1, L_0x1f07d20, v0x1ef9b80_0, C4<1>, C4<1>;
L_0x1f07e80 .functor OR 1, L_0x1f07ab0, L_0x1f07dc0, C4<0>, C4<0>;
L_0x1f08270 .functor AND 1, L_0x1f08100, v0x1ef9b80_0, C4<1>, C4<1>;
L_0x1f08330 .functor OR 1, L_0x1f07e80, L_0x1f08270, C4<0>, C4<0>;
L_0x1f086b0 .functor AND 1, L_0x1f08610, v0x1ef9b80_0, C4<1>, C4<1>;
L_0x1f088f0 .functor AND 1, L_0x1f08770, v0x1ef9b80_0, C4<1>, C4<1>;
L_0x1f08b40 .functor OR 1, L_0x1f086b0, L_0x1f088f0, C4<0>, C4<0>;
v0x1efa600_0 .net *"_ivl_10", 0 0, L_0x1f031f0;  1 drivers
v0x1efa6e0_0 .net *"_ivl_100", 0 0, L_0x1f05dd0;  1 drivers
v0x1efa7c0_0 .net *"_ivl_102", 0 0, L_0x1f05f40;  1 drivers
v0x1efa8b0_0 .net *"_ivl_104", 0 0, L_0x1f06050;  1 drivers
v0x1efa990_0 .net *"_ivl_109", 0 0, L_0x1f06270;  1 drivers
v0x1efaac0_0 .net *"_ivl_110", 0 0, L_0x1f063a0;  1 drivers
v0x1efaba0_0 .net *"_ivl_113", 0 0, L_0x1f06460;  1 drivers
v0x1efac80_0 .net *"_ivl_114", 0 0, L_0x1f06500;  1 drivers
v0x1efad60_0 .net *"_ivl_116", 0 0, L_0x1f066e0;  1 drivers
v0x1efaed0_0 .net *"_ivl_12", 0 0, L_0x1f03260;  1 drivers
v0x1efafb0_0 .net *"_ivl_121", 0 0, L_0x1f067f0;  1 drivers
v0x1efb090_0 .net *"_ivl_122", 0 0, L_0x1f06930;  1 drivers
v0x1efb170_0 .net *"_ivl_127", 0 0, L_0x1f06b20;  1 drivers
v0x1efb250_0 .net *"_ivl_128", 0 0, L_0x1f06bc0;  1 drivers
v0x1efb330_0 .net *"_ivl_130", 0 0, L_0x1f07040;  1 drivers
v0x1efb410_0 .net *"_ivl_136", 0 0, L_0x1f06890;  1 drivers
v0x1efb4f0_0 .net *"_ivl_137", 0 0, L_0x1f075c0;  1 drivers
v0x1efb6e0_0 .net *"_ivl_139", 0 0, L_0x1f07630;  1 drivers
v0x1efb7c0_0 .net *"_ivl_14", 0 0, L_0x1f03370;  1 drivers
v0x1efb8a0_0 .net *"_ivl_142", 0 0, L_0x1f078e0;  1 drivers
v0x1efb980_0 .net *"_ivl_143", 0 0, L_0x1f07a40;  1 drivers
v0x1efba60_0 .net *"_ivl_145", 0 0, L_0x1f07ab0;  1 drivers
v0x1efbb40_0 .net *"_ivl_148", 0 0, L_0x1f07d20;  1 drivers
v0x1efbc20_0 .net *"_ivl_149", 0 0, L_0x1f07dc0;  1 drivers
v0x1efbd00_0 .net *"_ivl_151", 0 0, L_0x1f07e80;  1 drivers
v0x1efbde0_0 .net *"_ivl_154", 0 0, L_0x1f08100;  1 drivers
v0x1efbec0_0 .net *"_ivl_155", 0 0, L_0x1f08270;  1 drivers
v0x1efbfa0_0 .net *"_ivl_160", 0 0, L_0x1f08610;  1 drivers
v0x1efc080_0 .net *"_ivl_161", 0 0, L_0x1f086b0;  1 drivers
v0x1efc160_0 .net *"_ivl_164", 0 0, L_0x1f08770;  1 drivers
v0x1efc240_0 .net *"_ivl_165", 0 0, L_0x1f088f0;  1 drivers
v0x1efc320_0 .net *"_ivl_17", 0 0, L_0x1f03480;  1 drivers
v0x1efc400_0 .net *"_ivl_18", 0 0, L_0x1f03520;  1 drivers
v0x1efc6f0_0 .net *"_ivl_20", 0 0, L_0x1f037e0;  1 drivers
v0x1efc7d0_0 .net *"_ivl_22", 0 0, L_0x1f038f0;  1 drivers
v0x1efc8b0_0 .net *"_ivl_25", 0 0, L_0x1f03a50;  1 drivers
v0x1efc990_0 .net *"_ivl_26", 0 0, L_0x1f03af0;  1 drivers
v0x1efca70_0 .net *"_ivl_28", 0 0, L_0x1f03b60;  1 drivers
v0x1efcb50_0 .net *"_ivl_3", 0 0, L_0x1f02f30;  1 drivers
v0x1efcc30_0 .net *"_ivl_30", 0 0, L_0x1f03cd0;  1 drivers
v0x1efcd10_0 .net *"_ivl_33", 0 0, L_0x1f03d90;  1 drivers
v0x1efcdf0_0 .net *"_ivl_34", 0 0, L_0x1f03e30;  1 drivers
v0x1efced0_0 .net *"_ivl_36", 0 0, L_0x1f03f10;  1 drivers
v0x1efcfb0_0 .net *"_ivl_38", 0 0, L_0x1f04020;  1 drivers
v0x1efd090_0 .net *"_ivl_4", 0 0, L_0x1f02fd0;  1 drivers
v0x1efd170_0 .net *"_ivl_41", 0 0, L_0x1f041b0;  1 drivers
v0x1efd250_0 .net *"_ivl_42", 0 0, L_0x1f03ea0;  1 drivers
v0x1efd330_0 .net *"_ivl_44", 0 0, L_0x1f042e0;  1 drivers
v0x1efd410_0 .net *"_ivl_47", 0 0, L_0x1f04480;  1 drivers
v0x1efd4f0_0 .net *"_ivl_48", 0 0, L_0x1f04520;  1 drivers
v0x1efd5d0_0 .net *"_ivl_50", 0 0, L_0x1f04590;  1 drivers
v0x1efd6b0_0 .net *"_ivl_52", 0 0, L_0x1f04740;  1 drivers
v0x1efd790_0 .net *"_ivl_55", 0 0, L_0x1f04850;  1 drivers
v0x1efd870_0 .net *"_ivl_56", 0 0, L_0x1f04940;  1 drivers
v0x1efd950_0 .net *"_ivl_58", 0 0, L_0x1f04a60;  1 drivers
v0x1efda30_0 .net *"_ivl_6", 0 0, L_0x1f03040;  1 drivers
v0x1efdb10_0 .net *"_ivl_60", 0 0, L_0x1f04b70;  1 drivers
v0x1efdbf0_0 .net *"_ivl_65", 0 0, L_0x1f046a0;  1 drivers
v0x1efdcd0_0 .net *"_ivl_66", 0 0, L_0x1f05150;  1 drivers
v0x1efddb0_0 .net *"_ivl_69", 0 0, L_0x1f05210;  1 drivers
v0x1efde90_0 .net *"_ivl_70", 0 0, L_0x1f05310;  1 drivers
v0x1efdf70_0 .net *"_ivl_72", 0 0, L_0x1f05450;  1 drivers
v0x1efe050_0 .net *"_ivl_77", 0 0, L_0x1f05560;  1 drivers
v0x1efe130_0 .net *"_ivl_78", 0 0, L_0x1f05600;  1 drivers
v0x1efe210_0 .net *"_ivl_83", 0 0, L_0x1f057a0;  1 drivers
v0x1efe700_0 .net *"_ivl_84", 0 0, L_0x1f058b0;  1 drivers
v0x1efe7e0_0 .net *"_ivl_89", 0 0, L_0x1f05970;  1 drivers
v0x1efe8c0_0 .net *"_ivl_9", 0 0, L_0x1f03150;  1 drivers
v0x1efe9a0_0 .net *"_ivl_90", 0 0, L_0x1f05a10;  1 drivers
v0x1efea80_0 .net *"_ivl_95", 0 0, L_0x1f05bc0;  1 drivers
v0x1efeb60_0 .net *"_ivl_96", 0 0, L_0x1f05840;  1 drivers
v0x1efec40_0 .net *"_ivl_99", 0 0, L_0x1f05d30;  1 drivers
v0x1efed20_0 .net "in", 0 0, v0x1ef9b80_0;  alias, 1 drivers
v0x1efedc0_0 .net "next_state", 9 0, L_0x1f069f0;  alias, 1 drivers
v0x1efee80_0 .net "out1", 0 0, L_0x1f08330;  alias, 1 drivers
v0x1efef20_0 .net "out2", 0 0, L_0x1f08b40;  alias, 1 drivers
v0x1efefe0_0 .net "state", 9 0, v0x1ef9eb0_0;  alias, 1 drivers
L_0x1f02f30 .part v0x1ef9eb0_0, 0, 1;
L_0x1f03150 .part v0x1ef9eb0_0, 1, 1;
L_0x1f03480 .part v0x1ef9eb0_0, 2, 1;
L_0x1f03a50 .part v0x1ef9eb0_0, 3, 1;
L_0x1f03d90 .part v0x1ef9eb0_0, 4, 1;
L_0x1f041b0 .part v0x1ef9eb0_0, 7, 1;
L_0x1f04480 .part v0x1ef9eb0_0, 8, 1;
L_0x1f04850 .part v0x1ef9eb0_0, 9, 1;
L_0x1f046a0 .part v0x1ef9eb0_0, 0, 1;
L_0x1f05210 .part v0x1ef9eb0_0, 8, 1;
L_0x1f05560 .part v0x1ef9eb0_0, 1, 1;
L_0x1f057a0 .part v0x1ef9eb0_0, 2, 1;
L_0x1f05970 .part v0x1ef9eb0_0, 3, 1;
L_0x1f05bc0 .part v0x1ef9eb0_0, 4, 1;
L_0x1f05d30 .part v0x1ef9eb0_0, 6, 1;
L_0x1f06270 .part v0x1ef9eb0_0, 5, 1;
L_0x1f06460 .part v0x1ef9eb0_0, 6, 1;
L_0x1f067f0 .part v0x1ef9eb0_0, 6, 1;
L_0x1f06b20 .part v0x1ef9eb0_0, 5, 1;
LS_0x1f069f0_0_0 .concat8 [ 1 1 1 1], L_0x1f04b70, L_0x1f05450, L_0x1f05600, L_0x1f058b0;
LS_0x1f069f0_0_4 .concat8 [ 1 1 1 1], L_0x1f05a10, L_0x1f06050, L_0x1f066e0, L_0x1f06930;
LS_0x1f069f0_0_8 .concat8 [ 1 1 0 0], L_0x1f07040, L_0x1f07630;
L_0x1f069f0 .concat8 [ 4 4 2 0], LS_0x1f069f0_0_0, LS_0x1f069f0_0_4, LS_0x1f069f0_0_8;
L_0x1f06890 .part v0x1ef9eb0_0, 6, 1;
L_0x1f078e0 .part v0x1ef9eb0_0, 7, 1;
L_0x1f07d20 .part v0x1ef9eb0_0, 8, 1;
L_0x1f08100 .part v0x1ef9eb0_0, 9, 1;
L_0x1f08610 .part v0x1ef9eb0_0, 7, 1;
L_0x1f08770 .part v0x1ef9eb0_0, 9, 1;
S_0x1eff190 .scope task, "wait_for_end_of_timestep" "wait_for_end_of_timestep" 3 187, 3 187 0, S_0x1e940a0;
 .timescale -12 -12;
E_0x1e75a20 .event anyedge, v0x1f00020_0;
TD_tb.wait_for_end_of_timestep ;
    %pushi/vec4 5, 0, 32;
T_2.0 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_2.1, 5;
    %jmp/1 T_2.1, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %load/vec4 v0x1f00020_0;
    %nor/r;
    %assign/vec4 v0x1f00020_0, 0;
    %wait E_0x1e75a20;
    %jmp T_2.0;
T_2.1 ;
    %pop/vec4 1;
    %end;
    .scope S_0x1ef88d0;
T_3 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x1ef99e0_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x1ef9ac0_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x1ef9df0_0, 0, 32;
    %pushi/vec4 0, 0, 10;
    %store/vec4 v0x1ef9f70_0, 0, 10;
    %end;
    .thread T_3, $init;
    .scope S_0x1ef88d0;
T_4 ;
    %pushi/vec4 2, 0, 32;
T_4.0 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_4.1, 5;
    %jmp/1 T_4.1, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_0x1e8fd70;
    %jmp T_4.0;
T_4.1 ;
    %pop/vec4 1;
T_4.2 ;
    %wait E_0x1e8f3f0;
    %load/vec4 v0x1ef9f70_0;
    %load/vec4 v0x1ef9d30_0;
    %load/vec4 v0x1ef9c20_0;
    %xor;
    %or;
    %assign/vec4 v0x1ef9f70_0, 0;
    %jmp T_4.2;
T_4.3 ;
    %end;
    .thread T_4;
    .scope S_0x1ef88d0;
T_5 ;
    %pushi/vec4 0, 0, 10;
    %assign/vec4 v0x1ef9eb0_0, 0;
    %wait E_0x1e8fb20;
    %fork t_1, S_0x1ef8b10;
    %jmp t_0;
    .scope S_0x1ef8b10;
t_1 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x1ef8d50_0, 0, 32;
T_5.0 ; Top of for-loop 
    %load/vec4 v0x1ef8d50_0;
    %cmpi/s 10, 0, 32;
    %jmp/0xz T_5.1, 5;
    %wait E_0x1e8f3f0;
    %pushi/vec4 1, 0, 10;
    %load/vec4 v0x1ef8d50_0;
    %ix/vec4 4;
    %shiftl 4;
    %assign/vec4 v0x1ef9eb0_0, 0;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0x1ef9b80_0, 0;
T_5.2 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x1ef8d50_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x1ef8d50_0, 0, 32;
    %jmp T_5.0;
T_5.1 ; for-loop exit label
    %end;
    .scope S_0x1ef88d0;
t_0 %join;
    %fork t_3, S_0x1ef8e50;
    %jmp t_2;
    .scope S_0x1ef8e50;
t_3 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x1ef9050_0, 0, 32;
T_5.3 ; Top of for-loop 
    %load/vec4 v0x1ef9050_0;
    %cmpi/s 10, 0, 32;
    %jmp/0xz T_5.4, 5;
    %wait E_0x1e8f3f0;
    %pushi/vec4 1, 0, 10;
    %load/vec4 v0x1ef9050_0;
    %ix/vec4 4;
    %shiftl 4;
    %assign/vec4 v0x1ef9eb0_0, 0;
    %pushi/vec4 1, 0, 1;
    %assign/vec4 v0x1ef9b80_0, 0;
T_5.5 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x1ef9050_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x1ef9050_0, 0, 32;
    %jmp T_5.3;
T_5.4 ; for-loop exit label
    %end;
    .scope S_0x1ef88d0;
t_2 %join;
    %wait E_0x1e8fb20;
    %fork TD_tb.stim1.wavedrom_stop, S_0x1ef96d0;
    %join;
    %pushi/vec4 200, 0, 32;
T_5.6 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_5.7, 5;
    %jmp/1 T_5.7, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_0x1e8f3f0;
    %pushi/vec4 1, 0, 10;
    %vpi_func 3 83 "$random" 32 {0 0 0};
    %pushi/vec4 10, 0, 32;
    %mod;
    %ix/vec4 4;
    %shiftl 4;
    %assign/vec4 v0x1ef9eb0_0, 0;
    %vpi_func 3 84 "$random" 32 {0 0 0};
    %pad/s 1;
    %assign/vec4 v0x1ef9b80_0, 0;
    %load/vec4 v0x1efa030_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.8, 8;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x1ef9df0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x1ef9df0_0, 0, 32;
T_5.8 ;
    %jmp T_5.6;
T_5.7 ;
    %pop/vec4 1;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x1ef99e0_0, 0, 32;
    %pushi/vec4 400, 0, 32;
T_5.10 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_5.11, 5;
    %jmp/1 T_5.11, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_0x1e8f3f0;
    %pushi/vec4 1, 0, 10;
    %vpi_func 3 91 "$random" 32 {0 0 0};
    %pushi/vec4 10, 0, 32;
    %mod;
    %ix/vec4 4;
    %shiftl 4;
    %pushi/vec4 1, 0, 10;
    %vpi_func 3 91 "$random" 32 {0 0 0};
    %pushi/vec4 10, 0, 32;
    %mod;
    %ix/vec4 4;
    %shiftl 4;
    %or;
    %assign/vec4 v0x1ef9eb0_0, 0;
    %vpi_func 3 92 "$random" 32 {0 0 0};
    %pad/s 1;
    %assign/vec4 v0x1ef9b80_0, 0;
    %load/vec4 v0x1efa030_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.12, 8;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x1ef99e0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x1ef99e0_0, 0, 32;
T_5.12 ;
    %jmp T_5.10;
T_5.11 ;
    %pop/vec4 1;
    %load/vec4 v0x1ef9df0_0;
    %nor/r;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_5.16, 9;
    %load/vec4 v0x1ef99e0_0;
    %pushi/vec4 0, 0, 32;
    %cmp/ne;
    %flag_get/vec4 4;
    %and;
T_5.16;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.14, 8;
    %vpi_call/w 3 98 "$display", "Hint: Your circuit passed when given only one-hot inputs, but not with two-hot inputs." {0 0 0};
T_5.14 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x1ef9ac0_0, 0, 32;
    %pushi/vec4 800, 0, 32;
T_5.17 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_5.18, 5;
    %jmp/1 T_5.18, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_0x1e8f3f0;
    %vpi_func 3 103 "$random" 32 {0 0 0};
    %pad/s 10;
    %assign/vec4 v0x1ef9eb0_0, 0;
    %vpi_func 3 104 "$random" 32 {0 0 0};
    %pad/s 1;
    %assign/vec4 v0x1ef9b80_0, 0;
    %load/vec4 v0x1efa030_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.19, 8;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x1ef9ac0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x1ef9ac0_0, 0, 32;
T_5.19 ;
    %jmp T_5.17;
T_5.18 ;
    %pop/vec4 1;
    %load/vec4 v0x1ef9df0_0;
    %nor/r;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_5.23, 9;
    %load/vec4 v0x1ef9ac0_0;
    %pushi/vec4 0, 0, 32;
    %cmp/ne;
    %flag_get/vec4 4;
    %and;
T_5.23;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.21, 8;
    %vpi_call/w 3 109 "$display", "Hint: Your circuit passed when given only one-hot inputs, but not with random inputs." {0 0 0};
T_5.21 ;
    %load/vec4 v0x1ef9df0_0;
    %nor/r;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_5.26, 9;
    %load/vec4 v0x1ef99e0_0;
    %cmpi/ne 0, 0, 32;
    %flag_get/vec4 4;
    %jmp/1 T_5.27, 4;
    %load/vec4 v0x1ef9ac0_0;
    %pushi/vec4 0, 0, 32;
    %cmp/ne;
    %flag_get/vec4 4;
    %or;
T_5.27;
    %and;
T_5.26;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.24, 8;
    %vpi_call/w 3 112 "$display", "Hint: Are you doing something more complicated than deriving state transition equations by inspection?\012" {0 0 0};
T_5.24 ;
    %fork t_5, S_0x1ef9130;
    %jmp t_4;
    .scope S_0x1ef9130;
t_5 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x1ef9310_0, 0, 32;
T_5.28 ; Top of for-loop 
    %load/vec4 v0x1ef9310_0;
    %cmpi/u 10, 0, 32;
    %jmp/0xz T_5.29, 5;
    %load/vec4 v0x1ef9f70_0;
    %load/vec4 v0x1ef9310_0;
    %part/s 1;
    %cmpi/e 0, 0, 1;
    %flag_mov 8, 6;
    %jmp/0 T_5.31, 8;
    %pushi/vec4 25455, 0, 32; draw_string_vec4
    %pushi/vec4 1920099683, 0, 32; draw_string_vec4
    %concat/vec4; draw_string_vec4
    %pushi/vec4 116, 0, 8; draw_string_vec4
    %concat/vec4; draw_string_vec4
    %jmp/1 T_5.32, 8;
T_5.31 ; End of true expr.
    %pushi/vec4 1768842095, 0, 32; draw_string_vec4
    %pushi/vec4 1920099683, 0, 32; draw_string_vec4
    %concat/vec4; draw_string_vec4
    %pushi/vec4 116, 0, 8; draw_string_vec4
    %concat/vec4; draw_string_vec4
    %jmp/0 T_5.32, 8;
 ; End of false expr.
    %blend;
T_5.32;
    %vpi_call/w 3 115 "$display", "Hint: next_state[%0d] is %s.", v0x1ef9310_0, S<0,vec4,u72> {1 0 0};
T_5.30 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x1ef9310_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x1ef9310_0, 0, 32;
    %jmp T_5.28;
T_5.29 ; for-loop exit label
    %end;
    .scope S_0x1ef88d0;
t_4 %join;
    %delay 1, 0;
    %vpi_call/w 3 117 "$finish" {0 0 0};
    %end;
    .thread T_5;
    .scope S_0x1e940a0;
T_6 ;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x1eff940_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x1f00020_0, 0, 1;
    %end;
    .thread T_6, $init;
    .scope S_0x1e940a0;
T_7 ;
T_7.0 ;
    %delay 5, 0;
    %load/vec4 v0x1eff940_0;
    %inv;
    %store/vec4 v0x1eff940_0, 0, 1;
    %jmp T_7.0;
T_7.1 ;
    %end;
    .thread T_7;
    .scope S_0x1e940a0;
T_8 ;
    %vpi_call/w 3 158 "$dumpfile", "wave.vcd" {0 0 0};
    %vpi_call/w 3 159 "$dumpvars", 32'sb00000000000000000000000000000001, v0x1ef9900_0, v0x1f00190_0, v0x1eff9e0_0, v0x1effee0_0, v0x1effb20_0, v0x1effa80_0, v0x1effcd0_0, v0x1effc30_0, v0x1effe10_0, v0x1effd70_0 {0 0 0};
    %end;
    .thread T_8;
    .scope S_0x1e940a0;
T_9 ;
    %load/vec4 v0x1efff80_0;
    %parti/u 32, 192, 32;
    %cmpi/ne 0, 0, 32;
    %jmp/0xz  T_9.0, 4;
    %load/vec4 v0x1efff80_0;
    %parti/u 32, 192, 32;
    %load/vec4 v0x1efff80_0;
    %parti/u 32, 160, 32;
    %vpi_call/w 3 196 "$display", "Hint: Output '%s' has %0d mismatches. First mismatch occurred at time %0d.", "next_state", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %jmp T_9.1;
T_9.0 ;
    %vpi_call/w 3 197 "$display", "Hint: Output '%s' has no mismatches.", "next_state" {0 0 0};
T_9.1 ;
    %load/vec4 v0x1efff80_0;
    %parti/u 32, 128, 32;
    %cmpi/ne 0, 0, 32;
    %jmp/0xz  T_9.2, 4;
    %load/vec4 v0x1efff80_0;
    %parti/u 32, 128, 32;
    %load/vec4 v0x1efff80_0;
    %parti/u 32, 96, 32;
    %vpi_call/w 3 198 "$display", "Hint: Output '%s' has %0d mismatches. First mismatch occurred at time %0d.", "out1", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %jmp T_9.3;
T_9.2 ;
    %vpi_call/w 3 199 "$display", "Hint: Output '%s' has no mismatches.", "out1" {0 0 0};
T_9.3 ;
    %load/vec4 v0x1efff80_0;
    %parti/u 32, 64, 32;
    %cmpi/ne 0, 0, 32;
    %jmp/0xz  T_9.4, 4;
    %load/vec4 v0x1efff80_0;
    %parti/u 32, 64, 32;
    %load/vec4 v0x1efff80_0;
    %parti/u 32, 32, 32;
    %vpi_call/w 3 200 "$display", "Hint: Output '%s' has %0d mismatches. First mismatch occurred at time %0d.", "out2", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %jmp T_9.5;
T_9.4 ;
    %vpi_call/w 3 201 "$display", "Hint: Output '%s' has no mismatches.", "out2" {0 0 0};
T_9.5 ;
    %load/vec4 v0x1efff80_0;
    %parti/u 32, 256, 32;
    %load/vec4 v0x1efff80_0;
    %parti/u 32, 0, 32;
    %vpi_call/w 3 203 "$display", "Hint: Total mismatched samples is %1d out of %1d samples\012", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %vpi_call/w 3 204 "$display", "Simulation finished at %0d ps", $time {0 0 0};
    %load/vec4 v0x1efff80_0;
    %parti/u 32, 256, 32;
    %load/vec4 v0x1efff80_0;
    %parti/u 32, 0, 32;
    %vpi_call/w 3 205 "$display", "Mismatches: %1d in %1d samples", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %end;
    .thread T_9, $final;
    .scope S_0x1e940a0;
T_10 ;
    %wait E_0x1e8f3f0;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x1efff80_0;
    %pushi/vec4 0, 0, 32;
    %part/u 32;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x1efff80_0, 4, 32;
    %load/vec4 v0x1f000c0_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_10.0, 8;
    %load/vec4 v0x1efff80_0;
    %parti/u 32, 256, 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_10.2, 4;
    %vpi_func 3 216 "$time" 64 {0 0 0};
    %cast2;
    %pad/u 32;
    %ix/load 4, 224, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x1efff80_0, 4, 32;
T_10.2 ;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x1efff80_0;
    %pushi/vec4 256, 0, 32;
    %part/u 32;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %ix/load 4, 256, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x1efff80_0, 4, 32;
T_10.0 ;
    %load/vec4 v0x1effb20_0;
    %load/vec4 v0x1effb20_0;
    %load/vec4 v0x1effa80_0;
    %xor;
    %load/vec4 v0x1effb20_0;
    %xor;
    %cmp/ne;
    %jmp/0xz  T_10.4, 6;
    %load/vec4 v0x1efff80_0;
    %parti/u 32, 192, 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_10.6, 4;
    %vpi_func 3 220 "$time" 64 {0 0 0};
    %cast2;
    %pad/u 32;
    %ix/load 4, 160, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x1efff80_0, 4, 32;
T_10.6 ;
    %load/vec4 v0x1efff80_0;
    %parti/u 32, 192, 32;
    %addi 1, 0, 32;
    %ix/load 4, 192, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x1efff80_0, 4, 32;
T_10.4 ;
    %load/vec4 v0x1effcd0_0;
    %load/vec4 v0x1effcd0_0;
    %load/vec4 v0x1effc30_0;
    %xor;
    %load/vec4 v0x1effcd0_0;
    %xor;
    %cmp/ne;
    %jmp/0xz  T_10.8, 6;
    %load/vec4 v0x1efff80_0;
    %parti/u 32, 128, 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_10.10, 4;
    %vpi_func 3 223 "$time" 64 {0 0 0};
    %cast2;
    %pad/u 32;
    %ix/load 4, 96, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x1efff80_0, 4, 32;
T_10.10 ;
    %load/vec4 v0x1efff80_0;
    %parti/u 32, 128, 32;
    %addi 1, 0, 32;
    %ix/load 4, 128, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x1efff80_0, 4, 32;
T_10.8 ;
    %load/vec4 v0x1effe10_0;
    %load/vec4 v0x1effe10_0;
    %load/vec4 v0x1effd70_0;
    %xor;
    %load/vec4 v0x1effe10_0;
    %xor;
    %cmp/ne;
    %jmp/0xz  T_10.12, 6;
    %load/vec4 v0x1efff80_0;
    %parti/u 32, 64, 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_10.14, 4;
    %vpi_func 3 226 "$time" 64 {0 0 0};
    %cast2;
    %pad/u 32;
    %ix/load 4, 32, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x1efff80_0, 4, 32;
T_10.14 ;
    %load/vec4 v0x1efff80_0;
    %parti/u 32, 64, 32;
    %addi 1, 0, 32;
    %ix/load 4, 64, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x1efff80_0, 4, 32;
T_10.12 ;
    %jmp T_10;
    .thread T_10;
# The file index is used to find the file name in the following table.
:file_names 5;
    "N/A";
    "<interactive>";
    "-";
    "/home/jmb9986/AutoChip/autochip_scripts/../verilogeval_prompts_tbs/ve_testbenches_human/fsm_onehot/fsm_onehot_tb.sv";
    "/home/jmb9986/AutoChip/autochip_scripts/outputs/haiku/can55_depth0/human/fsm_onehot/iter0/response44/top_module.sv";
