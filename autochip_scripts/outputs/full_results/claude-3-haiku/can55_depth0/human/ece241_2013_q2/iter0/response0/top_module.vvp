#! /usr/local/bin/vvp
:ivl_version "13.0 (devel)" "(s20221226-331-g77d7f0b8f)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision - 12;
:vpi_module "/usr/local/lib/ivl/system.vpi";
:vpi_module "/usr/local/lib/ivl/vhdl_sys.vpi";
:vpi_module "/usr/local/lib/ivl/vhdl_textio.vpi";
:vpi_module "/usr/local/lib/ivl/v2005_math.vpi";
:vpi_module "/usr/local/lib/ivl/va_math.vpi";
:vpi_module "/usr/local/lib/ivl/v2009.vpi";
S_0x1f05bb0 .scope package, "$unit" "$unit" 2 1;
 .timescale 0 0;
S_0x1f05d40 .scope module, "tb" "tb" 3 84;
 .timescale -12 -12;
L_0x1ef82d0 .functor NOT 1, L_0x1f557b0, C4<0>, C4<0>, C4<0>;
L_0x1f55590 .functor XOR 2, L_0x1f55430, L_0x1f554f0, C4<00>, C4<00>;
L_0x1f556a0 .functor XOR 2, L_0x1f55590, L_0x1f55600, C4<00>, C4<00>;
v0x1f50970_0 .net *"_ivl_10", 1 0, L_0x1f55600;  1 drivers
v0x1f50a70_0 .net *"_ivl_12", 1 0, L_0x1f556a0;  1 drivers
v0x1f50b50_0 .net *"_ivl_2", 1 0, L_0x1f53d30;  1 drivers
v0x1f50c10_0 .net *"_ivl_4", 1 0, L_0x1f55430;  1 drivers
v0x1f50cf0_0 .net *"_ivl_6", 1 0, L_0x1f554f0;  1 drivers
v0x1f50e20_0 .net *"_ivl_8", 1 0, L_0x1f55590;  1 drivers
v0x1f50f00_0 .net "a", 0 0, v0x1f4d640_0;  1 drivers
v0x1f50fa0_0 .net "b", 0 0, v0x1f4d6e0_0;  1 drivers
v0x1f51040_0 .net "c", 0 0, v0x1f4d780_0;  1 drivers
v0x1f510e0_0 .var "clk", 0 0;
v0x1f51180_0 .net "d", 0 0, v0x1f4d8c0_0;  1 drivers
v0x1f51220_0 .net "out_pos_dut", 0 0, L_0x1f55180;  1 drivers
v0x1f512c0_0 .net "out_pos_ref", 0 0, L_0x1f527f0;  1 drivers
v0x1f51360_0 .net "out_sop_dut", 0 0, L_0x1f53b60;  1 drivers
v0x1f51400_0 .net "out_sop_ref", 0 0, L_0x1f27df0;  1 drivers
v0x1f514a0_0 .var/2u "stats1", 223 0;
v0x1f51540_0 .var/2u "strobe", 0 0;
v0x1f515e0_0 .net "tb_match", 0 0, L_0x1f557b0;  1 drivers
v0x1f516b0_0 .net "tb_mismatch", 0 0, L_0x1ef82d0;  1 drivers
v0x1f51750_0 .net "wavedrom_enable", 0 0, v0x1f4db90_0;  1 drivers
v0x1f51820_0 .net "wavedrom_title", 511 0, v0x1f4dc30_0;  1 drivers
L_0x1f53d30 .concat [ 1 1 0 0], L_0x1f527f0, L_0x1f27df0;
L_0x1f55430 .concat [ 1 1 0 0], L_0x1f527f0, L_0x1f27df0;
L_0x1f554f0 .concat [ 1 1 0 0], L_0x1f55180, L_0x1f53b60;
L_0x1f55600 .concat [ 1 1 0 0], L_0x1f527f0, L_0x1f27df0;
L_0x1f557b0 .cmp/eeq 2, L_0x1f53d30, L_0x1f556a0;
S_0x1f05ed0 .scope module, "good1" "reference_module" 3 133, 3 4 0, S_0x1f05d40;
 .timescale -12 -12;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /INPUT 1 "c";
    .port_info 3 /INPUT 1 "d";
    .port_info 4 /OUTPUT 1 "out_sop";
    .port_info 5 /OUTPUT 1 "out_pos";
L_0x1ef86b0 .functor AND 1, v0x1f4d780_0, v0x1f4d8c0_0, C4<1>, C4<1>;
L_0x1ef8a90 .functor NOT 1, v0x1f4d640_0, C4<0>, C4<0>, C4<0>;
L_0x1ef8e70 .functor NOT 1, v0x1f4d6e0_0, C4<0>, C4<0>, C4<0>;
L_0x1ef90f0 .functor AND 1, L_0x1ef8a90, L_0x1ef8e70, C4<1>, C4<1>;
L_0x1f10740 .functor AND 1, L_0x1ef90f0, v0x1f4d780_0, C4<1>, C4<1>;
L_0x1f27df0 .functor OR 1, L_0x1ef86b0, L_0x1f10740, C4<0>, C4<0>;
L_0x1f51c70 .functor NOT 1, v0x1f4d6e0_0, C4<0>, C4<0>, C4<0>;
L_0x1f51ce0 .functor OR 1, L_0x1f51c70, v0x1f4d8c0_0, C4<0>, C4<0>;
L_0x1f51df0 .functor AND 1, v0x1f4d780_0, L_0x1f51ce0, C4<1>, C4<1>;
L_0x1f51eb0 .functor NOT 1, v0x1f4d640_0, C4<0>, C4<0>, C4<0>;
L_0x1f51f80 .functor OR 1, L_0x1f51eb0, v0x1f4d6e0_0, C4<0>, C4<0>;
L_0x1f51ff0 .functor AND 1, L_0x1f51df0, L_0x1f51f80, C4<1>, C4<1>;
L_0x1f52170 .functor NOT 1, v0x1f4d6e0_0, C4<0>, C4<0>, C4<0>;
L_0x1f521e0 .functor OR 1, L_0x1f52170, v0x1f4d8c0_0, C4<0>, C4<0>;
L_0x1f52100 .functor AND 1, v0x1f4d780_0, L_0x1f521e0, C4<1>, C4<1>;
L_0x1f52370 .functor NOT 1, v0x1f4d640_0, C4<0>, C4<0>, C4<0>;
L_0x1f52470 .functor OR 1, L_0x1f52370, v0x1f4d8c0_0, C4<0>, C4<0>;
L_0x1f52530 .functor AND 1, L_0x1f52100, L_0x1f52470, C4<1>, C4<1>;
L_0x1f526e0 .functor XNOR 1, L_0x1f51ff0, L_0x1f52530, C4<0>, C4<0>;
v0x1ef7c00_0 .net *"_ivl_0", 0 0, L_0x1ef86b0;  1 drivers
v0x1ef8000_0 .net *"_ivl_12", 0 0, L_0x1f51c70;  1 drivers
v0x1ef83e0_0 .net *"_ivl_14", 0 0, L_0x1f51ce0;  1 drivers
v0x1ef87c0_0 .net *"_ivl_16", 0 0, L_0x1f51df0;  1 drivers
v0x1ef8ba0_0 .net *"_ivl_18", 0 0, L_0x1f51eb0;  1 drivers
v0x1ef8f80_0 .net *"_ivl_2", 0 0, L_0x1ef8a90;  1 drivers
v0x1ef9200_0 .net *"_ivl_20", 0 0, L_0x1f51f80;  1 drivers
v0x1f4bbb0_0 .net *"_ivl_24", 0 0, L_0x1f52170;  1 drivers
v0x1f4bc90_0 .net *"_ivl_26", 0 0, L_0x1f521e0;  1 drivers
v0x1f4bd70_0 .net *"_ivl_28", 0 0, L_0x1f52100;  1 drivers
v0x1f4be50_0 .net *"_ivl_30", 0 0, L_0x1f52370;  1 drivers
v0x1f4bf30_0 .net *"_ivl_32", 0 0, L_0x1f52470;  1 drivers
v0x1f4c010_0 .net *"_ivl_36", 0 0, L_0x1f526e0;  1 drivers
L_0x7f37b299c018 .functor BUFT 1, C4<x>, C4<0>, C4<0>, C4<0>;
v0x1f4c0d0_0 .net *"_ivl_38", 0 0, L_0x7f37b299c018;  1 drivers
v0x1f4c1b0_0 .net *"_ivl_4", 0 0, L_0x1ef8e70;  1 drivers
v0x1f4c290_0 .net *"_ivl_6", 0 0, L_0x1ef90f0;  1 drivers
v0x1f4c370_0 .net *"_ivl_8", 0 0, L_0x1f10740;  1 drivers
v0x1f4c450_0 .net "a", 0 0, v0x1f4d640_0;  alias, 1 drivers
v0x1f4c510_0 .net "b", 0 0, v0x1f4d6e0_0;  alias, 1 drivers
v0x1f4c5d0_0 .net "c", 0 0, v0x1f4d780_0;  alias, 1 drivers
v0x1f4c690_0 .net "d", 0 0, v0x1f4d8c0_0;  alias, 1 drivers
v0x1f4c750_0 .net "out_pos", 0 0, L_0x1f527f0;  alias, 1 drivers
v0x1f4c810_0 .net "out_sop", 0 0, L_0x1f27df0;  alias, 1 drivers
v0x1f4c8d0_0 .net "pos0", 0 0, L_0x1f51ff0;  1 drivers
v0x1f4c990_0 .net "pos1", 0 0, L_0x1f52530;  1 drivers
L_0x1f527f0 .functor MUXZ 1, L_0x7f37b299c018, L_0x1f51ff0, L_0x1f526e0, C4<>;
S_0x1f4cb10 .scope module, "stim1" "stimulus_gen" 3 126, 3 22 0, S_0x1f05d40;
 .timescale -12 -12;
    .port_info 0 /INPUT 1 "clk";
    .port_info 1 /OUTPUT 1 "a";
    .port_info 2 /OUTPUT 1 "b";
    .port_info 3 /OUTPUT 1 "c";
    .port_info 4 /OUTPUT 1 "d";
    .port_info 5 /OUTPUT 512 "wavedrom_title";
    .port_info 6 /OUTPUT 1 "wavedrom_enable";
    .port_info 7 /INPUT 1 "tb_match";
v0x1f4d640_0 .var "a", 0 0;
v0x1f4d6e0_0 .var "b", 0 0;
v0x1f4d780_0 .var "c", 0 0;
v0x1f4d820_0 .net "clk", 0 0, v0x1f510e0_0;  1 drivers
v0x1f4d8c0_0 .var "d", 0 0;
v0x1f4d9b0_0 .var/2u "fail", 0 0;
v0x1f4da50_0 .var/2u "fail1", 0 0;
v0x1f4daf0_0 .net "tb_match", 0 0, L_0x1f557b0;  alias, 1 drivers
v0x1f4db90_0 .var "wavedrom_enable", 0 0;
v0x1f4dc30_0 .var "wavedrom_title", 511 0;
E_0x1f04520/0 .event negedge, v0x1f4d820_0;
E_0x1f04520/1 .event posedge, v0x1f4d820_0;
E_0x1f04520 .event/or E_0x1f04520/0, E_0x1f04520/1;
S_0x1f4ce40 .scope begin, "$ivl_for_loop0" "$ivl_for_loop0" 3 68, 3 68 0, S_0x1f4cb10;
 .timescale -12 -12;
v0x1f4d080_0 .var/2s "i", 31 0;
E_0x1f043c0 .event posedge, v0x1f4d820_0;
S_0x1f4d180 .scope task, "wavedrom_start" "wavedrom_start" 3 34, 3 34 0, S_0x1f4cb10;
 .timescale -12 -12;
v0x1f4d380_0 .var "title", 511 0;
TD_tb.stim1.wavedrom_start ;
    %end;
S_0x1f4d460 .scope task, "wavedrom_stop" "wavedrom_stop" 3 37, 3 37 0, S_0x1f4cb10;
 .timescale -12 -12;
TD_tb.stim1.wavedrom_stop ;
    %delay 1, 0;
    %end;
S_0x1f4de10 .scope module, "top_module1" "top_module" 3 141, 4 1 0, S_0x1f05d40;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /INPUT 1 "c";
    .port_info 3 /INPUT 1 "d";
    .port_info 4 /OUTPUT 1 "out_sop";
    .port_info 5 /OUTPUT 1 "out_pos";
L_0x1f529a0 .functor NOT 1, v0x1f4d6e0_0, C4<0>, C4<0>, C4<0>;
L_0x1f52b40 .functor AND 1, v0x1f4d640_0, L_0x1f529a0, C4<1>, C4<1>;
L_0x1f52c20 .functor NOT 1, v0x1f4d780_0, C4<0>, C4<0>, C4<0>;
L_0x1f52da0 .functor AND 1, L_0x1f52b40, L_0x1f52c20, C4<1>, C4<1>;
L_0x1f52ee0 .functor NOT 1, v0x1f4d8c0_0, C4<0>, C4<0>, C4<0>;
L_0x1f53060 .functor AND 1, L_0x1f52da0, L_0x1f52ee0, C4<1>, C4<1>;
L_0x1f531b0 .functor NOT 1, v0x1f4d640_0, C4<0>, C4<0>, C4<0>;
L_0x1f53330 .functor AND 1, L_0x1f531b0, v0x1f4d6e0_0, C4<1>, C4<1>;
L_0x1f53440 .functor NOT 1, v0x1f4d780_0, C4<0>, C4<0>, C4<0>;
L_0x1f534b0 .functor AND 1, L_0x1f53330, L_0x1f53440, C4<1>, C4<1>;
L_0x1f53620 .functor NOT 1, v0x1f4d8c0_0, C4<0>, C4<0>, C4<0>;
L_0x1f53690 .functor AND 1, L_0x1f534b0, L_0x1f53620, C4<1>, C4<1>;
L_0x1f537c0 .functor OR 1, L_0x1f53060, L_0x1f53690, C4<0>, C4<0>;
L_0x1f538d0 .functor AND 1, v0x1f4d640_0, v0x1f4d6e0_0, C4<1>, C4<1>;
L_0x1f53750 .functor AND 1, L_0x1f538d0, v0x1f4d780_0, C4<1>, C4<1>;
L_0x1f53a10 .functor AND 1, L_0x1f53750, v0x1f4d8c0_0, C4<1>, C4<1>;
L_0x1f53b60 .functor OR 1, L_0x1f537c0, L_0x1f53a10, C4<0>, C4<0>;
L_0x1f53cc0 .functor NOT 1, v0x1f4d640_0, C4<0>, C4<0>, C4<0>;
L_0x1f53dd0 .functor OR 1, L_0x1f53cc0, v0x1f4d6e0_0, C4<0>, C4<0>;
L_0x1f53e90 .functor OR 1, L_0x1f53dd0, v0x1f4d780_0, C4<0>, C4<0>;
L_0x1f54000 .functor OR 1, L_0x1f53e90, v0x1f4d8c0_0, C4<0>, C4<0>;
L_0x1f540c0 .functor NOT 1, v0x1f4d6e0_0, C4<0>, C4<0>, C4<0>;
L_0x1f541f0 .functor OR 1, v0x1f4d640_0, L_0x1f540c0, C4<0>, C4<0>;
L_0x1f542b0 .functor OR 1, L_0x1f541f0, v0x1f4d780_0, C4<0>, C4<0>;
L_0x1f54440 .functor OR 1, L_0x1f542b0, v0x1f4d8c0_0, C4<0>, C4<0>;
L_0x1f54500 .functor AND 1, L_0x1f54000, L_0x1f54440, C4<1>, C4<1>;
L_0x1f546f0 .functor OR 1, v0x1f4d640_0, v0x1f4d6e0_0, C4<0>, C4<0>;
L_0x1f54760 .functor NOT 1, v0x1f4d780_0, C4<0>, C4<0>, C4<0>;
L_0x1f548c0 .functor OR 1, L_0x1f546f0, L_0x1f54760, C4<0>, C4<0>;
L_0x1f549d0 .functor OR 1, L_0x1f548c0, v0x1f4d8c0_0, C4<0>, C4<0>;
L_0x1f54b90 .functor AND 1, L_0x1f54500, L_0x1f549d0, C4<1>, C4<1>;
L_0x1f54ca0 .functor OR 1, v0x1f4d640_0, v0x1f4d6e0_0, C4<0>, C4<0>;
L_0x1f54e20 .functor OR 1, L_0x1f54ca0, v0x1f4d780_0, C4<0>, C4<0>;
L_0x1f54ee0 .functor NOT 1, v0x1f4d8c0_0, C4<0>, C4<0>, C4<0>;
L_0x1f55070 .functor OR 1, L_0x1f54e20, L_0x1f54ee0, C4<0>, C4<0>;
L_0x1f55180 .functor AND 1, L_0x1f54b90, L_0x1f55070, C4<1>, C4<1>;
v0x1f4dfd0_0 .net *"_ivl_0", 0 0, L_0x1f529a0;  1 drivers
v0x1f4e0b0_0 .net *"_ivl_10", 0 0, L_0x1f53060;  1 drivers
v0x1f4e190_0 .net *"_ivl_12", 0 0, L_0x1f531b0;  1 drivers
v0x1f4e280_0 .net *"_ivl_14", 0 0, L_0x1f53330;  1 drivers
v0x1f4e360_0 .net *"_ivl_16", 0 0, L_0x1f53440;  1 drivers
v0x1f4e490_0 .net *"_ivl_18", 0 0, L_0x1f534b0;  1 drivers
v0x1f4e570_0 .net *"_ivl_2", 0 0, L_0x1f52b40;  1 drivers
v0x1f4e650_0 .net *"_ivl_20", 0 0, L_0x1f53620;  1 drivers
v0x1f4e730_0 .net *"_ivl_22", 0 0, L_0x1f53690;  1 drivers
v0x1f4e8a0_0 .net *"_ivl_24", 0 0, L_0x1f537c0;  1 drivers
v0x1f4e980_0 .net *"_ivl_26", 0 0, L_0x1f538d0;  1 drivers
v0x1f4ea60_0 .net *"_ivl_28", 0 0, L_0x1f53750;  1 drivers
v0x1f4eb40_0 .net *"_ivl_30", 0 0, L_0x1f53a10;  1 drivers
v0x1f4ec20_0 .net *"_ivl_34", 0 0, L_0x1f53cc0;  1 drivers
v0x1f4ed00_0 .net *"_ivl_36", 0 0, L_0x1f53dd0;  1 drivers
v0x1f4ede0_0 .net *"_ivl_38", 0 0, L_0x1f53e90;  1 drivers
v0x1f4eec0_0 .net *"_ivl_4", 0 0, L_0x1f52c20;  1 drivers
v0x1f4f0b0_0 .net *"_ivl_40", 0 0, L_0x1f54000;  1 drivers
v0x1f4f190_0 .net *"_ivl_42", 0 0, L_0x1f540c0;  1 drivers
v0x1f4f270_0 .net *"_ivl_44", 0 0, L_0x1f541f0;  1 drivers
v0x1f4f350_0 .net *"_ivl_46", 0 0, L_0x1f542b0;  1 drivers
v0x1f4f430_0 .net *"_ivl_48", 0 0, L_0x1f54440;  1 drivers
v0x1f4f510_0 .net *"_ivl_50", 0 0, L_0x1f54500;  1 drivers
v0x1f4f5f0_0 .net *"_ivl_52", 0 0, L_0x1f546f0;  1 drivers
v0x1f4f6d0_0 .net *"_ivl_54", 0 0, L_0x1f54760;  1 drivers
v0x1f4f7b0_0 .net *"_ivl_56", 0 0, L_0x1f548c0;  1 drivers
v0x1f4f890_0 .net *"_ivl_58", 0 0, L_0x1f549d0;  1 drivers
v0x1f4f970_0 .net *"_ivl_6", 0 0, L_0x1f52da0;  1 drivers
v0x1f4fa50_0 .net *"_ivl_60", 0 0, L_0x1f54b90;  1 drivers
v0x1f4fb30_0 .net *"_ivl_62", 0 0, L_0x1f54ca0;  1 drivers
v0x1f4fc10_0 .net *"_ivl_64", 0 0, L_0x1f54e20;  1 drivers
v0x1f4fcf0_0 .net *"_ivl_66", 0 0, L_0x1f54ee0;  1 drivers
v0x1f4fdd0_0 .net *"_ivl_68", 0 0, L_0x1f55070;  1 drivers
v0x1f500c0_0 .net *"_ivl_8", 0 0, L_0x1f52ee0;  1 drivers
v0x1f501a0_0 .net "a", 0 0, v0x1f4d640_0;  alias, 1 drivers
v0x1f50240_0 .net "b", 0 0, v0x1f4d6e0_0;  alias, 1 drivers
v0x1f50330_0 .net "c", 0 0, v0x1f4d780_0;  alias, 1 drivers
v0x1f50420_0 .net "d", 0 0, v0x1f4d8c0_0;  alias, 1 drivers
v0x1f50510_0 .net "out_pos", 0 0, L_0x1f55180;  alias, 1 drivers
v0x1f505d0_0 .net "out_sop", 0 0, L_0x1f53b60;  alias, 1 drivers
S_0x1f50750 .scope task, "wait_for_end_of_timestep" "wait_for_end_of_timestep" 3 151, 3 151 0, S_0x1f05d40;
 .timescale -12 -12;
E_0x1eed9f0 .event anyedge, v0x1f51540_0;
TD_tb.wait_for_end_of_timestep ;
    %pushi/vec4 5, 0, 32;
T_2.0 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_2.1, 5;
    %jmp/1 T_2.1, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %load/vec4 v0x1f51540_0;
    %nor/r;
    %assign/vec4 v0x1f51540_0, 0;
    %wait E_0x1eed9f0;
    %jmp T_2.0;
T_2.1 ;
    %pop/vec4 1;
    %end;
    .scope S_0x1f4cb10;
T_3 ;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x1f4d9b0_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x1f4da50_0, 0, 1;
    %end;
    .thread T_3, $init;
    .scope S_0x1f4cb10;
T_4 ;
    %wait E_0x1f04520;
    %load/vec4 v0x1f4daf0_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_4.0, 8;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x1f4d9b0_0, 0, 1;
T_4.0 ;
    %jmp T_4;
    .thread T_4;
    .scope S_0x1f4cb10;
T_5 ;
    %wait E_0x1f043c0;
    %pushi/vec4 0, 0, 4;
    %split/vec4 1;
    %assign/vec4 v0x1f4d8c0_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x1f4d780_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x1f4d6e0_0, 0;
    %assign/vec4 v0x1f4d640_0, 0;
    %wait E_0x1f043c0;
    %pushi/vec4 1, 0, 4;
    %split/vec4 1;
    %assign/vec4 v0x1f4d8c0_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x1f4d780_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x1f4d6e0_0, 0;
    %assign/vec4 v0x1f4d640_0, 0;
    %wait E_0x1f043c0;
    %pushi/vec4 2, 0, 4;
    %split/vec4 1;
    %assign/vec4 v0x1f4d8c0_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x1f4d780_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x1f4d6e0_0, 0;
    %assign/vec4 v0x1f4d640_0, 0;
    %wait E_0x1f043c0;
    %pushi/vec4 4, 0, 4;
    %split/vec4 1;
    %assign/vec4 v0x1f4d8c0_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x1f4d780_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x1f4d6e0_0, 0;
    %assign/vec4 v0x1f4d640_0, 0;
    %wait E_0x1f043c0;
    %pushi/vec4 5, 0, 4;
    %split/vec4 1;
    %assign/vec4 v0x1f4d8c0_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x1f4d780_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x1f4d6e0_0, 0;
    %assign/vec4 v0x1f4d640_0, 0;
    %wait E_0x1f043c0;
    %pushi/vec4 6, 0, 4;
    %split/vec4 1;
    %assign/vec4 v0x1f4d8c0_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x1f4d780_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x1f4d6e0_0, 0;
    %assign/vec4 v0x1f4d640_0, 0;
    %wait E_0x1f043c0;
    %pushi/vec4 7, 0, 4;
    %split/vec4 1;
    %assign/vec4 v0x1f4d8c0_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x1f4d780_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x1f4d6e0_0, 0;
    %assign/vec4 v0x1f4d640_0, 0;
    %wait E_0x1f043c0;
    %pushi/vec4 9, 0, 4;
    %split/vec4 1;
    %assign/vec4 v0x1f4d8c0_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x1f4d780_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x1f4d6e0_0, 0;
    %assign/vec4 v0x1f4d640_0, 0;
    %wait E_0x1f043c0;
    %pushi/vec4 10, 0, 4;
    %split/vec4 1;
    %assign/vec4 v0x1f4d8c0_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x1f4d780_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x1f4d6e0_0, 0;
    %assign/vec4 v0x1f4d640_0, 0;
    %wait E_0x1f043c0;
    %pushi/vec4 13, 0, 4;
    %split/vec4 1;
    %assign/vec4 v0x1f4d8c0_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x1f4d780_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x1f4d6e0_0, 0;
    %assign/vec4 v0x1f4d640_0, 0;
    %wait E_0x1f043c0;
    %pushi/vec4 14, 0, 4;
    %split/vec4 1;
    %assign/vec4 v0x1f4d8c0_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x1f4d780_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x1f4d6e0_0, 0;
    %assign/vec4 v0x1f4d640_0, 0;
    %wait E_0x1f043c0;
    %pushi/vec4 15, 0, 4;
    %split/vec4 1;
    %assign/vec4 v0x1f4d8c0_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x1f4d780_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x1f4d6e0_0, 0;
    %assign/vec4 v0x1f4d640_0, 0;
    %wait E_0x1f043c0;
    %load/vec4 v0x1f4d9b0_0;
    %store/vec4 v0x1f4da50_0, 0, 1;
    %fork t_1, S_0x1f4ce40;
    %jmp t_0;
    .scope S_0x1f4ce40;
t_1 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x1f4d080_0, 0, 32;
T_5.0 ; Top of for-loop 
    %load/vec4 v0x1f4d080_0;
    %cmpi/s 16, 0, 32;
    %jmp/0xz T_5.1, 5;
    %wait E_0x1f043c0;
    %load/vec4 v0x1f4d080_0;
    %pad/s 4;
    %split/vec4 1;
    %assign/vec4 v0x1f4d8c0_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x1f4d780_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x1f4d6e0_0, 0;
    %assign/vec4 v0x1f4d640_0, 0;
T_5.2 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x1f4d080_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x1f4d080_0, 0, 32;
    %jmp T_5.0;
T_5.1 ; for-loop exit label
    %end;
    .scope S_0x1f4cb10;
t_0 %join;
    %pushi/vec4 50, 0, 32;
T_5.3 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_5.4, 5;
    %jmp/1 T_5.4, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_0x1f04520;
    %vpi_func 3 74 "$random" 32 {0 0 0};
    %pad/s 4;
    %split/vec4 1;
    %assign/vec4 v0x1f4d8c0_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x1f4d780_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x1f4d6e0_0, 0;
    %assign/vec4 v0x1f4d640_0, 0;
    %jmp T_5.3;
T_5.4 ;
    %pop/vec4 1;
    %load/vec4 v0x1f4d9b0_0;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_5.7, 9;
    %load/vec4 v0x1f4da50_0;
    %inv;
    %and;
T_5.7;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.5, 8;
    %vpi_call/w 3 77 "$display", "Hint: Your circuit passes on the 12 required input combinations, but doesn't match the don't-care cases. Are you using minimal SOP and POS?" {0 0 0};
T_5.5 ;
    %vpi_call/w 3 79 "$finish" {0 0 0};
    %end;
    .thread T_5;
    .scope S_0x1f05d40;
T_6 ;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x1f510e0_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x1f51540_0, 0, 1;
    %end;
    .thread T_6, $init;
    .scope S_0x1f05d40;
T_7 ;
T_7.0 ;
    %delay 5, 0;
    %load/vec4 v0x1f510e0_0;
    %inv;
    %store/vec4 v0x1f510e0_0, 0, 1;
    %jmp T_7.0;
T_7.1 ;
    %end;
    .thread T_7;
    .scope S_0x1f05d40;
T_8 ;
    %vpi_call/w 3 118 "$dumpfile", "wave.vcd" {0 0 0};
    %vpi_call/w 3 119 "$dumpvars", 32'sb00000000000000000000000000000001, v0x1f4d820_0, v0x1f516b0_0, v0x1f50f00_0, v0x1f50fa0_0, v0x1f51040_0, v0x1f51180_0, v0x1f51400_0, v0x1f51360_0, v0x1f512c0_0, v0x1f51220_0 {0 0 0};
    %end;
    .thread T_8;
    .scope S_0x1f05d40;
T_9 ;
    %load/vec4 v0x1f514a0_0;
    %parti/u 32, 128, 32;
    %cmpi/ne 0, 0, 32;
    %jmp/0xz  T_9.0, 4;
    %load/vec4 v0x1f514a0_0;
    %parti/u 32, 128, 32;
    %load/vec4 v0x1f514a0_0;
    %parti/u 32, 96, 32;
    %vpi_call/w 3 160 "$display", "Hint: Output '%s' has %0d mismatches. First mismatch occurred at time %0d.", "out_sop", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %jmp T_9.1;
T_9.0 ;
    %vpi_call/w 3 161 "$display", "Hint: Output '%s' has no mismatches.", "out_sop" {0 0 0};
T_9.1 ;
    %load/vec4 v0x1f514a0_0;
    %parti/u 32, 64, 32;
    %cmpi/ne 0, 0, 32;
    %jmp/0xz  T_9.2, 4;
    %load/vec4 v0x1f514a0_0;
    %parti/u 32, 64, 32;
    %load/vec4 v0x1f514a0_0;
    %parti/u 32, 32, 32;
    %vpi_call/w 3 162 "$display", "Hint: Output '%s' has %0d mismatches. First mismatch occurred at time %0d.", "out_pos", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %jmp T_9.3;
T_9.2 ;
    %vpi_call/w 3 163 "$display", "Hint: Output '%s' has no mismatches.", "out_pos" {0 0 0};
T_9.3 ;
    %load/vec4 v0x1f514a0_0;
    %parti/u 32, 192, 32;
    %load/vec4 v0x1f514a0_0;
    %parti/u 32, 0, 32;
    %vpi_call/w 3 165 "$display", "Hint: Total mismatched samples is %1d out of %1d samples\012", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %vpi_call/w 3 166 "$display", "Simulation finished at %0d ps", $time {0 0 0};
    %load/vec4 v0x1f514a0_0;
    %parti/u 32, 192, 32;
    %load/vec4 v0x1f514a0_0;
    %parti/u 32, 0, 32;
    %vpi_call/w 3 167 "$display", "Mismatches: %1d in %1d samples", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %end;
    .thread T_9, $final;
    .scope S_0x1f05d40;
T_10 ;
    %wait E_0x1f04520;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x1f514a0_0;
    %pushi/vec4 0, 0, 32;
    %part/u 32;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x1f514a0_0, 4, 32;
    %load/vec4 v0x1f515e0_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_10.0, 8;
    %load/vec4 v0x1f514a0_0;
    %parti/u 32, 192, 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_10.2, 4;
    %vpi_func 3 178 "$time" 64 {0 0 0};
    %cast2;
    %pad/u 32;
    %ix/load 4, 160, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x1f514a0_0, 4, 32;
T_10.2 ;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x1f514a0_0;
    %pushi/vec4 192, 0, 32;
    %part/u 32;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %ix/load 4, 192, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x1f514a0_0, 4, 32;
T_10.0 ;
    %load/vec4 v0x1f51400_0;
    %load/vec4 v0x1f51400_0;
    %load/vec4 v0x1f51360_0;
    %xor;
    %load/vec4 v0x1f51400_0;
    %xor;
    %cmp/ne;
    %jmp/0xz  T_10.4, 6;
    %load/vec4 v0x1f514a0_0;
    %parti/u 32, 128, 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_10.6, 4;
    %vpi_func 3 182 "$time" 64 {0 0 0};
    %cast2;
    %pad/u 32;
    %ix/load 4, 96, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x1f514a0_0, 4, 32;
T_10.6 ;
    %load/vec4 v0x1f514a0_0;
    %parti/u 32, 128, 32;
    %addi 1, 0, 32;
    %ix/load 4, 128, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x1f514a0_0, 4, 32;
T_10.4 ;
    %load/vec4 v0x1f512c0_0;
    %load/vec4 v0x1f512c0_0;
    %load/vec4 v0x1f51220_0;
    %xor;
    %load/vec4 v0x1f512c0_0;
    %xor;
    %cmp/ne;
    %jmp/0xz  T_10.8, 6;
    %load/vec4 v0x1f514a0_0;
    %parti/u 32, 64, 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_10.10, 4;
    %vpi_func 3 185 "$time" 64 {0 0 0};
    %cast2;
    %pad/u 32;
    %ix/load 4, 32, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x1f514a0_0, 4, 32;
T_10.10 ;
    %load/vec4 v0x1f514a0_0;
    %parti/u 32, 64, 32;
    %addi 1, 0, 32;
    %ix/load 4, 64, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x1f514a0_0, 4, 32;
T_10.8 ;
    %jmp T_10;
    .thread T_10;
# The file index is used to find the file name in the following table.
:file_names 5;
    "N/A";
    "<interactive>";
    "-";
    "/home/jmb9986/AutoChip/autochip_scripts/../verilogeval_prompts_tbs/ve_testbenches_human/ece241_2013_q2/ece241_2013_q2_tb.sv";
    "/home/jmb9986/AutoChip/autochip_scripts/outputs/haiku/can55_depth0/human/ece241_2013_q2/iter0/response0/top_module.sv";
