#! /usr/local/bin/vvp
:ivl_version "13.0 (devel)" "(s20221226-331-g77d7f0b8f)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision - 12;
:vpi_module "/usr/local/lib/ivl/system.vpi";
:vpi_module "/usr/local/lib/ivl/vhdl_sys.vpi";
:vpi_module "/usr/local/lib/ivl/vhdl_textio.vpi";
:vpi_module "/usr/local/lib/ivl/v2005_math.vpi";
:vpi_module "/usr/local/lib/ivl/va_math.vpi";
:vpi_module "/usr/local/lib/ivl/v2009.vpi";
S_0x2432230 .scope package, "$unit" "$unit" 2 1;
 .timescale 0 0;
S_0x24468e0 .scope module, "tb" "tb" 3 122;
 .timescale -12 -12;
L_0x24326c0 .functor NOT 1, L_0x24b7820, C4<0>, C4<0>, C4<0>;
L_0x24b76a0 .functor XOR 12, L_0x24b7560, L_0x24b7600, C4<000000000000>, C4<000000000000>;
L_0x24b77b0 .functor XOR 12, L_0x24b76a0, L_0x24b7710, C4<000000000000>, C4<000000000000>;
v0x24aea70_0 .net *"_ivl_10", 11 0, L_0x24b7710;  1 drivers
v0x24aeb70_0 .net *"_ivl_12", 11 0, L_0x24b77b0;  1 drivers
v0x24aec50_0 .net *"_ivl_2", 11 0, L_0x24b74c0;  1 drivers
v0x24aed10_0 .net *"_ivl_4", 11 0, L_0x24b7560;  1 drivers
v0x24aedf0_0 .net *"_ivl_6", 11 0, L_0x24b7600;  1 drivers
v0x24aef20_0 .net *"_ivl_8", 11 0, L_0x24b76a0;  1 drivers
v0x24af000_0 .var "clk", 0 0;
v0x24af0a0_0 .net "in", 0 0, v0x24a9b00_0;  1 drivers
v0x24af140_0 .net "next_state_dut", 9 0, L_0x24b60b0;  1 drivers
v0x24af1e0_0 .net "next_state_ref", 9 0, L_0x24b1e70;  1 drivers
v0x24af2f0_0 .net "out1_dut", 0 0, L_0x24b71a0;  1 drivers
v0x24af390_0 .net "out1_ref", 0 0, L_0x2435510;  1 drivers
v0x24af430_0 .net "out2_dut", 0 0, L_0x24b7300;  1 drivers
v0x24af4d0_0 .net "out2_ref", 0 0, L_0x24363b0;  1 drivers
v0x24af5a0_0 .net "state", 9 0, v0x24a9e30_0;  1 drivers
v0x24af640_0 .var/2u "stats1", 287 0;
v0x24af6e0_0 .var/2u "strobe", 0 0;
v0x24af780_0 .net "tb_match", 0 0, L_0x24b7820;  1 drivers
v0x24af850_0 .net "tb_mismatch", 0 0, L_0x24326c0;  1 drivers
v0x24af8f0_0 .net "wavedrom_enable", 0 0, v0x24aa070_0;  1 drivers
v0x24af9c0_0 .net "wavedrom_title", 511 0, v0x24aa130_0;  1 drivers
L_0x24b74c0 .concat [ 1 1 10 0], L_0x24363b0, L_0x2435510, L_0x24b1e70;
L_0x24b7560 .concat [ 1 1 10 0], L_0x24363b0, L_0x2435510, L_0x24b1e70;
L_0x24b7600 .concat [ 1 1 10 0], L_0x24b7300, L_0x24b71a0, L_0x24b60b0;
L_0x24b7710 .concat [ 1 1 10 0], L_0x24363b0, L_0x2435510, L_0x24b1e70;
L_0x24b7820 .cmp/eeq 12, L_0x24b74c0, L_0x24b77b0;
S_0x2446a70 .scope module, "good1" "reference_module" 3 171, 3 4 0, S_0x24468e0;
 .timescale -12 -12;
    .port_info 0 /INPUT 1 "in";
    .port_info 1 /INPUT 10 "state";
    .port_info 2 /OUTPUT 10 "next_state";
    .port_info 3 /OUTPUT 1 "out1";
    .port_info 4 /OUTPUT 1 "out2";
L_0x2435510 .functor OR 1, L_0x24afb10, L_0x24afbb0, C4<0>, C4<0>;
L_0x24363b0 .functor OR 1, L_0x24afd40, L_0x24afde0, C4<0>, C4<0>;
L_0x2436b00 .functor OR 1, L_0x24b02c0, L_0x24b0360, C4<0>, C4<0>;
L_0x2433510 .functor OR 1, L_0x2436b00, L_0x24b04f0, C4<0>, C4<0>;
L_0x2454410 .functor OR 1, L_0x2433510, L_0x24b0660, C4<0>, C4<0>;
L_0x2480330 .functor AND 1, L_0x24affa0, L_0x2454410, C4<1>, C4<1>;
L_0x24b0a40 .functor OR 1, L_0x24b0890, L_0x24b0930, C4<0>, C4<0>;
L_0x24b0bf0 .functor OR 1, L_0x24b0a40, L_0x24b0b50, C4<0>, C4<0>;
L_0x24b0d50 .functor AND 1, v0x24a9b00_0, L_0x24b0bf0, C4<1>, C4<1>;
L_0x24b09d0 .functor AND 1, v0x24a9b00_0, L_0x24b0e10, C4<1>, C4<1>;
L_0x24b1080 .functor AND 1, v0x24a9b00_0, L_0x24b0fe0, C4<1>, C4<1>;
L_0x24b1220 .functor AND 1, v0x24a9b00_0, L_0x24b10f0, C4<1>, C4<1>;
L_0x24b13f0 .functor AND 1, v0x24a9b00_0, L_0x24b1350, C4<1>, C4<1>;
L_0x24b1620 .functor AND 1, v0x24a9b00_0, L_0x24b14e0, C4<1>, C4<1>;
L_0x24b12e0 .functor OR 1, L_0x24b1790, L_0x24b1830, C4<0>, C4<0>;
L_0x24b1a80 .functor AND 1, v0x24a9b00_0, L_0x24b12e0, C4<1>, C4<1>;
L_0x24b1d30 .functor AND 1, L_0x24b1580, L_0x24b1bd0, C4<1>, C4<1>;
L_0x24b23f0 .functor AND 1, L_0x24b21e0, L_0x24b2350, C4<1>, C4<1>;
v0x24356c0_0 .net *"_ivl_1", 0 0, L_0x24afb10;  1 drivers
v0x24364c0_0 .net *"_ivl_100", 0 0, L_0x24b21e0;  1 drivers
v0x2436560_0 .net *"_ivl_102", 0 0, L_0x24b2350;  1 drivers
v0x2436d70_0 .net *"_ivl_104", 0 0, L_0x24b23f0;  1 drivers
v0x2436e10_0 .net *"_ivl_15", 0 0, L_0x24affa0;  1 drivers
v0x2433660_0 .net *"_ivl_17", 4 0, L_0x24b00d0;  1 drivers
v0x2433700_0 .net *"_ivl_19", 0 0, L_0x24b02c0;  1 drivers
v0x24a6600_0 .net *"_ivl_21", 0 0, L_0x24b0360;  1 drivers
v0x24a66e0_0 .net *"_ivl_22", 0 0, L_0x2436b00;  1 drivers
v0x24a67c0_0 .net *"_ivl_25", 0 0, L_0x24b04f0;  1 drivers
v0x24a68a0_0 .net *"_ivl_26", 0 0, L_0x2433510;  1 drivers
v0x24a6980_0 .net *"_ivl_29", 0 0, L_0x24b0660;  1 drivers
v0x24a6a60_0 .net *"_ivl_3", 0 0, L_0x24afbb0;  1 drivers
v0x24a6b40_0 .net *"_ivl_30", 0 0, L_0x2454410;  1 drivers
v0x24a6c20_0 .net *"_ivl_33", 0 0, L_0x2480330;  1 drivers
v0x24a6ce0_0 .net *"_ivl_37", 0 0, L_0x24b0890;  1 drivers
v0x24a6dc0_0 .net *"_ivl_39", 0 0, L_0x24b0930;  1 drivers
v0x24a6ea0_0 .net *"_ivl_40", 0 0, L_0x24b0a40;  1 drivers
v0x24a6f80_0 .net *"_ivl_43", 0 0, L_0x24b0b50;  1 drivers
v0x24a7060_0 .net *"_ivl_44", 0 0, L_0x24b0bf0;  1 drivers
v0x24a7140_0 .net *"_ivl_47", 0 0, L_0x24b0d50;  1 drivers
v0x24a7200_0 .net *"_ivl_51", 0 0, L_0x24b0e10;  1 drivers
v0x24a72e0_0 .net *"_ivl_53", 0 0, L_0x24b09d0;  1 drivers
v0x24a73a0_0 .net *"_ivl_57", 0 0, L_0x24b0fe0;  1 drivers
v0x24a7480_0 .net *"_ivl_59", 0 0, L_0x24b1080;  1 drivers
v0x24a7540_0 .net *"_ivl_63", 0 0, L_0x24b10f0;  1 drivers
v0x24a7620_0 .net *"_ivl_65", 0 0, L_0x24b1220;  1 drivers
v0x24a76e0_0 .net *"_ivl_69", 0 0, L_0x24b1350;  1 drivers
v0x24a77c0_0 .net *"_ivl_7", 0 0, L_0x24afd40;  1 drivers
v0x24a78a0_0 .net *"_ivl_71", 0 0, L_0x24b13f0;  1 drivers
v0x24a7960_0 .net *"_ivl_75", 0 0, L_0x24b14e0;  1 drivers
v0x24a7a40_0 .net *"_ivl_77", 0 0, L_0x24b1620;  1 drivers
v0x24a7b00_0 .net *"_ivl_81", 0 0, L_0x24b1790;  1 drivers
v0x24a7df0_0 .net *"_ivl_83", 0 0, L_0x24b1830;  1 drivers
v0x24a7ed0_0 .net *"_ivl_84", 0 0, L_0x24b12e0;  1 drivers
v0x24a7fb0_0 .net *"_ivl_87", 0 0, L_0x24b1a80;  1 drivers
v0x24a8070_0 .net *"_ivl_9", 0 0, L_0x24afde0;  1 drivers
v0x24a8150_0 .net *"_ivl_91", 0 0, L_0x24b1580;  1 drivers
v0x24a8210_0 .net *"_ivl_93", 0 0, L_0x24b1bd0;  1 drivers
v0x24a82f0_0 .net *"_ivl_95", 0 0, L_0x24b1d30;  1 drivers
v0x24a83b0_0 .net "in", 0 0, v0x24a9b00_0;  alias, 1 drivers
v0x24a8470_0 .net "next_state", 9 0, L_0x24b1e70;  alias, 1 drivers
v0x24a8550_0 .net "out1", 0 0, L_0x2435510;  alias, 1 drivers
v0x24a8610_0 .net "out2", 0 0, L_0x24363b0;  alias, 1 drivers
v0x24a86d0_0 .net "state", 9 0, v0x24a9e30_0;  alias, 1 drivers
L_0x24afb10 .part v0x24a9e30_0, 8, 1;
L_0x24afbb0 .part v0x24a9e30_0, 9, 1;
L_0x24afd40 .part v0x24a9e30_0, 7, 1;
L_0x24afde0 .part v0x24a9e30_0, 9, 1;
L_0x24affa0 .reduce/nor v0x24a9b00_0;
L_0x24b00d0 .part v0x24a9e30_0, 0, 5;
L_0x24b02c0 .reduce/or L_0x24b00d0;
L_0x24b0360 .part v0x24a9e30_0, 7, 1;
L_0x24b04f0 .part v0x24a9e30_0, 8, 1;
L_0x24b0660 .part v0x24a9e30_0, 9, 1;
L_0x24b0890 .part v0x24a9e30_0, 0, 1;
L_0x24b0930 .part v0x24a9e30_0, 8, 1;
L_0x24b0b50 .part v0x24a9e30_0, 9, 1;
L_0x24b0e10 .part v0x24a9e30_0, 1, 1;
L_0x24b0fe0 .part v0x24a9e30_0, 2, 1;
L_0x24b10f0 .part v0x24a9e30_0, 3, 1;
L_0x24b1350 .part v0x24a9e30_0, 4, 1;
L_0x24b14e0 .part v0x24a9e30_0, 5, 1;
L_0x24b1790 .part v0x24a9e30_0, 6, 1;
L_0x24b1830 .part v0x24a9e30_0, 7, 1;
L_0x24b1580 .reduce/nor v0x24a9b00_0;
L_0x24b1bd0 .part v0x24a9e30_0, 5, 1;
LS_0x24b1e70_0_0 .concat8 [ 1 1 1 1], L_0x2480330, L_0x24b0d50, L_0x24b09d0, L_0x24b1080;
LS_0x24b1e70_0_4 .concat8 [ 1 1 1 1], L_0x24b1220, L_0x24b13f0, L_0x24b1620, L_0x24b1a80;
LS_0x24b1e70_0_8 .concat8 [ 1 1 0 0], L_0x24b1d30, L_0x24b23f0;
L_0x24b1e70 .concat8 [ 4 4 2 0], LS_0x24b1e70_0_0, LS_0x24b1e70_0_4, LS_0x24b1e70_0_8;
L_0x24b21e0 .reduce/nor v0x24a9b00_0;
L_0x24b2350 .part v0x24a9e30_0, 6, 1;
S_0x24a8850 .scope module, "stim1" "stimulus_gen" 3 166, 3 29 0, S_0x24468e0;
 .timescale -12 -12;
    .port_info 0 /INPUT 1 "clk";
    .port_info 1 /OUTPUT 1 "in";
    .port_info 2 /OUTPUT 10 "state";
    .port_info 3 /INPUT 1 "tb_match";
    .port_info 4 /INPUT 10 "next_state_ref";
    .port_info 5 /INPUT 10 "next_state_dut";
    .port_info 6 /OUTPUT 512 "wavedrom_title";
    .port_info 7 /OUTPUT 1 "wavedrom_enable";
v0x24a9880_0 .net "clk", 0 0, v0x24af000_0;  1 drivers
v0x24a9960_0 .var/2s "errored1", 31 0;
v0x24a9a40_0 .var/2s "errored2", 31 0;
v0x24a9b00_0 .var "in", 0 0;
v0x24a9ba0_0 .net "next_state_dut", 9 0, L_0x24b60b0;  alias, 1 drivers
v0x24a9cb0_0 .net "next_state_ref", 9 0, L_0x24b1e70;  alias, 1 drivers
v0x24a9d70_0 .var/2s "onehot_error", 31 0;
v0x24a9e30_0 .var "state", 9 0;
v0x24a9ef0_0 .var "state_error", 9 0;
v0x24a9fb0_0 .net "tb_match", 0 0, L_0x24b7820;  alias, 1 drivers
v0x24aa070_0 .var "wavedrom_enable", 0 0;
v0x24aa130_0 .var "wavedrom_title", 511 0;
E_0x2442360 .event negedge, v0x24a9880_0;
E_0x24425b0 .event posedge, v0x24a9880_0;
S_0x24a8a90 .scope begin, "$ivl_for_loop0" "$ivl_for_loop0" 3 69, 3 69 0, S_0x24a8850;
 .timescale -12 -12;
v0x24a8cd0_0 .var/2s "i", 31 0;
E_0x2441c30/0 .event negedge, v0x24a9880_0;
E_0x2441c30/1 .event posedge, v0x24a9880_0;
E_0x2441c30 .event/or E_0x2441c30/0, E_0x2441c30/1;
S_0x24a8dd0 .scope begin, "$ivl_for_loop1" "$ivl_for_loop1" 3 74, 3 74 0, S_0x24a8850;
 .timescale -12 -12;
v0x24a8fd0_0 .var/2s "i", 31 0;
S_0x24a90b0 .scope begin, "$ivl_for_loop2" "$ivl_for_loop2" 3 114, 3 114 0, S_0x24a8850;
 .timescale -12 -12;
v0x24a9290_0 .var/2s "i", 31 0;
S_0x24a9370 .scope task, "wavedrom_start" "wavedrom_start" 3 45, 3 45 0, S_0x24a8850;
 .timescale -12 -12;
v0x24a9550_0 .var "title", 511 0;
TD_tb.stim1.wavedrom_start ;
    %end;
S_0x24a9650 .scope task, "wavedrom_stop" "wavedrom_stop" 3 48, 3 48 0, S_0x24a8850;
 .timescale -12 -12;
TD_tb.stim1.wavedrom_stop ;
    %delay 1, 0;
    %end;
S_0x24aa310 .scope module, "top_module1" "top_module" 3 178, 4 1 0, S_0x24468e0;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "in";
    .port_info 1 /INPUT 10 "state";
    .port_info 2 /OUTPUT 10 "next_state";
    .port_info 3 /OUTPUT 1 "out1";
    .port_info 4 /OUTPUT 1 "out2";
L_0x24b2690 .functor NOT 1, v0x24a9b00_0, C4<0>, C4<0>, C4<0>;
L_0x24b2700 .functor AND 1, L_0x24b25f0, L_0x24b2690, C4<1>, C4<1>;
L_0x24b28b0 .functor NOT 1, v0x24a9b00_0, C4<0>, C4<0>, C4<0>;
L_0x24b2920 .functor AND 1, L_0x24b2810, L_0x24b28b0, C4<1>, C4<1>;
L_0x24b2a30 .functor OR 1, L_0x24b2700, L_0x24b2920, C4<0>, C4<0>;
L_0x24b2be0 .functor NOT 1, v0x24a9b00_0, C4<0>, C4<0>, C4<0>;
L_0x24b2ea0 .functor AND 1, L_0x24b2b40, L_0x24b2be0, C4<1>, C4<1>;
L_0x24b2fb0 .functor OR 1, L_0x24b2a30, L_0x24b2ea0, C4<0>, C4<0>;
L_0x24b31b0 .functor NOT 1, v0x24a9b00_0, C4<0>, C4<0>, C4<0>;
L_0x24b3220 .functor AND 1, L_0x24b3110, L_0x24b31b0, C4<1>, C4<1>;
L_0x24b3390 .functor OR 1, L_0x24b2fb0, L_0x24b3220, C4<0>, C4<0>;
L_0x24b34f0 .functor NOT 1, v0x24a9b00_0, C4<0>, C4<0>, C4<0>;
L_0x24b35d0 .functor AND 1, L_0x24b3450, L_0x24b34f0, C4<1>, C4<1>;
L_0x24b36e0 .functor OR 1, L_0x24b3390, L_0x24b35d0, C4<0>, C4<0>;
L_0x24b3560 .functor NOT 1, v0x24a9b00_0, C4<0>, C4<0>, C4<0>;
L_0x24b3950 .functor AND 1, L_0x24b3870, L_0x24b3560, C4<1>, C4<1>;
L_0x24b3af0 .functor OR 1, L_0x24b36e0, L_0x24b3950, C4<0>, C4<0>;
L_0x24b3ca0 .functor NOT 1, v0x24a9b00_0, C4<0>, C4<0>, C4<0>;
L_0x24b3db0 .functor AND 1, L_0x24b3c00, L_0x24b3ca0, C4<1>, C4<1>;
L_0x24b3ec0 .functor OR 1, L_0x24b3af0, L_0x24b3db0, C4<0>, C4<0>;
L_0x24b40d0 .functor NOT 1, v0x24a9b00_0, C4<0>, C4<0>, C4<0>;
L_0x24b4140 .functor AND 1, L_0x24b3d10, L_0x24b40d0, C4<1>, C4<1>;
L_0x24b4310 .functor OR 1, L_0x24b3ec0, L_0x24b4140, C4<0>, C4<0>;
L_0x24b48d0 .functor AND 1, L_0x24b4420, v0x24a9b00_0, C4<1>, C4<1>;
L_0x24b4b60 .functor AND 1, L_0x24b4a60, v0x24a9b00_0, C4<1>, C4<1>;
L_0x24b4bd0 .functor OR 1, L_0x24b48d0, L_0x24b4b60, C4<0>, C4<0>;
L_0x24b4e60 .functor AND 1, L_0x24b4dc0, v0x24a9b00_0, C4<1>, C4<1>;
L_0x24b4f20 .functor OR 1, L_0x24b4bd0, L_0x24b4e60, C4<0>, C4<0>;
L_0x24b5230 .functor AND 1, L_0x24b5120, v0x24a9b00_0, C4<1>, C4<1>;
L_0x24b5390 .functor AND 1, L_0x24b52f0, v0x24a9b00_0, C4<1>, C4<1>;
L_0x24b51c0 .functor AND 1, L_0x24b5550, v0x24a9b00_0, C4<1>, C4<1>;
L_0x24b5760 .functor AND 1, L_0x24b56c0, v0x24a9b00_0, C4<1>, C4<1>;
L_0x24b5a60 .functor AND 1, L_0x24b5930, v0x24a9b00_0, C4<1>, C4<1>;
L_0x24b5bc0 .functor AND 1, L_0x24b5b20, v0x24a9b00_0, C4<1>, C4<1>;
L_0x24b5ee0 .functor AND 1, L_0x24b5da0, v0x24a9b00_0, C4<1>, C4<1>;
L_0x24b5fa0 .functor OR 1, L_0x24b5bc0, L_0x24b5ee0, C4<0>, C4<0>;
L_0x24b6280 .functor NOT 1, v0x24a9b00_0, C4<0>, C4<0>, C4<0>;
L_0x24b6700 .functor AND 1, L_0x24b61e0, L_0x24b6280, C4<1>, C4<1>;
L_0x24b6c80 .functor NOT 1, v0x24a9b00_0, C4<0>, C4<0>, C4<0>;
L_0x24b6cf0 .functor AND 1, L_0x24b5e40, L_0x24b6c80, C4<1>, C4<1>;
L_0x24b71a0 .functor OR 1, L_0x24b6fa0, L_0x24b7100, C4<0>, C4<0>;
v0x24aa580_0 .net *"_ivl_10", 0 0, L_0x24b28b0;  1 drivers
v0x24aa660_0 .net *"_ivl_103", 0 0, L_0x24b56c0;  1 drivers
v0x24aa740_0 .net *"_ivl_104", 0 0, L_0x24b5760;  1 drivers
v0x24aa830_0 .net *"_ivl_109", 0 0, L_0x24b5930;  1 drivers
v0x24aa910_0 .net *"_ivl_110", 0 0, L_0x24b5a60;  1 drivers
v0x24aaa40_0 .net *"_ivl_115", 0 0, L_0x24b5b20;  1 drivers
v0x24aab20_0 .net *"_ivl_116", 0 0, L_0x24b5bc0;  1 drivers
v0x24aac00_0 .net *"_ivl_119", 0 0, L_0x24b5da0;  1 drivers
v0x24aace0_0 .net *"_ivl_12", 0 0, L_0x24b2920;  1 drivers
v0x24aae50_0 .net *"_ivl_120", 0 0, L_0x24b5ee0;  1 drivers
v0x24aaf30_0 .net *"_ivl_122", 0 0, L_0x24b5fa0;  1 drivers
v0x24ab010_0 .net *"_ivl_127", 0 0, L_0x24b61e0;  1 drivers
v0x24ab0f0_0 .net *"_ivl_128", 0 0, L_0x24b6280;  1 drivers
v0x24ab1d0_0 .net *"_ivl_130", 0 0, L_0x24b6700;  1 drivers
v0x24ab2b0_0 .net *"_ivl_136", 0 0, L_0x24b5e40;  1 drivers
v0x24ab390_0 .net *"_ivl_137", 0 0, L_0x24b6c80;  1 drivers
v0x24ab470_0 .net *"_ivl_139", 0 0, L_0x24b6cf0;  1 drivers
v0x24ab660_0 .net *"_ivl_14", 0 0, L_0x24b2a30;  1 drivers
v0x24ab740_0 .net *"_ivl_142", 0 0, L_0x24b6fa0;  1 drivers
v0x24ab820_0 .net *"_ivl_144", 0 0, L_0x24b7100;  1 drivers
v0x24ab900_0 .net *"_ivl_17", 0 0, L_0x24b2b40;  1 drivers
v0x24ab9e0_0 .net *"_ivl_18", 0 0, L_0x24b2be0;  1 drivers
v0x24abac0_0 .net *"_ivl_20", 0 0, L_0x24b2ea0;  1 drivers
v0x24abba0_0 .net *"_ivl_22", 0 0, L_0x24b2fb0;  1 drivers
v0x24abc80_0 .net *"_ivl_25", 0 0, L_0x24b3110;  1 drivers
v0x24abd60_0 .net *"_ivl_26", 0 0, L_0x24b31b0;  1 drivers
v0x24abe40_0 .net *"_ivl_28", 0 0, L_0x24b3220;  1 drivers
v0x24abf20_0 .net *"_ivl_3", 0 0, L_0x24b25f0;  1 drivers
v0x24ac000_0 .net *"_ivl_30", 0 0, L_0x24b3390;  1 drivers
v0x24ac0e0_0 .net *"_ivl_33", 0 0, L_0x24b3450;  1 drivers
v0x24ac1c0_0 .net *"_ivl_34", 0 0, L_0x24b34f0;  1 drivers
v0x24ac2a0_0 .net *"_ivl_36", 0 0, L_0x24b35d0;  1 drivers
v0x24ac380_0 .net *"_ivl_38", 0 0, L_0x24b36e0;  1 drivers
v0x24ac670_0 .net *"_ivl_4", 0 0, L_0x24b2690;  1 drivers
v0x24ac750_0 .net *"_ivl_41", 0 0, L_0x24b3870;  1 drivers
v0x24ac830_0 .net *"_ivl_42", 0 0, L_0x24b3560;  1 drivers
v0x24ac910_0 .net *"_ivl_44", 0 0, L_0x24b3950;  1 drivers
v0x24ac9f0_0 .net *"_ivl_46", 0 0, L_0x24b3af0;  1 drivers
v0x24acad0_0 .net *"_ivl_49", 0 0, L_0x24b3c00;  1 drivers
v0x24acbb0_0 .net *"_ivl_50", 0 0, L_0x24b3ca0;  1 drivers
v0x24acc90_0 .net *"_ivl_52", 0 0, L_0x24b3db0;  1 drivers
v0x24acd70_0 .net *"_ivl_54", 0 0, L_0x24b3ec0;  1 drivers
v0x24ace50_0 .net *"_ivl_57", 0 0, L_0x24b3d10;  1 drivers
v0x24acf30_0 .net *"_ivl_58", 0 0, L_0x24b40d0;  1 drivers
v0x24ad010_0 .net *"_ivl_6", 0 0, L_0x24b2700;  1 drivers
v0x24ad0f0_0 .net *"_ivl_60", 0 0, L_0x24b4140;  1 drivers
v0x24ad1d0_0 .net *"_ivl_62", 0 0, L_0x24b4310;  1 drivers
v0x24ad2b0_0 .net *"_ivl_67", 0 0, L_0x24b4420;  1 drivers
v0x24ad390_0 .net *"_ivl_68", 0 0, L_0x24b48d0;  1 drivers
v0x24ad470_0 .net *"_ivl_71", 0 0, L_0x24b4a60;  1 drivers
v0x24ad550_0 .net *"_ivl_72", 0 0, L_0x24b4b60;  1 drivers
v0x24ad630_0 .net *"_ivl_74", 0 0, L_0x24b4bd0;  1 drivers
v0x24ad710_0 .net *"_ivl_77", 0 0, L_0x24b4dc0;  1 drivers
v0x24ad7f0_0 .net *"_ivl_78", 0 0, L_0x24b4e60;  1 drivers
v0x24ad8d0_0 .net *"_ivl_80", 0 0, L_0x24b4f20;  1 drivers
v0x24ad9b0_0 .net *"_ivl_85", 0 0, L_0x24b5120;  1 drivers
v0x24ada90_0 .net *"_ivl_86", 0 0, L_0x24b5230;  1 drivers
v0x24adb70_0 .net *"_ivl_9", 0 0, L_0x24b2810;  1 drivers
v0x24adc50_0 .net *"_ivl_91", 0 0, L_0x24b52f0;  1 drivers
v0x24add30_0 .net *"_ivl_92", 0 0, L_0x24b5390;  1 drivers
v0x24ade10_0 .net *"_ivl_97", 0 0, L_0x24b5550;  1 drivers
v0x24adef0_0 .net *"_ivl_98", 0 0, L_0x24b51c0;  1 drivers
v0x24adfd0_0 .net "in", 0 0, v0x24a9b00_0;  alias, 1 drivers
v0x24ae070_0 .net "next_state", 9 0, L_0x24b60b0;  alias, 1 drivers
v0x24ae130_0 .net "out1", 0 0, L_0x24b71a0;  alias, 1 drivers
v0x24ae5e0_0 .net "out2", 0 0, L_0x24b7300;  alias, 1 drivers
v0x24ae6a0_0 .net "state", 9 0, v0x24a9e30_0;  alias, 1 drivers
L_0x24b25f0 .part v0x24a9e30_0, 0, 1;
L_0x24b2810 .part v0x24a9e30_0, 1, 1;
L_0x24b2b40 .part v0x24a9e30_0, 2, 1;
L_0x24b3110 .part v0x24a9e30_0, 3, 1;
L_0x24b3450 .part v0x24a9e30_0, 4, 1;
L_0x24b3870 .part v0x24a9e30_0, 7, 1;
L_0x24b3c00 .part v0x24a9e30_0, 8, 1;
L_0x24b3d10 .part v0x24a9e30_0, 9, 1;
L_0x24b4420 .part v0x24a9e30_0, 0, 1;
L_0x24b4a60 .part v0x24a9e30_0, 7, 1;
L_0x24b4dc0 .part v0x24a9e30_0, 8, 1;
L_0x24b5120 .part v0x24a9e30_0, 1, 1;
L_0x24b52f0 .part v0x24a9e30_0, 2, 1;
L_0x24b5550 .part v0x24a9e30_0, 3, 1;
L_0x24b56c0 .part v0x24a9e30_0, 4, 1;
L_0x24b5930 .part v0x24a9e30_0, 5, 1;
L_0x24b5b20 .part v0x24a9e30_0, 6, 1;
L_0x24b5da0 .part v0x24a9e30_0, 7, 1;
L_0x24b61e0 .part v0x24a9e30_0, 5, 1;
LS_0x24b60b0_0_0 .concat8 [ 1 1 1 1], L_0x24b4310, L_0x24b4f20, L_0x24b5230, L_0x24b5390;
LS_0x24b60b0_0_4 .concat8 [ 1 1 1 1], L_0x24b51c0, L_0x24b5760, L_0x24b5a60, L_0x24b5fa0;
LS_0x24b60b0_0_8 .concat8 [ 1 1 0 0], L_0x24b6700, L_0x24b6cf0;
L_0x24b60b0 .concat8 [ 4 4 2 0], LS_0x24b60b0_0_0, LS_0x24b60b0_0_4, LS_0x24b60b0_0_8;
L_0x24b5e40 .part v0x24a9e30_0, 6, 1;
L_0x24b6fa0 .part v0x24a9e30_0, 7, 1;
L_0x24b7100 .part v0x24a9e30_0, 8, 1;
L_0x24b7300 .part v0x24a9e30_0, 7, 1;
S_0x24ae850 .scope task, "wait_for_end_of_timestep" "wait_for_end_of_timestep" 3 187, 3 187 0, S_0x24468e0;
 .timescale -12 -12;
E_0x2428a20 .event anyedge, v0x24af6e0_0;
TD_tb.wait_for_end_of_timestep ;
    %pushi/vec4 5, 0, 32;
T_2.0 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_2.1, 5;
    %jmp/1 T_2.1, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %load/vec4 v0x24af6e0_0;
    %nor/r;
    %assign/vec4 v0x24af6e0_0, 0;
    %wait E_0x2428a20;
    %jmp T_2.0;
T_2.1 ;
    %pop/vec4 1;
    %end;
    .scope S_0x24a8850;
T_3 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x24a9960_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x24a9a40_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x24a9d70_0, 0, 32;
    %pushi/vec4 0, 0, 10;
    %store/vec4 v0x24a9ef0_0, 0, 10;
    %end;
    .thread T_3, $init;
    .scope S_0x24a8850;
T_4 ;
    %pushi/vec4 2, 0, 32;
T_4.0 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_4.1, 5;
    %jmp/1 T_4.1, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_0x24425b0;
    %jmp T_4.0;
T_4.1 ;
    %pop/vec4 1;
T_4.2 ;
    %wait E_0x2441c30;
    %load/vec4 v0x24a9ef0_0;
    %load/vec4 v0x24a9cb0_0;
    %load/vec4 v0x24a9ba0_0;
    %xor;
    %or;
    %assign/vec4 v0x24a9ef0_0, 0;
    %jmp T_4.2;
T_4.3 ;
    %end;
    .thread T_4;
    .scope S_0x24a8850;
T_5 ;
    %pushi/vec4 0, 0, 10;
    %assign/vec4 v0x24a9e30_0, 0;
    %wait E_0x2442360;
    %fork t_1, S_0x24a8a90;
    %jmp t_0;
    .scope S_0x24a8a90;
t_1 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x24a8cd0_0, 0, 32;
T_5.0 ; Top of for-loop 
    %load/vec4 v0x24a8cd0_0;
    %cmpi/s 10, 0, 32;
    %jmp/0xz T_5.1, 5;
    %wait E_0x2441c30;
    %pushi/vec4 1, 0, 10;
    %load/vec4 v0x24a8cd0_0;
    %ix/vec4 4;
    %shiftl 4;
    %assign/vec4 v0x24a9e30_0, 0;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0x24a9b00_0, 0;
T_5.2 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x24a8cd0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x24a8cd0_0, 0, 32;
    %jmp T_5.0;
T_5.1 ; for-loop exit label
    %end;
    .scope S_0x24a8850;
t_0 %join;
    %fork t_3, S_0x24a8dd0;
    %jmp t_2;
    .scope S_0x24a8dd0;
t_3 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x24a8fd0_0, 0, 32;
T_5.3 ; Top of for-loop 
    %load/vec4 v0x24a8fd0_0;
    %cmpi/s 10, 0, 32;
    %jmp/0xz T_5.4, 5;
    %wait E_0x2441c30;
    %pushi/vec4 1, 0, 10;
    %load/vec4 v0x24a8fd0_0;
    %ix/vec4 4;
    %shiftl 4;
    %assign/vec4 v0x24a9e30_0, 0;
    %pushi/vec4 1, 0, 1;
    %assign/vec4 v0x24a9b00_0, 0;
T_5.5 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x24a8fd0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x24a8fd0_0, 0, 32;
    %jmp T_5.3;
T_5.4 ; for-loop exit label
    %end;
    .scope S_0x24a8850;
t_2 %join;
    %wait E_0x2442360;
    %fork TD_tb.stim1.wavedrom_stop, S_0x24a9650;
    %join;
    %pushi/vec4 200, 0, 32;
T_5.6 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_5.7, 5;
    %jmp/1 T_5.7, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_0x2441c30;
    %pushi/vec4 1, 0, 10;
    %vpi_func 3 83 "$random" 32 {0 0 0};
    %pushi/vec4 10, 0, 32;
    %mod;
    %ix/vec4 4;
    %shiftl 4;
    %assign/vec4 v0x24a9e30_0, 0;
    %vpi_func 3 84 "$random" 32 {0 0 0};
    %pad/s 1;
    %assign/vec4 v0x24a9b00_0, 0;
    %load/vec4 v0x24a9fb0_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.8, 8;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x24a9d70_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x24a9d70_0, 0, 32;
T_5.8 ;
    %jmp T_5.6;
T_5.7 ;
    %pop/vec4 1;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x24a9960_0, 0, 32;
    %pushi/vec4 400, 0, 32;
T_5.10 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_5.11, 5;
    %jmp/1 T_5.11, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_0x2441c30;
    %pushi/vec4 1, 0, 10;
    %vpi_func 3 91 "$random" 32 {0 0 0};
    %pushi/vec4 10, 0, 32;
    %mod;
    %ix/vec4 4;
    %shiftl 4;
    %pushi/vec4 1, 0, 10;
    %vpi_func 3 91 "$random" 32 {0 0 0};
    %pushi/vec4 10, 0, 32;
    %mod;
    %ix/vec4 4;
    %shiftl 4;
    %or;
    %assign/vec4 v0x24a9e30_0, 0;
    %vpi_func 3 92 "$random" 32 {0 0 0};
    %pad/s 1;
    %assign/vec4 v0x24a9b00_0, 0;
    %load/vec4 v0x24a9fb0_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.12, 8;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x24a9960_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x24a9960_0, 0, 32;
T_5.12 ;
    %jmp T_5.10;
T_5.11 ;
    %pop/vec4 1;
    %load/vec4 v0x24a9d70_0;
    %nor/r;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_5.16, 9;
    %load/vec4 v0x24a9960_0;
    %pushi/vec4 0, 0, 32;
    %cmp/ne;
    %flag_get/vec4 4;
    %and;
T_5.16;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.14, 8;
    %vpi_call/w 3 98 "$display", "Hint: Your circuit passed when given only one-hot inputs, but not with two-hot inputs." {0 0 0};
T_5.14 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x24a9a40_0, 0, 32;
    %pushi/vec4 800, 0, 32;
T_5.17 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_5.18, 5;
    %jmp/1 T_5.18, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_0x2441c30;
    %vpi_func 3 103 "$random" 32 {0 0 0};
    %pad/s 10;
    %assign/vec4 v0x24a9e30_0, 0;
    %vpi_func 3 104 "$random" 32 {0 0 0};
    %pad/s 1;
    %assign/vec4 v0x24a9b00_0, 0;
    %load/vec4 v0x24a9fb0_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.19, 8;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x24a9a40_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x24a9a40_0, 0, 32;
T_5.19 ;
    %jmp T_5.17;
T_5.18 ;
    %pop/vec4 1;
    %load/vec4 v0x24a9d70_0;
    %nor/r;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_5.23, 9;
    %load/vec4 v0x24a9a40_0;
    %pushi/vec4 0, 0, 32;
    %cmp/ne;
    %flag_get/vec4 4;
    %and;
T_5.23;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.21, 8;
    %vpi_call/w 3 109 "$display", "Hint: Your circuit passed when given only one-hot inputs, but not with random inputs." {0 0 0};
T_5.21 ;
    %load/vec4 v0x24a9d70_0;
    %nor/r;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_5.26, 9;
    %load/vec4 v0x24a9960_0;
    %cmpi/ne 0, 0, 32;
    %flag_get/vec4 4;
    %jmp/1 T_5.27, 4;
    %load/vec4 v0x24a9a40_0;
    %pushi/vec4 0, 0, 32;
    %cmp/ne;
    %flag_get/vec4 4;
    %or;
T_5.27;
    %and;
T_5.26;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.24, 8;
    %vpi_call/w 3 112 "$display", "Hint: Are you doing something more complicated than deriving state transition equations by inspection?\012" {0 0 0};
T_5.24 ;
    %fork t_5, S_0x24a90b0;
    %jmp t_4;
    .scope S_0x24a90b0;
t_5 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x24a9290_0, 0, 32;
T_5.28 ; Top of for-loop 
    %load/vec4 v0x24a9290_0;
    %cmpi/u 10, 0, 32;
    %jmp/0xz T_5.29, 5;
    %load/vec4 v0x24a9ef0_0;
    %load/vec4 v0x24a9290_0;
    %part/s 1;
    %cmpi/e 0, 0, 1;
    %flag_mov 8, 6;
    %jmp/0 T_5.31, 8;
    %pushi/vec4 25455, 0, 32; draw_string_vec4
    %pushi/vec4 1920099683, 0, 32; draw_string_vec4
    %concat/vec4; draw_string_vec4
    %pushi/vec4 116, 0, 8; draw_string_vec4
    %concat/vec4; draw_string_vec4
    %jmp/1 T_5.32, 8;
T_5.31 ; End of true expr.
    %pushi/vec4 1768842095, 0, 32; draw_string_vec4
    %pushi/vec4 1920099683, 0, 32; draw_string_vec4
    %concat/vec4; draw_string_vec4
    %pushi/vec4 116, 0, 8; draw_string_vec4
    %concat/vec4; draw_string_vec4
    %jmp/0 T_5.32, 8;
 ; End of false expr.
    %blend;
T_5.32;
    %vpi_call/w 3 115 "$display", "Hint: next_state[%0d] is %s.", v0x24a9290_0, S<0,vec4,u72> {1 0 0};
T_5.30 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x24a9290_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x24a9290_0, 0, 32;
    %jmp T_5.28;
T_5.29 ; for-loop exit label
    %end;
    .scope S_0x24a8850;
t_4 %join;
    %delay 1, 0;
    %vpi_call/w 3 117 "$finish" {0 0 0};
    %end;
    .thread T_5;
    .scope S_0x24468e0;
T_6 ;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x24af000_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x24af6e0_0, 0, 1;
    %end;
    .thread T_6, $init;
    .scope S_0x24468e0;
T_7 ;
T_7.0 ;
    %delay 5, 0;
    %load/vec4 v0x24af000_0;
    %inv;
    %store/vec4 v0x24af000_0, 0, 1;
    %jmp T_7.0;
T_7.1 ;
    %end;
    .thread T_7;
    .scope S_0x24468e0;
T_8 ;
    %vpi_call/w 3 158 "$dumpfile", "wave.vcd" {0 0 0};
    %vpi_call/w 3 159 "$dumpvars", 32'sb00000000000000000000000000000001, v0x24a9880_0, v0x24af850_0, v0x24af0a0_0, v0x24af5a0_0, v0x24af1e0_0, v0x24af140_0, v0x24af390_0, v0x24af2f0_0, v0x24af4d0_0, v0x24af430_0 {0 0 0};
    %end;
    .thread T_8;
    .scope S_0x24468e0;
T_9 ;
    %load/vec4 v0x24af640_0;
    %parti/u 32, 192, 32;
    %cmpi/ne 0, 0, 32;
    %jmp/0xz  T_9.0, 4;
    %load/vec4 v0x24af640_0;
    %parti/u 32, 192, 32;
    %load/vec4 v0x24af640_0;
    %parti/u 32, 160, 32;
    %vpi_call/w 3 196 "$display", "Hint: Output '%s' has %0d mismatches. First mismatch occurred at time %0d.", "next_state", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %jmp T_9.1;
T_9.0 ;
    %vpi_call/w 3 197 "$display", "Hint: Output '%s' has no mismatches.", "next_state" {0 0 0};
T_9.1 ;
    %load/vec4 v0x24af640_0;
    %parti/u 32, 128, 32;
    %cmpi/ne 0, 0, 32;
    %jmp/0xz  T_9.2, 4;
    %load/vec4 v0x24af640_0;
    %parti/u 32, 128, 32;
    %load/vec4 v0x24af640_0;
    %parti/u 32, 96, 32;
    %vpi_call/w 3 198 "$display", "Hint: Output '%s' has %0d mismatches. First mismatch occurred at time %0d.", "out1", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %jmp T_9.3;
T_9.2 ;
    %vpi_call/w 3 199 "$display", "Hint: Output '%s' has no mismatches.", "out1" {0 0 0};
T_9.3 ;
    %load/vec4 v0x24af640_0;
    %parti/u 32, 64, 32;
    %cmpi/ne 0, 0, 32;
    %jmp/0xz  T_9.4, 4;
    %load/vec4 v0x24af640_0;
    %parti/u 32, 64, 32;
    %load/vec4 v0x24af640_0;
    %parti/u 32, 32, 32;
    %vpi_call/w 3 200 "$display", "Hint: Output '%s' has %0d mismatches. First mismatch occurred at time %0d.", "out2", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %jmp T_9.5;
T_9.4 ;
    %vpi_call/w 3 201 "$display", "Hint: Output '%s' has no mismatches.", "out2" {0 0 0};
T_9.5 ;
    %load/vec4 v0x24af640_0;
    %parti/u 32, 256, 32;
    %load/vec4 v0x24af640_0;
    %parti/u 32, 0, 32;
    %vpi_call/w 3 203 "$display", "Hint: Total mismatched samples is %1d out of %1d samples\012", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %vpi_call/w 3 204 "$display", "Simulation finished at %0d ps", $time {0 0 0};
    %load/vec4 v0x24af640_0;
    %parti/u 32, 256, 32;
    %load/vec4 v0x24af640_0;
    %parti/u 32, 0, 32;
    %vpi_call/w 3 205 "$display", "Mismatches: %1d in %1d samples", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %end;
    .thread T_9, $final;
    .scope S_0x24468e0;
T_10 ;
    %wait E_0x2441c30;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x24af640_0;
    %pushi/vec4 0, 0, 32;
    %part/u 32;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x24af640_0, 4, 32;
    %load/vec4 v0x24af780_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_10.0, 8;
    %load/vec4 v0x24af640_0;
    %parti/u 32, 256, 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_10.2, 4;
    %vpi_func 3 216 "$time" 64 {0 0 0};
    %cast2;
    %pad/u 32;
    %ix/load 4, 224, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x24af640_0, 4, 32;
T_10.2 ;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x24af640_0;
    %pushi/vec4 256, 0, 32;
    %part/u 32;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %ix/load 4, 256, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x24af640_0, 4, 32;
T_10.0 ;
    %load/vec4 v0x24af1e0_0;
    %load/vec4 v0x24af1e0_0;
    %load/vec4 v0x24af140_0;
    %xor;
    %load/vec4 v0x24af1e0_0;
    %xor;
    %cmp/ne;
    %jmp/0xz  T_10.4, 6;
    %load/vec4 v0x24af640_0;
    %parti/u 32, 192, 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_10.6, 4;
    %vpi_func 3 220 "$time" 64 {0 0 0};
    %cast2;
    %pad/u 32;
    %ix/load 4, 160, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x24af640_0, 4, 32;
T_10.6 ;
    %load/vec4 v0x24af640_0;
    %parti/u 32, 192, 32;
    %addi 1, 0, 32;
    %ix/load 4, 192, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x24af640_0, 4, 32;
T_10.4 ;
    %load/vec4 v0x24af390_0;
    %load/vec4 v0x24af390_0;
    %load/vec4 v0x24af2f0_0;
    %xor;
    %load/vec4 v0x24af390_0;
    %xor;
    %cmp/ne;
    %jmp/0xz  T_10.8, 6;
    %load/vec4 v0x24af640_0;
    %parti/u 32, 128, 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_10.10, 4;
    %vpi_func 3 223 "$time" 64 {0 0 0};
    %cast2;
    %pad/u 32;
    %ix/load 4, 96, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x24af640_0, 4, 32;
T_10.10 ;
    %load/vec4 v0x24af640_0;
    %parti/u 32, 128, 32;
    %addi 1, 0, 32;
    %ix/load 4, 128, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x24af640_0, 4, 32;
T_10.8 ;
    %load/vec4 v0x24af4d0_0;
    %load/vec4 v0x24af4d0_0;
    %load/vec4 v0x24af430_0;
    %xor;
    %load/vec4 v0x24af4d0_0;
    %xor;
    %cmp/ne;
    %jmp/0xz  T_10.12, 6;
    %load/vec4 v0x24af640_0;
    %parti/u 32, 64, 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_10.14, 4;
    %vpi_func 3 226 "$time" 64 {0 0 0};
    %cast2;
    %pad/u 32;
    %ix/load 4, 32, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x24af640_0, 4, 32;
T_10.14 ;
    %load/vec4 v0x24af640_0;
    %parti/u 32, 64, 32;
    %addi 1, 0, 32;
    %ix/load 4, 64, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x24af640_0, 4, 32;
T_10.12 ;
    %jmp T_10;
    .thread T_10;
# The file index is used to find the file name in the following table.
:file_names 5;
    "N/A";
    "<interactive>";
    "-";
    "/home/jmb9986/AutoChip/autochip_scripts/../verilogeval_prompts_tbs/ve_testbenches_human/fsm_onehot/fsm_onehot_tb.sv";
    "/home/jmb9986/AutoChip/autochip_scripts/outputs/claude-3-haiku-20240307/fsm_onehot/iter1/response0/top_module.sv";
