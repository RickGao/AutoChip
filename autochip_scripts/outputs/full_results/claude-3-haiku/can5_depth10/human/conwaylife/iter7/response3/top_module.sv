module top_module(
    input clk,
    input load,
    input [255:0] data,
    output reg [255:0] q
);

reg [255:0] next_q;

always @(posedge clk) begin
    if (load) begin
        q <= data;
    end
    else begin
        q <= next_q;
    end
end

always @(*) begin
    // Compute the next state of the game
    next_q[255:240] = ((q[254:240] & {q[253:240], 1'b0}) | (q[255:240] & ~(q[254:240] | {q[253:240], 1'b0}))) & 16'hFFFF;
    next_q[239:224] = ((q[238:224] & {q[237:224], 1'b0}) | (q[239:224] & ~(q[238:224] | {q[237:224], 1'b0}))) & 16'hFFFF;
    next_q[223:208] = ((q[222:208] & {q[221:208], 1'b0}) | (q[223:208] & ~(q[222:208] | {q[221:208], 1'b0}))) & 16'hFFFF;
    next_q[207:192] = ((q[206:192] & {q[205:192], 1'b0}) | (q[207:192] & ~(q[206:192] | {q[205:192], 1'b0}))) & 16'hFFFF;
    next_q[191:176] = ((q[190:176] & {q[189:176], 1'b0}) | (q[191:176] & ~(q[190:176] | {q[189:176], 1'b0}))) & 16'hFFFF;
    next_q[175:160] = ((q[174:160] & {q[173:160], 1'b0}) | (q[175:160] & ~(q[174:160] | {q[173:160], 1'b0}))) & 16'hFFFF;
    next_q[159:144] = ((q[158:144] & {q[157:144], 1'b0}) | (q[159:144] & ~(q[158:144] | {q[157:144], 1'b0}))) & 16'hFFFF;
    next_q[143:128] = ((q[142:128] & {q[141:128], 1'b0}) | (q[143:128] & ~(q[142:128] | {q[141:128], 1'b0}))) & 16'hFFFF;
    next_q[127:112] = ((q[126:112] & {q[125:112], 1'b0}) | (q[127:112] & ~(q[126:112] | {q[125:112], 1'b0}))) & 16'hFFFF;
    next_q[111:96] = ((q[110:96] & {q[109:96], 1'b0}) | (q[111:96] & ~(q[110:96] | {q[109:96], 1'b0}))) & 16'hFFFF;
    next_q[95:80] = ((q[94:80] & {q[93:80], 1'b0}) | (q[95:80] & ~(q[94:80] | {q[93:80], 1'b0}))) & 16'hFFFF;
    next_q[79:64] = ((q[78:64] & {q[77:64], 1'b0}) | (q[79:64] & ~(q[78:64] | {q[77:64], 1'b0}))) & 16'hFFFF;
    next_q[63:48] = ((q[62:48] & {q[61:48], 1'b0}) | (q[63:48] & ~(q[62:48] | {q[61:48], 1'b0}))) & 16'hFFFF;
    next_q[47:32] = ((q[46:32] & {q[45:32], 1'b0}) | (q[47:32] & ~(q[46:32] | {q[45:32], 1'b0}))) & 16'hFFFF;
    next_q[31:16] = ((q[30:16] & {q[29:16], 1'b0}) | (q[31:16] & ~(q[30:16] | {q[29:16], 1'b0}))) & 16'hFFFF;
    next_q[15:0] = ((q[14:0] & {q[13:0], 1'b0}) | (q[15:0] & ~(q[14:0] | {q[13:0], 1'b0}))) & 16'hFFFF;
end

endmodule
