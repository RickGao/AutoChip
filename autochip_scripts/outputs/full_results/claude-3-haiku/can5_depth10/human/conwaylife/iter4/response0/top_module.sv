module top_module(
    input clk,
    input load,
    input [255:0] data,
    output reg [255:0] q
);

reg [255:0] next_q;

always @(posedge clk) begin
    if (load) begin
        q <= data;
    end
    else begin
        q <= next_q;
    end
end

always @(*) begin
    // Compute the next state of the game
    next_q[255:240] = (q[254:240] & q[15:0]) | (~q[254:240] & (q[255:240] & q[15:0]) & 16'b0000000000000011);
    next_q[239:224] = (q[238:224] & q[31:16]) | (~q[238:224] & (q[239:224] & q[31:16]) & 16'b0000000000000011);
    next_q[223:208] = (q[222:208] & q[47:32]) | (~q[222:208] & (q[223:208] & q[47:32]) & 16'b0000000000000011);
    next_q[207:192] = (q[206:192] & q[63:48]) | (~q[206:192] & (q[207:192] & q[63:48]) & 16'b0000000000000011);
    next_q[191:176] = (q[190:176] & q[79:64]) | (~q[190:176] & (q[191:176] & q[79:64]) & 16'b0000000000000011);
    next_q[175:160] = (q[174:160] & q[95:80]) | (~q[174:160] & (q[175:160] & q[95:80]) & 16'b0000000000000011);
    next_q[159:144] = (q[158:144] & q[111:96]) | (~q[158:144] & (q[159:144] & q[111:96]) & 16'b0000000000000011);
    next_q[143:128] = (q[142:128] & q[127:112]) | (~q[142:128] & (q[143:128] & q[127:112]) & 16'b0000000000000011);
    next_q[127:112] = (q[126:112] & q[143:128]) | (~q[126:112] & (q[127:112] & q[143:128]) & 16'b0000000000000011);
    next_q[111:96] = (q[110:96] & q[159:144]) | (~q[110:96] & (q[111:96] & q[159:144]) & 16'b0000000000000011);
    next_q[95:80] = (q[94:80] & q[175:160]) | (~q[94:80] & (q[95:80] & q[175:160]) & 16'b0000000000000011);
    next_q[79:64] = (q[78:64] & q[191:176]) | (~q[78:64] & (q[79:64] & q[191:176]) & 16'b0000000000000011);
    next_q[63:48] = (q[62:48] & q[207:192]) | (~q[62:48] & (q[63:48] & q[207:192]) & 16'b0000000000000011);
    next_q[47:32] = (q[46:32] & q[223:208]) | (~q[46:32] & (q[47:32] & q[223:208]) & 16'b0000000000000011);
    next_q[31:16] = (q[30:16] & q[239:224]) | (~q[30:16] & (q[31:16] & q[239:224]) & 16'b0000000000000011);
    next_q[15:0] = (q[14:0] & q[255:240]) | (~q[14:0] & (q[15:0] & q[255:240]) & 16'b0000000000000011);
end

endmodule
