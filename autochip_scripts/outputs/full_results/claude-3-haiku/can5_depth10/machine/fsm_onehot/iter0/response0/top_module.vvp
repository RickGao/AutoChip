#! /usr/local/bin/vvp
:ivl_version "13.0 (devel)" "(s20221226-331-g77d7f0b8f)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision - 12;
:vpi_module "/usr/local/lib/ivl/system.vpi";
:vpi_module "/usr/local/lib/ivl/vhdl_sys.vpi";
:vpi_module "/usr/local/lib/ivl/vhdl_textio.vpi";
:vpi_module "/usr/local/lib/ivl/v2005_math.vpi";
:vpi_module "/usr/local/lib/ivl/va_math.vpi";
:vpi_module "/usr/local/lib/ivl/v2009.vpi";
S_0x1533230 .scope package, "$unit" "$unit" 2 1;
 .timescale 0 0;
S_0x15469f0 .scope module, "tb" "tb" 3 122;
 .timescale -12 -12;
L_0x15336c0 .functor NOT 1, L_0x15ae0b0, C4<0>, C4<0>, C4<0>;
L_0x15adf30 .functor XOR 12, L_0x15addf0, L_0x15ade90, C4<000000000000>, C4<000000000000>;
L_0x15ae040 .functor XOR 12, L_0x15adf30, L_0x15adfa0, C4<000000000000>, C4<000000000000>;
v0x15a73c0_0 .net *"_ivl_10", 11 0, L_0x15adfa0;  1 drivers
v0x15a74c0_0 .net *"_ivl_12", 11 0, L_0x15ae040;  1 drivers
v0x15a75a0_0 .net *"_ivl_2", 11 0, L_0x15add50;  1 drivers
v0x15a7660_0 .net *"_ivl_4", 11 0, L_0x15addf0;  1 drivers
v0x15a7740_0 .net *"_ivl_6", 11 0, L_0x15ade90;  1 drivers
v0x15a7870_0 .net *"_ivl_8", 11 0, L_0x15adf30;  1 drivers
v0x15a7950_0 .var "clk", 0 0;
v0x15a79f0_0 .net "in", 0 0, v0x15a3d80_0;  1 drivers
v0x15a7a90_0 .net "next_state_dut", 9 0, L_0x15ad610;  1 drivers
v0x15a7b30_0 .net "next_state_ref", 9 0, L_0x15aa9d0;  1 drivers
v0x15a7c40_0 .net "out1_dut", 0 0, L_0x15ab290;  1 drivers
v0x15a7ce0_0 .net "out1_ref", 0 0, L_0x1536510;  1 drivers
v0x15a7d80_0 .net "out2_dut", 0 0, L_0x15ab530;  1 drivers
v0x15a7e20_0 .net "out2_ref", 0 0, L_0x15373b0;  1 drivers
v0x15a7ef0_0 .net "state", 9 0, v0x15a40b0_0;  1 drivers
v0x15a7f90_0 .var/2u "stats1", 287 0;
v0x15a8030_0 .var/2u "strobe", 0 0;
v0x15a80d0_0 .net "tb_match", 0 0, L_0x15ae0b0;  1 drivers
v0x15a81a0_0 .net "tb_mismatch", 0 0, L_0x15336c0;  1 drivers
v0x15a8240_0 .net "wavedrom_enable", 0 0, v0x15a42f0_0;  1 drivers
v0x15a8310_0 .net "wavedrom_title", 511 0, v0x15a43b0_0;  1 drivers
L_0x15add50 .concat [ 1 1 10 0], L_0x15373b0, L_0x1536510, L_0x15aa9d0;
L_0x15addf0 .concat [ 1 1 10 0], L_0x15373b0, L_0x1536510, L_0x15aa9d0;
L_0x15ade90 .concat [ 1 1 10 0], L_0x15ab530, L_0x15ab290, L_0x15ad610;
L_0x15adfa0 .concat [ 1 1 10 0], L_0x15373b0, L_0x1536510, L_0x15aa9d0;
L_0x15ae0b0 .cmp/eeq 12, L_0x15add50, L_0x15ae040;
S_0x1546b80 .scope module, "good1" "reference_module" 3 171, 3 4 0, S_0x15469f0;
 .timescale -12 -12;
    .port_info 0 /INPUT 1 "in";
    .port_info 1 /INPUT 10 "state";
    .port_info 2 /OUTPUT 10 "next_state";
    .port_info 3 /OUTPUT 1 "out1";
    .port_info 4 /OUTPUT 1 "out2";
L_0x1536510 .functor OR 1, L_0x15a8460, L_0x15a8500, C4<0>, C4<0>;
L_0x15373b0 .functor OR 1, L_0x15a8690, L_0x15a8730, C4<0>, C4<0>;
L_0x1537b00 .functor OR 1, L_0x15a8c10, L_0x15a8cb0, C4<0>, C4<0>;
L_0x1534510 .functor OR 1, L_0x1537b00, L_0x15a8e40, C4<0>, C4<0>;
L_0x15545b0 .functor OR 1, L_0x1534510, L_0x15a8fb0, C4<0>, C4<0>;
L_0x157a6f0 .functor AND 1, L_0x15a88f0, L_0x15545b0, C4<1>, C4<1>;
L_0x15a9390 .functor OR 1, L_0x15a91e0, L_0x15a9280, C4<0>, C4<0>;
L_0x15a9540 .functor OR 1, L_0x15a9390, L_0x15a94a0, C4<0>, C4<0>;
L_0x15a96a0 .functor AND 1, v0x15a3d80_0, L_0x15a9540, C4<1>, C4<1>;
L_0x15a9320 .functor AND 1, v0x15a3d80_0, L_0x15a9760, C4<1>, C4<1>;
L_0x15a9be0 .functor AND 1, v0x15a3d80_0, L_0x15a9930, C4<1>, C4<1>;
L_0x15a9d80 .functor AND 1, v0x15a3d80_0, L_0x15a9c50, C4<1>, C4<1>;
L_0x15a9f50 .functor AND 1, v0x15a3d80_0, L_0x15a9eb0, C4<1>, C4<1>;
L_0x15aa180 .functor AND 1, v0x15a3d80_0, L_0x15aa040, C4<1>, C4<1>;
L_0x15a9e40 .functor OR 1, L_0x15aa2f0, L_0x15aa390, C4<0>, C4<0>;
L_0x15aa5e0 .functor AND 1, v0x15a3d80_0, L_0x15a9e40, C4<1>, C4<1>;
L_0x15aa890 .functor AND 1, L_0x15aa0e0, L_0x15aa730, C4<1>, C4<1>;
L_0x15aaf50 .functor AND 1, L_0x15aad40, L_0x15aaeb0, C4<1>, C4<1>;
v0x15366c0_0 .net *"_ivl_1", 0 0, L_0x15a8460;  1 drivers
v0x15374c0_0 .net *"_ivl_100", 0 0, L_0x15aad40;  1 drivers
v0x1537560_0 .net *"_ivl_102", 0 0, L_0x15aaeb0;  1 drivers
v0x1537d70_0 .net *"_ivl_104", 0 0, L_0x15aaf50;  1 drivers
v0x1537e10_0 .net *"_ivl_15", 0 0, L_0x15a88f0;  1 drivers
v0x1534660_0 .net *"_ivl_17", 4 0, L_0x15a8a20;  1 drivers
v0x1534700_0 .net *"_ivl_19", 0 0, L_0x15a8c10;  1 drivers
v0x15a0880_0 .net *"_ivl_21", 0 0, L_0x15a8cb0;  1 drivers
v0x15a0960_0 .net *"_ivl_22", 0 0, L_0x1537b00;  1 drivers
v0x15a0a40_0 .net *"_ivl_25", 0 0, L_0x15a8e40;  1 drivers
v0x15a0b20_0 .net *"_ivl_26", 0 0, L_0x1534510;  1 drivers
v0x15a0c00_0 .net *"_ivl_29", 0 0, L_0x15a8fb0;  1 drivers
v0x15a0ce0_0 .net *"_ivl_3", 0 0, L_0x15a8500;  1 drivers
v0x15a0dc0_0 .net *"_ivl_30", 0 0, L_0x15545b0;  1 drivers
v0x15a0ea0_0 .net *"_ivl_33", 0 0, L_0x157a6f0;  1 drivers
v0x15a0f60_0 .net *"_ivl_37", 0 0, L_0x15a91e0;  1 drivers
v0x15a1040_0 .net *"_ivl_39", 0 0, L_0x15a9280;  1 drivers
v0x15a1120_0 .net *"_ivl_40", 0 0, L_0x15a9390;  1 drivers
v0x15a1200_0 .net *"_ivl_43", 0 0, L_0x15a94a0;  1 drivers
v0x15a12e0_0 .net *"_ivl_44", 0 0, L_0x15a9540;  1 drivers
v0x15a13c0_0 .net *"_ivl_47", 0 0, L_0x15a96a0;  1 drivers
v0x15a1480_0 .net *"_ivl_51", 0 0, L_0x15a9760;  1 drivers
v0x15a1560_0 .net *"_ivl_53", 0 0, L_0x15a9320;  1 drivers
v0x15a1620_0 .net *"_ivl_57", 0 0, L_0x15a9930;  1 drivers
v0x15a1700_0 .net *"_ivl_59", 0 0, L_0x15a9be0;  1 drivers
v0x15a17c0_0 .net *"_ivl_63", 0 0, L_0x15a9c50;  1 drivers
v0x15a18a0_0 .net *"_ivl_65", 0 0, L_0x15a9d80;  1 drivers
v0x15a1960_0 .net *"_ivl_69", 0 0, L_0x15a9eb0;  1 drivers
v0x15a1a40_0 .net *"_ivl_7", 0 0, L_0x15a8690;  1 drivers
v0x15a1b20_0 .net *"_ivl_71", 0 0, L_0x15a9f50;  1 drivers
v0x15a1be0_0 .net *"_ivl_75", 0 0, L_0x15aa040;  1 drivers
v0x15a1cc0_0 .net *"_ivl_77", 0 0, L_0x15aa180;  1 drivers
v0x15a1d80_0 .net *"_ivl_81", 0 0, L_0x15aa2f0;  1 drivers
v0x15a2070_0 .net *"_ivl_83", 0 0, L_0x15aa390;  1 drivers
v0x15a2150_0 .net *"_ivl_84", 0 0, L_0x15a9e40;  1 drivers
v0x15a2230_0 .net *"_ivl_87", 0 0, L_0x15aa5e0;  1 drivers
v0x15a22f0_0 .net *"_ivl_9", 0 0, L_0x15a8730;  1 drivers
v0x15a23d0_0 .net *"_ivl_91", 0 0, L_0x15aa0e0;  1 drivers
v0x15a2490_0 .net *"_ivl_93", 0 0, L_0x15aa730;  1 drivers
v0x15a2570_0 .net *"_ivl_95", 0 0, L_0x15aa890;  1 drivers
v0x15a2630_0 .net "in", 0 0, v0x15a3d80_0;  alias, 1 drivers
v0x15a26f0_0 .net "next_state", 9 0, L_0x15aa9d0;  alias, 1 drivers
v0x15a27d0_0 .net "out1", 0 0, L_0x1536510;  alias, 1 drivers
v0x15a2890_0 .net "out2", 0 0, L_0x15373b0;  alias, 1 drivers
v0x15a2950_0 .net "state", 9 0, v0x15a40b0_0;  alias, 1 drivers
L_0x15a8460 .part v0x15a40b0_0, 8, 1;
L_0x15a8500 .part v0x15a40b0_0, 9, 1;
L_0x15a8690 .part v0x15a40b0_0, 7, 1;
L_0x15a8730 .part v0x15a40b0_0, 9, 1;
L_0x15a88f0 .reduce/nor v0x15a3d80_0;
L_0x15a8a20 .part v0x15a40b0_0, 0, 5;
L_0x15a8c10 .reduce/or L_0x15a8a20;
L_0x15a8cb0 .part v0x15a40b0_0, 7, 1;
L_0x15a8e40 .part v0x15a40b0_0, 8, 1;
L_0x15a8fb0 .part v0x15a40b0_0, 9, 1;
L_0x15a91e0 .part v0x15a40b0_0, 0, 1;
L_0x15a9280 .part v0x15a40b0_0, 8, 1;
L_0x15a94a0 .part v0x15a40b0_0, 9, 1;
L_0x15a9760 .part v0x15a40b0_0, 1, 1;
L_0x15a9930 .part v0x15a40b0_0, 2, 1;
L_0x15a9c50 .part v0x15a40b0_0, 3, 1;
L_0x15a9eb0 .part v0x15a40b0_0, 4, 1;
L_0x15aa040 .part v0x15a40b0_0, 5, 1;
L_0x15aa2f0 .part v0x15a40b0_0, 6, 1;
L_0x15aa390 .part v0x15a40b0_0, 7, 1;
L_0x15aa0e0 .reduce/nor v0x15a3d80_0;
L_0x15aa730 .part v0x15a40b0_0, 5, 1;
LS_0x15aa9d0_0_0 .concat8 [ 1 1 1 1], L_0x157a6f0, L_0x15a96a0, L_0x15a9320, L_0x15a9be0;
LS_0x15aa9d0_0_4 .concat8 [ 1 1 1 1], L_0x15a9d80, L_0x15a9f50, L_0x15aa180, L_0x15aa5e0;
LS_0x15aa9d0_0_8 .concat8 [ 1 1 0 0], L_0x15aa890, L_0x15aaf50;
L_0x15aa9d0 .concat8 [ 4 4 2 0], LS_0x15aa9d0_0_0, LS_0x15aa9d0_0_4, LS_0x15aa9d0_0_8;
L_0x15aad40 .reduce/nor v0x15a3d80_0;
L_0x15aaeb0 .part v0x15a40b0_0, 6, 1;
S_0x15a2ad0 .scope module, "stim1" "stimulus_gen" 3 166, 3 29 0, S_0x15469f0;
 .timescale -12 -12;
    .port_info 0 /INPUT 1 "clk";
    .port_info 1 /OUTPUT 1 "in";
    .port_info 2 /OUTPUT 10 "state";
    .port_info 3 /INPUT 1 "tb_match";
    .port_info 4 /INPUT 10 "next_state_ref";
    .port_info 5 /INPUT 10 "next_state_dut";
    .port_info 6 /OUTPUT 512 "wavedrom_title";
    .port_info 7 /OUTPUT 1 "wavedrom_enable";
v0x15a3b00_0 .net "clk", 0 0, v0x15a7950_0;  1 drivers
v0x15a3be0_0 .var/2s "errored1", 31 0;
v0x15a3cc0_0 .var/2s "errored2", 31 0;
v0x15a3d80_0 .var "in", 0 0;
v0x15a3e20_0 .net "next_state_dut", 9 0, L_0x15ad610;  alias, 1 drivers
v0x15a3f30_0 .net "next_state_ref", 9 0, L_0x15aa9d0;  alias, 1 drivers
v0x15a3ff0_0 .var/2s "onehot_error", 31 0;
v0x15a40b0_0 .var "state", 9 0;
v0x15a4170_0 .var "state_error", 9 0;
v0x15a4230_0 .net "tb_match", 0 0, L_0x15ae0b0;  alias, 1 drivers
v0x15a42f0_0 .var "wavedrom_enable", 0 0;
v0x15a43b0_0 .var "wavedrom_title", 511 0;
E_0x1542470 .event negedge, v0x15a3b00_0;
E_0x15426c0 .event posedge, v0x15a3b00_0;
S_0x15a2d10 .scope begin, "$ivl_for_loop0" "$ivl_for_loop0" 3 69, 3 69 0, S_0x15a2ad0;
 .timescale -12 -12;
v0x15a2f50_0 .var/2s "i", 31 0;
E_0x1541d40/0 .event negedge, v0x15a3b00_0;
E_0x1541d40/1 .event posedge, v0x15a3b00_0;
E_0x1541d40 .event/or E_0x1541d40/0, E_0x1541d40/1;
S_0x15a3050 .scope begin, "$ivl_for_loop1" "$ivl_for_loop1" 3 74, 3 74 0, S_0x15a2ad0;
 .timescale -12 -12;
v0x15a3250_0 .var/2s "i", 31 0;
S_0x15a3330 .scope begin, "$ivl_for_loop2" "$ivl_for_loop2" 3 114, 3 114 0, S_0x15a2ad0;
 .timescale -12 -12;
v0x15a3510_0 .var/2s "i", 31 0;
S_0x15a35f0 .scope task, "wavedrom_start" "wavedrom_start" 3 45, 3 45 0, S_0x15a2ad0;
 .timescale -12 -12;
v0x15a37d0_0 .var "title", 511 0;
TD_tb.stim1.wavedrom_start ;
    %end;
S_0x15a38d0 .scope task, "wavedrom_stop" "wavedrom_stop" 3 48, 3 48 0, S_0x15a2ad0;
 .timescale -12 -12;
TD_tb.stim1.wavedrom_stop ;
    %delay 1, 0;
    %end;
S_0x15a4590 .scope module, "top_module1" "top_module" 3 178, 4 1 0, S_0x15469f0;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "in";
    .port_info 1 /INPUT 10 "state";
    .port_info 2 /OUTPUT 10 "next_state";
    .port_info 3 /OUTPUT 1 "out1";
    .port_info 4 /OUTPUT 1 "out2";
L_0x15ab290 .functor OR 1, L_0x15ab150, L_0x15ab1f0, C4<0>, C4<0>;
L_0x15ab530 .functor OR 1, L_0x15ab3f0, L_0x15ab490, C4<0>, C4<0>;
L_0x15ab690 .functor NOT 1, v0x15a3d80_0, C4<0>, C4<0>, C4<0>;
L_0x15abd40 .functor AND 1, L_0x15ab690, L_0x15abbf0, C4<1>, C4<1>;
L_0x15ac3c0 .functor OR 1, L_0x15abe00, L_0x15ac2b0, C4<0>, C4<0>;
L_0x15ac570 .functor OR 1, L_0x15ac3c0, L_0x15ac4d0, C4<0>, C4<0>;
L_0x15ac680 .functor AND 1, v0x15a3d80_0, L_0x15ac570, C4<1>, C4<1>;
L_0x15ac350 .functor AND 1, v0x15a3d80_0, L_0x15ac740, C4<1>, C4<1>;
L_0x15ac9a0 .functor AND 1, v0x15a3d80_0, L_0x15ac900, C4<1>, C4<1>;
L_0x15acb90 .functor AND 1, v0x15a3d80_0, L_0x15aca60, C4<1>, C4<1>;
L_0x15acd50 .functor AND 1, v0x15a3d80_0, L_0x15accb0, C4<1>, C4<1>;
L_0x15acf00 .functor AND 1, v0x15a3d80_0, L_0x15acdc0, C4<1>, C4<1>;
L_0x15ad220 .functor OR 1, L_0x15ad030, L_0x15ad0d0, C4<0>, C4<0>;
L_0x15ad330 .functor AND 1, v0x15a3d80_0, L_0x15ad220, C4<1>, C4<1>;
L_0x15acfc0 .functor NOT 1, v0x15a3d80_0, C4<0>, C4<0>, C4<0>;
L_0x15ad470 .functor AND 1, L_0x15acfc0, L_0x15ace60, C4<1>, C4<1>;
L_0x15ada40 .functor NOT 1, v0x15a3d80_0, C4<0>, C4<0>, C4<0>;
L_0x15adb50 .functor AND 1, L_0x15ada40, L_0x15adab0, C4<1>, C4<1>;
v0x15a4800_0 .net *"_ivl_1", 0 0, L_0x15ab150;  1 drivers
v0x15a48e0_0 .net *"_ivl_14", 0 0, L_0x15ab690;  1 drivers
v0x15a49c0_0 .net *"_ivl_17", 4 0, L_0x15ab700;  1 drivers
v0x15a4ab0_0 .net *"_ivl_19", 0 0, L_0x15ab7a0;  1 drivers
v0x15a4b90_0 .net *"_ivl_21", 0 0, L_0x15ab880;  1 drivers
v0x15a4cc0_0 .net *"_ivl_23", 0 0, L_0x15ab920;  1 drivers
v0x15a4da0_0 .net *"_ivl_24", 7 0, L_0x15aba10;  1 drivers
v0x15a4e80_0 .net *"_ivl_27", 0 0, L_0x15abbf0;  1 drivers
v0x15a4f40_0 .net *"_ivl_28", 0 0, L_0x15abd40;  1 drivers
v0x15a50b0_0 .net *"_ivl_3", 0 0, L_0x15ab1f0;  1 drivers
v0x15a5190_0 .net *"_ivl_33", 0 0, L_0x15abe00;  1 drivers
v0x15a5270_0 .net *"_ivl_35", 0 0, L_0x15ac2b0;  1 drivers
v0x15a5350_0 .net *"_ivl_36", 0 0, L_0x15ac3c0;  1 drivers
v0x15a5430_0 .net *"_ivl_39", 0 0, L_0x15ac4d0;  1 drivers
v0x15a5510_0 .net *"_ivl_40", 0 0, L_0x15ac570;  1 drivers
v0x15a55f0_0 .net *"_ivl_42", 0 0, L_0x15ac680;  1 drivers
v0x15a56d0_0 .net *"_ivl_47", 0 0, L_0x15ac740;  1 drivers
v0x15a58c0_0 .net *"_ivl_48", 0 0, L_0x15ac350;  1 drivers
v0x15a59a0_0 .net *"_ivl_53", 0 0, L_0x15ac900;  1 drivers
v0x15a5a80_0 .net *"_ivl_54", 0 0, L_0x15ac9a0;  1 drivers
v0x15a5b60_0 .net *"_ivl_59", 0 0, L_0x15aca60;  1 drivers
v0x15a5c40_0 .net *"_ivl_60", 0 0, L_0x15acb90;  1 drivers
v0x15a5d20_0 .net *"_ivl_65", 0 0, L_0x15accb0;  1 drivers
v0x15a5e00_0 .net *"_ivl_66", 0 0, L_0x15acd50;  1 drivers
v0x15a5ee0_0 .net *"_ivl_7", 0 0, L_0x15ab3f0;  1 drivers
v0x15a5fc0_0 .net *"_ivl_71", 0 0, L_0x15acdc0;  1 drivers
v0x15a60a0_0 .net *"_ivl_72", 0 0, L_0x15acf00;  1 drivers
v0x15a6180_0 .net *"_ivl_77", 0 0, L_0x15ad030;  1 drivers
v0x15a6260_0 .net *"_ivl_79", 0 0, L_0x15ad0d0;  1 drivers
v0x15a6340_0 .net *"_ivl_80", 0 0, L_0x15ad220;  1 drivers
v0x15a6420_0 .net *"_ivl_82", 0 0, L_0x15ad330;  1 drivers
v0x15a6500_0 .net *"_ivl_86", 0 0, L_0x15acfc0;  1 drivers
v0x15a65e0_0 .net *"_ivl_89", 0 0, L_0x15ace60;  1 drivers
v0x15a68d0_0 .net *"_ivl_9", 0 0, L_0x15ab490;  1 drivers
v0x15a69b0_0 .net *"_ivl_90", 0 0, L_0x15ad470;  1 drivers
v0x15a6a90_0 .net *"_ivl_95", 0 0, L_0x15ada40;  1 drivers
v0x15a6b70_0 .net *"_ivl_98", 0 0, L_0x15adab0;  1 drivers
v0x15a6c50_0 .net *"_ivl_99", 0 0, L_0x15adb50;  1 drivers
v0x15a6d30_0 .net "in", 0 0, v0x15a3d80_0;  alias, 1 drivers
v0x15a6dd0_0 .net "next_state", 9 0, L_0x15ad610;  alias, 1 drivers
v0x15a6e90_0 .net "out1", 0 0, L_0x15ab290;  alias, 1 drivers
v0x15a6f30_0 .net "out2", 0 0, L_0x15ab530;  alias, 1 drivers
v0x15a6ff0_0 .net "state", 9 0, v0x15a40b0_0;  alias, 1 drivers
L_0x15ab150 .part v0x15a40b0_0, 8, 1;
L_0x15ab1f0 .part v0x15a40b0_0, 9, 1;
L_0x15ab3f0 .part v0x15a40b0_0, 7, 1;
L_0x15ab490 .part v0x15a40b0_0, 9, 1;
L_0x15ab700 .part v0x15a40b0_0, 0, 5;
L_0x15ab7a0 .part v0x15a40b0_0, 7, 1;
L_0x15ab880 .part v0x15a40b0_0, 8, 1;
L_0x15ab920 .part v0x15a40b0_0, 9, 1;
L_0x15aba10 .concat [ 1 1 1 5], L_0x15ab920, L_0x15ab880, L_0x15ab7a0, L_0x15ab700;
L_0x15abbf0 .reduce/or L_0x15aba10;
L_0x15abe00 .part v0x15a40b0_0, 0, 1;
L_0x15ac2b0 .part v0x15a40b0_0, 8, 1;
L_0x15ac4d0 .part v0x15a40b0_0, 9, 1;
L_0x15ac740 .part v0x15a40b0_0, 1, 1;
L_0x15ac900 .part v0x15a40b0_0, 2, 1;
L_0x15aca60 .part v0x15a40b0_0, 3, 1;
L_0x15accb0 .part v0x15a40b0_0, 4, 1;
L_0x15acdc0 .part v0x15a40b0_0, 5, 1;
L_0x15ad030 .part v0x15a40b0_0, 6, 1;
L_0x15ad0d0 .part v0x15a40b0_0, 7, 1;
L_0x15ace60 .part v0x15a40b0_0, 5, 1;
LS_0x15ad610_0_0 .concat8 [ 1 1 1 1], L_0x15abd40, L_0x15ac680, L_0x15ac350, L_0x15ac9a0;
LS_0x15ad610_0_4 .concat8 [ 1 1 1 1], L_0x15acb90, L_0x15acd50, L_0x15acf00, L_0x15ad330;
LS_0x15ad610_0_8 .concat8 [ 1 1 0 0], L_0x15ad470, L_0x15adb50;
L_0x15ad610 .concat8 [ 4 4 2 0], LS_0x15ad610_0_0, LS_0x15ad610_0_4, LS_0x15ad610_0_8;
L_0x15adab0 .part v0x15a40b0_0, 6, 1;
S_0x15a71a0 .scope task, "wait_for_end_of_timestep" "wait_for_end_of_timestep" 3 187, 3 187 0, S_0x15469f0;
 .timescale -12 -12;
E_0x1529a20 .event anyedge, v0x15a8030_0;
TD_tb.wait_for_end_of_timestep ;
    %pushi/vec4 5, 0, 32;
T_2.0 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_2.1, 5;
    %jmp/1 T_2.1, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %load/vec4 v0x15a8030_0;
    %nor/r;
    %assign/vec4 v0x15a8030_0, 0;
    %wait E_0x1529a20;
    %jmp T_2.0;
T_2.1 ;
    %pop/vec4 1;
    %end;
    .scope S_0x15a2ad0;
T_3 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x15a3be0_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x15a3cc0_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x15a3ff0_0, 0, 32;
    %pushi/vec4 0, 0, 10;
    %store/vec4 v0x15a4170_0, 0, 10;
    %end;
    .thread T_3, $init;
    .scope S_0x15a2ad0;
T_4 ;
    %pushi/vec4 2, 0, 32;
T_4.0 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_4.1, 5;
    %jmp/1 T_4.1, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_0x15426c0;
    %jmp T_4.0;
T_4.1 ;
    %pop/vec4 1;
T_4.2 ;
    %wait E_0x1541d40;
    %load/vec4 v0x15a4170_0;
    %load/vec4 v0x15a3f30_0;
    %load/vec4 v0x15a3e20_0;
    %xor;
    %or;
    %assign/vec4 v0x15a4170_0, 0;
    %jmp T_4.2;
T_4.3 ;
    %end;
    .thread T_4;
    .scope S_0x15a2ad0;
T_5 ;
    %pushi/vec4 0, 0, 10;
    %assign/vec4 v0x15a40b0_0, 0;
    %wait E_0x1542470;
    %fork t_1, S_0x15a2d10;
    %jmp t_0;
    .scope S_0x15a2d10;
t_1 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x15a2f50_0, 0, 32;
T_5.0 ; Top of for-loop 
    %load/vec4 v0x15a2f50_0;
    %cmpi/s 10, 0, 32;
    %jmp/0xz T_5.1, 5;
    %wait E_0x1541d40;
    %pushi/vec4 1, 0, 10;
    %load/vec4 v0x15a2f50_0;
    %ix/vec4 4;
    %shiftl 4;
    %assign/vec4 v0x15a40b0_0, 0;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0x15a3d80_0, 0;
T_5.2 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x15a2f50_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x15a2f50_0, 0, 32;
    %jmp T_5.0;
T_5.1 ; for-loop exit label
    %end;
    .scope S_0x15a2ad0;
t_0 %join;
    %fork t_3, S_0x15a3050;
    %jmp t_2;
    .scope S_0x15a3050;
t_3 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x15a3250_0, 0, 32;
T_5.3 ; Top of for-loop 
    %load/vec4 v0x15a3250_0;
    %cmpi/s 10, 0, 32;
    %jmp/0xz T_5.4, 5;
    %wait E_0x1541d40;
    %pushi/vec4 1, 0, 10;
    %load/vec4 v0x15a3250_0;
    %ix/vec4 4;
    %shiftl 4;
    %assign/vec4 v0x15a40b0_0, 0;
    %pushi/vec4 1, 0, 1;
    %assign/vec4 v0x15a3d80_0, 0;
T_5.5 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x15a3250_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x15a3250_0, 0, 32;
    %jmp T_5.3;
T_5.4 ; for-loop exit label
    %end;
    .scope S_0x15a2ad0;
t_2 %join;
    %wait E_0x1542470;
    %fork TD_tb.stim1.wavedrom_stop, S_0x15a38d0;
    %join;
    %pushi/vec4 200, 0, 32;
T_5.6 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_5.7, 5;
    %jmp/1 T_5.7, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_0x1541d40;
    %pushi/vec4 1, 0, 10;
    %vpi_func 3 83 "$random" 32 {0 0 0};
    %pushi/vec4 10, 0, 32;
    %mod;
    %ix/vec4 4;
    %shiftl 4;
    %assign/vec4 v0x15a40b0_0, 0;
    %vpi_func 3 84 "$random" 32 {0 0 0};
    %pad/s 1;
    %assign/vec4 v0x15a3d80_0, 0;
    %load/vec4 v0x15a4230_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.8, 8;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x15a3ff0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x15a3ff0_0, 0, 32;
T_5.8 ;
    %jmp T_5.6;
T_5.7 ;
    %pop/vec4 1;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x15a3be0_0, 0, 32;
    %pushi/vec4 400, 0, 32;
T_5.10 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_5.11, 5;
    %jmp/1 T_5.11, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_0x1541d40;
    %pushi/vec4 1, 0, 10;
    %vpi_func 3 91 "$random" 32 {0 0 0};
    %pushi/vec4 10, 0, 32;
    %mod;
    %ix/vec4 4;
    %shiftl 4;
    %pushi/vec4 1, 0, 10;
    %vpi_func 3 91 "$random" 32 {0 0 0};
    %pushi/vec4 10, 0, 32;
    %mod;
    %ix/vec4 4;
    %shiftl 4;
    %or;
    %assign/vec4 v0x15a40b0_0, 0;
    %vpi_func 3 92 "$random" 32 {0 0 0};
    %pad/s 1;
    %assign/vec4 v0x15a3d80_0, 0;
    %load/vec4 v0x15a4230_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.12, 8;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x15a3be0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x15a3be0_0, 0, 32;
T_5.12 ;
    %jmp T_5.10;
T_5.11 ;
    %pop/vec4 1;
    %load/vec4 v0x15a3ff0_0;
    %nor/r;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_5.16, 9;
    %load/vec4 v0x15a3be0_0;
    %pushi/vec4 0, 0, 32;
    %cmp/ne;
    %flag_get/vec4 4;
    %and;
T_5.16;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.14, 8;
    %vpi_call/w 3 98 "$display", "Hint: Your circuit passed when given only one-hot inputs, but not with two-hot inputs." {0 0 0};
T_5.14 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x15a3cc0_0, 0, 32;
    %pushi/vec4 800, 0, 32;
T_5.17 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_5.18, 5;
    %jmp/1 T_5.18, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_0x1541d40;
    %vpi_func 3 103 "$random" 32 {0 0 0};
    %pad/s 10;
    %assign/vec4 v0x15a40b0_0, 0;
    %vpi_func 3 104 "$random" 32 {0 0 0};
    %pad/s 1;
    %assign/vec4 v0x15a3d80_0, 0;
    %load/vec4 v0x15a4230_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.19, 8;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x15a3cc0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x15a3cc0_0, 0, 32;
T_5.19 ;
    %jmp T_5.17;
T_5.18 ;
    %pop/vec4 1;
    %load/vec4 v0x15a3ff0_0;
    %nor/r;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_5.23, 9;
    %load/vec4 v0x15a3cc0_0;
    %pushi/vec4 0, 0, 32;
    %cmp/ne;
    %flag_get/vec4 4;
    %and;
T_5.23;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.21, 8;
    %vpi_call/w 3 109 "$display", "Hint: Your circuit passed when given only one-hot inputs, but not with random inputs." {0 0 0};
T_5.21 ;
    %load/vec4 v0x15a3ff0_0;
    %nor/r;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_5.26, 9;
    %load/vec4 v0x15a3be0_0;
    %cmpi/ne 0, 0, 32;
    %flag_get/vec4 4;
    %jmp/1 T_5.27, 4;
    %load/vec4 v0x15a3cc0_0;
    %pushi/vec4 0, 0, 32;
    %cmp/ne;
    %flag_get/vec4 4;
    %or;
T_5.27;
    %and;
T_5.26;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.24, 8;
    %vpi_call/w 3 112 "$display", "Hint: Are you doing something more complicated than deriving state transition equations by inspection?\012" {0 0 0};
T_5.24 ;
    %fork t_5, S_0x15a3330;
    %jmp t_4;
    .scope S_0x15a3330;
t_5 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x15a3510_0, 0, 32;
T_5.28 ; Top of for-loop 
    %load/vec4 v0x15a3510_0;
    %cmpi/u 10, 0, 32;
    %jmp/0xz T_5.29, 5;
    %load/vec4 v0x15a4170_0;
    %load/vec4 v0x15a3510_0;
    %part/s 1;
    %cmpi/e 0, 0, 1;
    %flag_mov 8, 6;
    %jmp/0 T_5.31, 8;
    %pushi/vec4 25455, 0, 32; draw_string_vec4
    %pushi/vec4 1920099683, 0, 32; draw_string_vec4
    %concat/vec4; draw_string_vec4
    %pushi/vec4 116, 0, 8; draw_string_vec4
    %concat/vec4; draw_string_vec4
    %jmp/1 T_5.32, 8;
T_5.31 ; End of true expr.
    %pushi/vec4 1768842095, 0, 32; draw_string_vec4
    %pushi/vec4 1920099683, 0, 32; draw_string_vec4
    %concat/vec4; draw_string_vec4
    %pushi/vec4 116, 0, 8; draw_string_vec4
    %concat/vec4; draw_string_vec4
    %jmp/0 T_5.32, 8;
 ; End of false expr.
    %blend;
T_5.32;
    %vpi_call/w 3 115 "$display", "Hint: next_state[%0d] is %s.", v0x15a3510_0, S<0,vec4,u72> {1 0 0};
T_5.30 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x15a3510_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x15a3510_0, 0, 32;
    %jmp T_5.28;
T_5.29 ; for-loop exit label
    %end;
    .scope S_0x15a2ad0;
t_4 %join;
    %delay 1, 0;
    %vpi_call/w 3 117 "$finish" {0 0 0};
    %end;
    .thread T_5;
    .scope S_0x15469f0;
T_6 ;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x15a7950_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x15a8030_0, 0, 1;
    %end;
    .thread T_6, $init;
    .scope S_0x15469f0;
T_7 ;
T_7.0 ;
    %delay 5, 0;
    %load/vec4 v0x15a7950_0;
    %inv;
    %store/vec4 v0x15a7950_0, 0, 1;
    %jmp T_7.0;
T_7.1 ;
    %end;
    .thread T_7;
    .scope S_0x15469f0;
T_8 ;
    %vpi_call/w 3 158 "$dumpfile", "wave.vcd" {0 0 0};
    %vpi_call/w 3 159 "$dumpvars", 32'sb00000000000000000000000000000001, v0x15a3b00_0, v0x15a81a0_0, v0x15a79f0_0, v0x15a7ef0_0, v0x15a7b30_0, v0x15a7a90_0, v0x15a7ce0_0, v0x15a7c40_0, v0x15a7e20_0, v0x15a7d80_0 {0 0 0};
    %end;
    .thread T_8;
    .scope S_0x15469f0;
T_9 ;
    %load/vec4 v0x15a7f90_0;
    %parti/u 32, 192, 32;
    %cmpi/ne 0, 0, 32;
    %jmp/0xz  T_9.0, 4;
    %load/vec4 v0x15a7f90_0;
    %parti/u 32, 192, 32;
    %load/vec4 v0x15a7f90_0;
    %parti/u 32, 160, 32;
    %vpi_call/w 3 196 "$display", "Hint: Output '%s' has %0d mismatches. First mismatch occurred at time %0d.", "next_state", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %jmp T_9.1;
T_9.0 ;
    %vpi_call/w 3 197 "$display", "Hint: Output '%s' has no mismatches.", "next_state" {0 0 0};
T_9.1 ;
    %load/vec4 v0x15a7f90_0;
    %parti/u 32, 128, 32;
    %cmpi/ne 0, 0, 32;
    %jmp/0xz  T_9.2, 4;
    %load/vec4 v0x15a7f90_0;
    %parti/u 32, 128, 32;
    %load/vec4 v0x15a7f90_0;
    %parti/u 32, 96, 32;
    %vpi_call/w 3 198 "$display", "Hint: Output '%s' has %0d mismatches. First mismatch occurred at time %0d.", "out1", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %jmp T_9.3;
T_9.2 ;
    %vpi_call/w 3 199 "$display", "Hint: Output '%s' has no mismatches.", "out1" {0 0 0};
T_9.3 ;
    %load/vec4 v0x15a7f90_0;
    %parti/u 32, 64, 32;
    %cmpi/ne 0, 0, 32;
    %jmp/0xz  T_9.4, 4;
    %load/vec4 v0x15a7f90_0;
    %parti/u 32, 64, 32;
    %load/vec4 v0x15a7f90_0;
    %parti/u 32, 32, 32;
    %vpi_call/w 3 200 "$display", "Hint: Output '%s' has %0d mismatches. First mismatch occurred at time %0d.", "out2", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %jmp T_9.5;
T_9.4 ;
    %vpi_call/w 3 201 "$display", "Hint: Output '%s' has no mismatches.", "out2" {0 0 0};
T_9.5 ;
    %load/vec4 v0x15a7f90_0;
    %parti/u 32, 256, 32;
    %load/vec4 v0x15a7f90_0;
    %parti/u 32, 0, 32;
    %vpi_call/w 3 203 "$display", "Hint: Total mismatched samples is %1d out of %1d samples\012", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %vpi_call/w 3 204 "$display", "Simulation finished at %0d ps", $time {0 0 0};
    %load/vec4 v0x15a7f90_0;
    %parti/u 32, 256, 32;
    %load/vec4 v0x15a7f90_0;
    %parti/u 32, 0, 32;
    %vpi_call/w 3 205 "$display", "Mismatches: %1d in %1d samples", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %end;
    .thread T_9, $final;
    .scope S_0x15469f0;
T_10 ;
    %wait E_0x1541d40;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x15a7f90_0;
    %pushi/vec4 0, 0, 32;
    %part/u 32;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x15a7f90_0, 4, 32;
    %load/vec4 v0x15a80d0_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_10.0, 8;
    %load/vec4 v0x15a7f90_0;
    %parti/u 32, 256, 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_10.2, 4;
    %vpi_func 3 216 "$time" 64 {0 0 0};
    %cast2;
    %pad/u 32;
    %ix/load 4, 224, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x15a7f90_0, 4, 32;
T_10.2 ;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x15a7f90_0;
    %pushi/vec4 256, 0, 32;
    %part/u 32;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %ix/load 4, 256, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x15a7f90_0, 4, 32;
T_10.0 ;
    %load/vec4 v0x15a7b30_0;
    %load/vec4 v0x15a7b30_0;
    %load/vec4 v0x15a7a90_0;
    %xor;
    %load/vec4 v0x15a7b30_0;
    %xor;
    %cmp/ne;
    %jmp/0xz  T_10.4, 6;
    %load/vec4 v0x15a7f90_0;
    %parti/u 32, 192, 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_10.6, 4;
    %vpi_func 3 220 "$time" 64 {0 0 0};
    %cast2;
    %pad/u 32;
    %ix/load 4, 160, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x15a7f90_0, 4, 32;
T_10.6 ;
    %load/vec4 v0x15a7f90_0;
    %parti/u 32, 192, 32;
    %addi 1, 0, 32;
    %ix/load 4, 192, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x15a7f90_0, 4, 32;
T_10.4 ;
    %load/vec4 v0x15a7ce0_0;
    %load/vec4 v0x15a7ce0_0;
    %load/vec4 v0x15a7c40_0;
    %xor;
    %load/vec4 v0x15a7ce0_0;
    %xor;
    %cmp/ne;
    %jmp/0xz  T_10.8, 6;
    %load/vec4 v0x15a7f90_0;
    %parti/u 32, 128, 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_10.10, 4;
    %vpi_func 3 223 "$time" 64 {0 0 0};
    %cast2;
    %pad/u 32;
    %ix/load 4, 96, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x15a7f90_0, 4, 32;
T_10.10 ;
    %load/vec4 v0x15a7f90_0;
    %parti/u 32, 128, 32;
    %addi 1, 0, 32;
    %ix/load 4, 128, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x15a7f90_0, 4, 32;
T_10.8 ;
    %load/vec4 v0x15a7e20_0;
    %load/vec4 v0x15a7e20_0;
    %load/vec4 v0x15a7d80_0;
    %xor;
    %load/vec4 v0x15a7e20_0;
    %xor;
    %cmp/ne;
    %jmp/0xz  T_10.12, 6;
    %load/vec4 v0x15a7f90_0;
    %parti/u 32, 64, 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_10.14, 4;
    %vpi_func 3 226 "$time" 64 {0 0 0};
    %cast2;
    %pad/u 32;
    %ix/load 4, 32, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x15a7f90_0, 4, 32;
T_10.14 ;
    %load/vec4 v0x15a7f90_0;
    %parti/u 32, 64, 32;
    %addi 1, 0, 32;
    %ix/load 4, 64, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x15a7f90_0, 4, 32;
T_10.12 ;
    %jmp T_10;
    .thread T_10;
# The file index is used to find the file name in the following table.
:file_names 5;
    "N/A";
    "<interactive>";
    "-";
    "/home/jmb9986/AutoChip/autochip_scripts/../verilogeval_prompts_tbs/ve_testbenches_machine/fsm_onehot/fsm_onehot_tb.sv";
    "/home/jmb9986/AutoChip/autochip_scripts/outputs/claude-3-haiku-20240307/machine/fsm_onehot/iter0/response0/top_module.sv";
