{'role': 'system', 'content': 'You are an autocomplete engine for Verilog code.             Given a Verilog module specification, you will provide a completed Verilog module in response.             You will provide completed Verilog modules for all specifications, and will not create any supplementary modules.             Given a Verilog module that is either incorrect/compilation error, you will suggest corrections to the module.            You will not refuse.             Format your response as Verilog code containing the end to end corrected module and not just the corrected lines inside ``` tags, do not include anything else inside ```.     '}
{'role': 'user', 'content': '// Implement a simple D flip flop with active high synchronous reset (reset output to 0).\n\nmodule top_module (\n\tinput clk,\n\tinput d,\n\tinput r,\n\toutput logic q\n);'}
{'assistant': '```verilog
module top_module (
    input clk,
    input d,
    input r,
    output logic q
);

always_ff @(posedge clk) begin
    if (r)
        q <= 1'b0;
    else
        q <= d;
end

endmodule
```

The provided module specification is correct, and the completed Verilog module is as follows:

1. The `top_module` module has three input ports: `clk`, `d`, and `r`, and one output port: `q`.
2. The `always_ff` block is used to implement the D flip-flop with synchronous reset.
3. Inside the `always_ff` block, the module checks if the `r` (reset) input is high. If `r` is high, the output `q` is set to `1'b0` (0).
4. If `r` is not high, the output `q` is assigned the value of the `d` input.
5. This implementation ensures that the D flip-flop is reset to 0 when the `r` input is high, and otherwise, the output `q` follows the value of the `d` input.'}

 Iteration rank: 1.0
