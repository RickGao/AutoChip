#! /usr/local/bin/vvp
:ivl_version "13.0 (devel)" "(s20221226-331-g77d7f0b8f)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision - 12;
:vpi_module "/usr/local/lib/ivl/system.vpi";
:vpi_module "/usr/local/lib/ivl/vhdl_sys.vpi";
:vpi_module "/usr/local/lib/ivl/vhdl_textio.vpi";
:vpi_module "/usr/local/lib/ivl/v2005_math.vpi";
:vpi_module "/usr/local/lib/ivl/va_math.vpi";
:vpi_module "/usr/local/lib/ivl/v2009.vpi";
S_0x163a190 .scope package, "$unit" "$unit" 2 1;
 .timescale 0 0;
S_0x160ca60 .scope module, "tb" "tb" 3 66;
 .timescale -12 -12;
L_0x160f770 .functor NOT 1, L_0x16625c0, C4<0>, C4<0>, C4<0>;
L_0x160ff20 .functor XOR 8, L_0x1662240, L_0x16622e0, C4<00000000>, C4<00000000>;
L_0x16106d0 .functor XOR 8, L_0x160ff20, L_0x16624a0, C4<00000000>, C4<00000000>;
v0x1660b10_0 .net *"_ivl_10", 7 0, L_0x16624a0;  1 drivers
v0x1660bf0_0 .net *"_ivl_12", 7 0, L_0x16106d0;  1 drivers
v0x1660cd0_0 .net *"_ivl_2", 7 0, L_0x1662150;  1 drivers
v0x1660d90_0 .net *"_ivl_4", 7 0, L_0x1662240;  1 drivers
v0x1660e70_0 .net *"_ivl_6", 7 0, L_0x16622e0;  1 drivers
v0x1660fa0_0 .net *"_ivl_8", 7 0, L_0x160ff20;  1 drivers
v0x1661080_0 .var "clk", 0 0;
v0x1661120_0 .net "in", 254 0, v0x1611f90_0;  1 drivers
v0x16611c0_0 .net "out_dut", 7 0, v0x1660800_0;  1 drivers
v0x1661310_0 .net "out_ref", 7 0, v0x1610100_0;  1 drivers
v0x16613e0_0 .var/2u "stats1", 159 0;
v0x16614a0_0 .var/2u "strobe", 0 0;
v0x1661560_0 .net "tb_match", 0 0, L_0x16625c0;  1 drivers
v0x1661620_0 .net "tb_mismatch", 0 0, L_0x160f770;  1 drivers
v0x16616e0_0 .net "wavedrom_enable", 0 0, v0x162cd60_0;  1 drivers
v0x16617b0_0 .net "wavedrom_title", 511 0, v0x165bf90_0;  1 drivers
L_0x1662150 .concat [ 8 0 0 0], v0x1610100_0;
L_0x1662240 .concat [ 8 0 0 0], v0x1610100_0;
L_0x16622e0 .concat [ 8 0 0 0], v0x1660800_0;
L_0x16624a0 .concat [ 8 0 0 0], v0x1610100_0;
L_0x16625c0 .cmp/eeq 8, L_0x1662150, L_0x16106d0;
S_0x160d210 .scope module, "good1" "reference_module" 3 105, 3 4 0, S_0x160ca60;
 .timescale -12 -12;
    .port_info 0 /INPUT 255 "in";
    .port_info 1 /OUTPUT 8 "out";
v0x1610030_0 .net "in", 254 0, v0x1611f90_0;  alias, 1 drivers
v0x1610100_0 .var "out", 7 0;
E_0x1616cd0 .event anyedge, v0x1610030_0;
S_0x160d9c0 .scope begin, "$ivl_for_loop1" "$ivl_for_loop1" 3 11, 3 11 0, S_0x160d210;
 .timescale -12 -12;
v0x160f950_0 .var/2s "i", 31 0;
S_0x165b8d0 .scope module, "stim1" "stimulus_gen" 3 101, 3 18 0, S_0x160ca60;
 .timescale -12 -12;
    .port_info 0 /INPUT 1 "clk";
    .port_info 1 /OUTPUT 255 "in";
    .port_info 2 /OUTPUT 512 "wavedrom_title";
    .port_info 3 /OUTPUT 1 "wavedrom_enable";
v0x16108b0_0 .net "clk", 0 0, v0x1661080_0;  1 drivers
v0x1611f90_0 .var "in", 254 0;
v0x162cd60_0 .var "wavedrom_enable", 0 0;
v0x165bf90_0 .var "wavedrom_title", 511 0;
E_0x1616860 .event posedge, v0x16108b0_0;
E_0x1616d10/0 .event negedge, v0x16108b0_0;
E_0x1616d10/1 .event posedge, v0x16108b0_0;
E_0x1616d10 .event/or E_0x1616d10/0, E_0x1616d10/1;
S_0x165baf0 .scope task, "wavedrom_start" "wavedrom_start" 3 30, 3 30 0, S_0x165b8d0;
 .timescale -12 -12;
v0x16107e0_0 .var "title", 511 0;
TD_tb.stim1.wavedrom_start ;
    %end;
S_0x165bd50 .scope task, "wavedrom_stop" "wavedrom_stop" 3 33, 3 33 0, S_0x165b8d0;
 .timescale -12 -12;
TD_tb.stim1.wavedrom_stop ;
    %delay 1, 0;
    %end;
S_0x165c0d0 .scope module, "top_module1" "top_module" 3 109, 4 1 0, S_0x160ca60;
 .timescale 0 0;
    .port_info 0 /INPUT 255 "in";
    .port_info 1 /OUTPUT 8 "out";
v0x16602e0_0 .net *"_ivl_22", 30 0, L_0x1661f60;  1 drivers
L_0x7f8e8f9ae018 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x16603c0_0 .net *"_ivl_26", 0 0, L_0x7f8e8f9ae018;  1 drivers
v0x16604a0 .array "count_32", 0 7;
v0x16604a0_0 .net v0x16604a0 0, 7 0, v0x165ca20_0; 1 drivers
v0x16604a0_1 .net v0x16604a0 1, 7 0, v0x165d1d0_0; 1 drivers
v0x16604a0_2 .net v0x16604a0 2, 7 0, v0x165d9a0_0; 1 drivers
v0x16604a0_3 .net v0x16604a0 3, 7 0, v0x165e190_0; 1 drivers
v0x16604a0_4 .net v0x16604a0 4, 7 0, v0x165e9d0_0; 1 drivers
v0x16604a0_5 .net v0x16604a0 5, 7 0, v0x165f1c0_0; 1 drivers
v0x16604a0_6 .net v0x16604a0 6, 7 0, v0x165f9b0_0; 1 drivers
v0x16604a0_7 .net v0x16604a0 7, 7 0, v0x16601a0_0; 1 drivers
v0x1660710_0 .net "in", 254 0, v0x1611f90_0;  alias, 1 drivers
v0x1660800_0 .var "out", 7 0;
E_0x15fe9f0/0 .event anyedge, v0x165ca20_0, v0x165d1d0_0, v0x165d9a0_0, v0x165e190_0;
E_0x15fe9f0/1 .event anyedge, v0x165e9d0_0, v0x165f1c0_0, v0x165f9b0_0, v0x16601a0_0;
E_0x15fe9f0 .event/or E_0x15fe9f0/0, E_0x15fe9f0/1;
L_0x16618e0 .part v0x1611f90_0, 0, 32;
L_0x1661a40 .part v0x1611f90_0, 32, 32;
L_0x1661b10 .part v0x1611f90_0, 64, 32;
L_0x1661be0 .part v0x1611f90_0, 96, 32;
L_0x1661ce0 .part v0x1611f90_0, 128, 32;
L_0x1661db0 .part v0x1611f90_0, 160, 32;
L_0x1661ec0 .part v0x1611f90_0, 192, 32;
L_0x1661f60 .part v0x1611f90_0, 224, 31;
L_0x1662080 .concat [ 31 1 0 0], L_0x1661f60, L_0x7f8e8f9ae018;
S_0x165c370 .scope module, "pc0" "population_count_32" 4 8, 4 24 0, S_0x165c0d0;
 .timescale 0 0;
    .port_info 0 /INPUT 32 "in";
    .port_info 1 /OUTPUT 8 "out";
v0x165c920_0 .net "in", 31 0, L_0x16618e0;  1 drivers
v0x165ca20_0 .var "out", 7 0;
E_0x163f950 .event anyedge, v0x165c920_0;
S_0x165c620 .scope begin, "$ivl_for_loop0" "$ivl_for_loop0" 4 31, 4 31 0, S_0x165c370;
 .timescale 0 0;
v0x165c820_0 .var/2s "i", 31 0;
S_0x165cb60 .scope module, "pc1" "population_count_32" 4 9, 4 24 0, S_0x165c0d0;
 .timescale 0 0;
    .port_info 0 /INPUT 32 "in";
    .port_info 1 /OUTPUT 8 "out";
v0x165d0d0_0 .net "in", 31 0, L_0x1661a40;  1 drivers
v0x165d1d0_0 .var "out", 7 0;
E_0x163fc70 .event anyedge, v0x165d0d0_0;
S_0x165cdd0 .scope begin, "$ivl_for_loop0" "$ivl_for_loop0" 4 31, 4 31 0, S_0x165cb60;
 .timescale 0 0;
v0x165cfd0_0 .var/2s "i", 31 0;
S_0x165d310 .scope module, "pc2" "population_count_32" 4 10, 4 24 0, S_0x165c0d0;
 .timescale 0 0;
    .port_info 0 /INPUT 32 "in";
    .port_info 1 /OUTPUT 8 "out";
v0x165d8a0_0 .net "in", 31 0, L_0x1661b10;  1 drivers
v0x165d9a0_0 .var "out", 7 0;
E_0x165d540 .event anyedge, v0x165d8a0_0;
S_0x165d5a0 .scope begin, "$ivl_for_loop0" "$ivl_for_loop0" 4 31, 4 31 0, S_0x165d310;
 .timescale 0 0;
v0x165d7a0_0 .var/2s "i", 31 0;
S_0x165dae0 .scope module, "pc3" "population_count_32" 4 11, 4 24 0, S_0x165c0d0;
 .timescale 0 0;
    .port_info 0 /INPUT 32 "in";
    .port_info 1 /OUTPUT 8 "out";
v0x165e090_0 .net "in", 31 0, L_0x1661be0;  1 drivers
v0x165e190_0 .var "out", 7 0;
E_0x165dd10 .event anyedge, v0x165e090_0;
S_0x165dd90 .scope begin, "$ivl_for_loop0" "$ivl_for_loop0" 4 31, 4 31 0, S_0x165dae0;
 .timescale 0 0;
v0x165df90_0 .var/2s "i", 31 0;
S_0x165e2d0 .scope module, "pc4" "population_count_32" 4 12, 4 24 0, S_0x165c0d0;
 .timescale 0 0;
    .port_info 0 /INPUT 32 "in";
    .port_info 1 /OUTPUT 8 "out";
v0x165e8d0_0 .net "in", 31 0, L_0x1661ce0;  1 drivers
v0x165e9d0_0 .var "out", 7 0;
E_0x165e550 .event anyedge, v0x165e8d0_0;
S_0x165e5d0 .scope begin, "$ivl_for_loop0" "$ivl_for_loop0" 4 31, 4 31 0, S_0x165e2d0;
 .timescale 0 0;
v0x165e7d0_0 .var/2s "i", 31 0;
S_0x165eb10 .scope module, "pc5" "population_count_32" 4 13, 4 24 0, S_0x165c0d0;
 .timescale 0 0;
    .port_info 0 /INPUT 32 "in";
    .port_info 1 /OUTPUT 8 "out";
v0x165f0c0_0 .net "in", 31 0, L_0x1661db0;  1 drivers
v0x165f1c0_0 .var "out", 7 0;
E_0x165ed40 .event anyedge, v0x165f0c0_0;
S_0x165edc0 .scope begin, "$ivl_for_loop0" "$ivl_for_loop0" 4 31, 4 31 0, S_0x165eb10;
 .timescale 0 0;
v0x165efc0_0 .var/2s "i", 31 0;
S_0x165f300 .scope module, "pc6" "population_count_32" 4 14, 4 24 0, S_0x165c0d0;
 .timescale 0 0;
    .port_info 0 /INPUT 32 "in";
    .port_info 1 /OUTPUT 8 "out";
v0x165f8b0_0 .net "in", 31 0, L_0x1661ec0;  1 drivers
v0x165f9b0_0 .var "out", 7 0;
E_0x165f530 .event anyedge, v0x165f8b0_0;
S_0x165f5b0 .scope begin, "$ivl_for_loop0" "$ivl_for_loop0" 4 31, 4 31 0, S_0x165f300;
 .timescale 0 0;
v0x165f7b0_0 .var/2s "i", 31 0;
S_0x165faf0 .scope module, "pc7" "population_count_32" 4 15, 4 24 0, S_0x165c0d0;
 .timescale 0 0;
    .port_info 0 /INPUT 32 "in";
    .port_info 1 /OUTPUT 8 "out";
v0x16600a0_0 .net "in", 31 0, L_0x1662080;  1 drivers
v0x16601a0_0 .var "out", 7 0;
E_0x165fd20 .event anyedge, v0x16600a0_0;
S_0x165fda0 .scope begin, "$ivl_for_loop0" "$ivl_for_loop0" 4 31, 4 31 0, S_0x165faf0;
 .timescale 0 0;
v0x165ffa0_0 .var/2s "i", 31 0;
S_0x16608f0 .scope task, "wait_for_end_of_timestep" "wait_for_end_of_timestep" 3 115, 3 115 0, S_0x160ca60;
 .timescale -12 -12;
E_0x1660ad0 .event anyedge, v0x16614a0_0;
TD_tb.wait_for_end_of_timestep ;
    %pushi/vec4 5, 0, 32;
T_2.0 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_2.1, 5;
    %jmp/1 T_2.1, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %load/vec4 v0x16614a0_0;
    %nor/r;
    %assign/vec4 v0x16614a0_0, 0;
    %wait E_0x1660ad0;
    %jmp T_2.0;
T_2.1 ;
    %pop/vec4 1;
    %end;
    .scope S_0x165b8d0;
T_3 ;
    %pushi/vec4 0, 0, 255;
    %assign/vec4 v0x1611f90_0, 0;
    %wait E_0x1616d10;
    %pushi/vec4 0, 0, 255;
    %assign/vec4 v0x1611f90_0, 0;
    %wait E_0x1616d10;
    %pushi/vec4 0, 0, 255;
    %assign/vec4 v0x1611f90_0, 0;
    %wait E_0x1616d10;
    %pushi/vec4 1, 0, 255;
    %assign/vec4 v0x1611f90_0, 0;
    %wait E_0x1616d10;
    %pushi/vec4 1, 0, 255;
    %assign/vec4 v0x1611f90_0, 0;
    %wait E_0x1616d10;
    %pushi/vec4 3, 0, 255;
    %assign/vec4 v0x1611f90_0, 0;
    %wait E_0x1616d10;
    %pushi/vec4 3, 0, 255;
    %assign/vec4 v0x1611f90_0, 0;
    %wait E_0x1616d10;
    %pushi/vec4 7, 0, 255;
    %assign/vec4 v0x1611f90_0, 0;
    %wait E_0x1616d10;
    %pushi/vec4 43690, 0, 255;
    %assign/vec4 v0x1611f90_0, 0;
    %wait E_0x1616d10;
    %pushi/vec4 15728640, 0, 255;
    %assign/vec4 v0x1611f90_0, 0;
    %wait E_0x1616d10;
    %pushi/vec4 0, 0, 255;
    %assign/vec4 v0x1611f90_0, 0;
    %fork TD_tb.stim1.wavedrom_stop, S_0x165bd50;
    %join;
    %pushi/vec4 200, 0, 32;
T_3.0 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_3.1, 5;
    %jmp/1 T_3.1, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_0x1616d10;
    %vpi_func 3 54 "$random" 32 {0 0 0};
    %vpi_func 3 54 "$random" 32 {0 0 0};
    %concat/vec4; draw_concat_vec4
    %vpi_func 3 54 "$random" 32 {0 0 0};
    %concat/vec4; draw_concat_vec4
    %vpi_func 3 54 "$random" 32 {0 0 0};
    %concat/vec4; draw_concat_vec4
    %vpi_func 3 54 "$random" 32 {0 0 0};
    %concat/vec4; draw_concat_vec4
    %vpi_func 3 54 "$random" 32 {0 0 0};
    %concat/vec4; draw_concat_vec4
    %vpi_func 3 54 "$random" 32 {0 0 0};
    %concat/vec4; draw_concat_vec4
    %vpi_func 3 54 "$random" 32 {0 0 0};
    %concat/vec4; draw_concat_vec4
    %pad/u 255;
    %assign/vec4 v0x1611f90_0, 0;
    %jmp T_3.0;
T_3.1 ;
    %pop/vec4 1;
    %wait E_0x1616860;
    %pushi/vec4 0, 0, 255;
    %assign/vec4 v0x1611f90_0, 0;
    %wait E_0x1616860;
    %pushi/vec4 4294967295, 0, 32;
    %concati/vec4 4294967295, 0, 32;
    %concati/vec4 4294967295, 0, 32;
    %concati/vec4 4294967295, 0, 32;
    %concati/vec4 4294967295, 0, 32;
    %concati/vec4 4294967295, 0, 32;
    %concati/vec4 4294967295, 0, 32;
    %concati/vec4 2147483647, 0, 31;
    %assign/vec4 v0x1611f90_0, 0;
    %wait E_0x1616860;
    %delay 1, 0;
    %vpi_call/w 3 61 "$finish" {0 0 0};
    %end;
    .thread T_3;
    .scope S_0x160d210;
T_4 ;
Ewait_0 .event/or E_0x1616cd0, E_0x0;
    %wait Ewait_0;
    %pushi/vec4 0, 0, 8;
    %store/vec4 v0x1610100_0, 0, 8;
    %fork t_1, S_0x160d9c0;
    %jmp t_0;
    .scope S_0x160d9c0;
t_1 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x160f950_0, 0, 32;
T_4.0 ; Top of for-loop 
    %load/vec4 v0x160f950_0;
    %cmpi/s 255, 0, 32;
    %jmp/0xz T_4.1, 5;
    %load/vec4 v0x1610100_0;
    %load/vec4 v0x1610030_0;
    %load/vec4 v0x160f950_0;
    %part/s 1;
    %pad/u 8;
    %add;
    %store/vec4 v0x1610100_0, 0, 8;
T_4.2 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x160f950_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x160f950_0, 0, 32;
    %jmp T_4.0;
T_4.1 ; for-loop exit label
    %end;
    .scope S_0x160d210;
t_0 %join;
    %jmp T_4;
    .thread T_4, $push;
    .scope S_0x165c370;
T_5 ;
    %wait E_0x163f950;
    %pushi/vec4 0, 0, 8;
    %store/vec4 v0x165ca20_0, 0, 8;
    %fork t_3, S_0x165c620;
    %jmp t_2;
    .scope S_0x165c620;
t_3 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x165c820_0, 0, 32;
T_5.0 ; Top of for-loop 
    %load/vec4 v0x165c820_0;
    %cmpi/s 32, 0, 32;
    %jmp/0xz T_5.1, 5;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x165ca20_0;
    %load/vec4 v0x165c920_0;
    %load/vec4 v0x165c820_0;
    %part/s 1;
    %pad/u 8;
    %add;
    %store/vec4 v0x165ca20_0, 0, 8;
T_5.2 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x165c820_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x165c820_0, 0, 32;
    %jmp T_5.0;
T_5.1 ; for-loop exit label
    %end;
    .scope S_0x165c370;
t_2 %join;
    %jmp T_5;
    .thread T_5, $push;
    .scope S_0x165cb60;
T_6 ;
    %wait E_0x163fc70;
    %pushi/vec4 0, 0, 8;
    %store/vec4 v0x165d1d0_0, 0, 8;
    %fork t_5, S_0x165cdd0;
    %jmp t_4;
    .scope S_0x165cdd0;
t_5 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x165cfd0_0, 0, 32;
T_6.0 ; Top of for-loop 
    %load/vec4 v0x165cfd0_0;
    %cmpi/s 32, 0, 32;
    %jmp/0xz T_6.1, 5;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x165d1d0_0;
    %load/vec4 v0x165d0d0_0;
    %load/vec4 v0x165cfd0_0;
    %part/s 1;
    %pad/u 8;
    %add;
    %store/vec4 v0x165d1d0_0, 0, 8;
T_6.2 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x165cfd0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x165cfd0_0, 0, 32;
    %jmp T_6.0;
T_6.1 ; for-loop exit label
    %end;
    .scope S_0x165cb60;
t_4 %join;
    %jmp T_6;
    .thread T_6, $push;
    .scope S_0x165d310;
T_7 ;
    %wait E_0x165d540;
    %pushi/vec4 0, 0, 8;
    %store/vec4 v0x165d9a0_0, 0, 8;
    %fork t_7, S_0x165d5a0;
    %jmp t_6;
    .scope S_0x165d5a0;
t_7 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x165d7a0_0, 0, 32;
T_7.0 ; Top of for-loop 
    %load/vec4 v0x165d7a0_0;
    %cmpi/s 32, 0, 32;
    %jmp/0xz T_7.1, 5;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x165d9a0_0;
    %load/vec4 v0x165d8a0_0;
    %load/vec4 v0x165d7a0_0;
    %part/s 1;
    %pad/u 8;
    %add;
    %store/vec4 v0x165d9a0_0, 0, 8;
T_7.2 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x165d7a0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x165d7a0_0, 0, 32;
    %jmp T_7.0;
T_7.1 ; for-loop exit label
    %end;
    .scope S_0x165d310;
t_6 %join;
    %jmp T_7;
    .thread T_7, $push;
    .scope S_0x165dae0;
T_8 ;
    %wait E_0x165dd10;
    %pushi/vec4 0, 0, 8;
    %store/vec4 v0x165e190_0, 0, 8;
    %fork t_9, S_0x165dd90;
    %jmp t_8;
    .scope S_0x165dd90;
t_9 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x165df90_0, 0, 32;
T_8.0 ; Top of for-loop 
    %load/vec4 v0x165df90_0;
    %cmpi/s 32, 0, 32;
    %jmp/0xz T_8.1, 5;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x165e190_0;
    %load/vec4 v0x165e090_0;
    %load/vec4 v0x165df90_0;
    %part/s 1;
    %pad/u 8;
    %add;
    %store/vec4 v0x165e190_0, 0, 8;
T_8.2 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x165df90_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x165df90_0, 0, 32;
    %jmp T_8.0;
T_8.1 ; for-loop exit label
    %end;
    .scope S_0x165dae0;
t_8 %join;
    %jmp T_8;
    .thread T_8, $push;
    .scope S_0x165e2d0;
T_9 ;
    %wait E_0x165e550;
    %pushi/vec4 0, 0, 8;
    %store/vec4 v0x165e9d0_0, 0, 8;
    %fork t_11, S_0x165e5d0;
    %jmp t_10;
    .scope S_0x165e5d0;
t_11 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x165e7d0_0, 0, 32;
T_9.0 ; Top of for-loop 
    %load/vec4 v0x165e7d0_0;
    %cmpi/s 32, 0, 32;
    %jmp/0xz T_9.1, 5;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x165e9d0_0;
    %load/vec4 v0x165e8d0_0;
    %load/vec4 v0x165e7d0_0;
    %part/s 1;
    %pad/u 8;
    %add;
    %store/vec4 v0x165e9d0_0, 0, 8;
T_9.2 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x165e7d0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x165e7d0_0, 0, 32;
    %jmp T_9.0;
T_9.1 ; for-loop exit label
    %end;
    .scope S_0x165e2d0;
t_10 %join;
    %jmp T_9;
    .thread T_9, $push;
    .scope S_0x165eb10;
T_10 ;
    %wait E_0x165ed40;
    %pushi/vec4 0, 0, 8;
    %store/vec4 v0x165f1c0_0, 0, 8;
    %fork t_13, S_0x165edc0;
    %jmp t_12;
    .scope S_0x165edc0;
t_13 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x165efc0_0, 0, 32;
T_10.0 ; Top of for-loop 
    %load/vec4 v0x165efc0_0;
    %cmpi/s 32, 0, 32;
    %jmp/0xz T_10.1, 5;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x165f1c0_0;
    %load/vec4 v0x165f0c0_0;
    %load/vec4 v0x165efc0_0;
    %part/s 1;
    %pad/u 8;
    %add;
    %store/vec4 v0x165f1c0_0, 0, 8;
T_10.2 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x165efc0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x165efc0_0, 0, 32;
    %jmp T_10.0;
T_10.1 ; for-loop exit label
    %end;
    .scope S_0x165eb10;
t_12 %join;
    %jmp T_10;
    .thread T_10, $push;
    .scope S_0x165f300;
T_11 ;
    %wait E_0x165f530;
    %pushi/vec4 0, 0, 8;
    %store/vec4 v0x165f9b0_0, 0, 8;
    %fork t_15, S_0x165f5b0;
    %jmp t_14;
    .scope S_0x165f5b0;
t_15 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x165f7b0_0, 0, 32;
T_11.0 ; Top of for-loop 
    %load/vec4 v0x165f7b0_0;
    %cmpi/s 32, 0, 32;
    %jmp/0xz T_11.1, 5;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x165f9b0_0;
    %load/vec4 v0x165f8b0_0;
    %load/vec4 v0x165f7b0_0;
    %part/s 1;
    %pad/u 8;
    %add;
    %store/vec4 v0x165f9b0_0, 0, 8;
T_11.2 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x165f7b0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x165f7b0_0, 0, 32;
    %jmp T_11.0;
T_11.1 ; for-loop exit label
    %end;
    .scope S_0x165f300;
t_14 %join;
    %jmp T_11;
    .thread T_11, $push;
    .scope S_0x165faf0;
T_12 ;
    %wait E_0x165fd20;
    %pushi/vec4 0, 0, 8;
    %store/vec4 v0x16601a0_0, 0, 8;
    %fork t_17, S_0x165fda0;
    %jmp t_16;
    .scope S_0x165fda0;
t_17 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x165ffa0_0, 0, 32;
T_12.0 ; Top of for-loop 
    %load/vec4 v0x165ffa0_0;
    %cmpi/s 32, 0, 32;
    %jmp/0xz T_12.1, 5;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x16601a0_0;
    %load/vec4 v0x16600a0_0;
    %load/vec4 v0x165ffa0_0;
    %part/s 1;
    %pad/u 8;
    %add;
    %store/vec4 v0x16601a0_0, 0, 8;
T_12.2 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x165ffa0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x165ffa0_0, 0, 32;
    %jmp T_12.0;
T_12.1 ; for-loop exit label
    %end;
    .scope S_0x165faf0;
t_16 %join;
    %jmp T_12;
    .thread T_12, $push;
    .scope S_0x165c0d0;
T_13 ;
    %wait E_0x15fe9f0;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %load/vec4a v0x16604a0, 4;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %load/vec4a v0x16604a0, 4;
    %add;
    %ix/load 4, 2, 0;
    %flag_set/imm 4, 0;
    %load/vec4a v0x16604a0, 4;
    %add;
    %ix/load 4, 3, 0;
    %flag_set/imm 4, 0;
    %load/vec4a v0x16604a0, 4;
    %add;
    %ix/load 4, 4, 0;
    %flag_set/imm 4, 0;
    %load/vec4a v0x16604a0, 4;
    %add;
    %ix/load 4, 5, 0;
    %flag_set/imm 4, 0;
    %load/vec4a v0x16604a0, 4;
    %add;
    %ix/load 4, 6, 0;
    %flag_set/imm 4, 0;
    %load/vec4a v0x16604a0, 4;
    %add;
    %ix/load 4, 7, 0;
    %flag_set/imm 4, 0;
    %load/vec4a v0x16604a0, 4;
    %add;
    %store/vec4 v0x1660800_0, 0, 8;
    %jmp T_13;
    .thread T_13, $push;
    .scope S_0x160ca60;
T_14 ;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x1661080_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x16614a0_0, 0, 1;
    %end;
    .thread T_14, $init;
    .scope S_0x160ca60;
T_15 ;
T_15.0 ;
    %delay 5, 0;
    %load/vec4 v0x1661080_0;
    %inv;
    %store/vec4 v0x1661080_0, 0, 1;
    %jmp T_15.0;
T_15.1 ;
    %end;
    .thread T_15;
    .scope S_0x160ca60;
T_16 ;
    %vpi_call/w 3 93 "$dumpfile", "wave.vcd" {0 0 0};
    %vpi_call/w 3 94 "$dumpvars", 32'sb00000000000000000000000000000001, v0x16108b0_0, v0x1661620_0, v0x1661120_0, v0x1661310_0, v0x16611c0_0 {0 0 0};
    %end;
    .thread T_16;
    .scope S_0x160ca60;
T_17 ;
    %load/vec4 v0x16613e0_0;
    %parti/u 32, 64, 32;
    %cmpi/ne 0, 0, 32;
    %jmp/0xz  T_17.0, 4;
    %load/vec4 v0x16613e0_0;
    %parti/u 32, 64, 32;
    %load/vec4 v0x16613e0_0;
    %parti/u 32, 32, 32;
    %vpi_call/w 3 124 "$display", "Hint: Output '%s' has %0d mismatches. First mismatch occurred at time %0d.", "out", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %jmp T_17.1;
T_17.0 ;
    %vpi_call/w 3 125 "$display", "Hint: Output '%s' has no mismatches.", "out" {0 0 0};
T_17.1 ;
    %load/vec4 v0x16613e0_0;
    %parti/u 32, 128, 32;
    %load/vec4 v0x16613e0_0;
    %parti/u 32, 0, 32;
    %vpi_call/w 3 127 "$display", "Hint: Total mismatched samples is %1d out of %1d samples\012", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %vpi_call/w 3 128 "$display", "Simulation finished at %0d ps", $time {0 0 0};
    %load/vec4 v0x16613e0_0;
    %parti/u 32, 128, 32;
    %load/vec4 v0x16613e0_0;
    %parti/u 32, 0, 32;
    %vpi_call/w 3 129 "$display", "Mismatches: %1d in %1d samples", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %end;
    .thread T_17, $final;
    .scope S_0x160ca60;
T_18 ;
    %wait E_0x1616d10;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x16613e0_0;
    %pushi/vec4 0, 0, 32;
    %part/u 32;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x16613e0_0, 4, 32;
    %load/vec4 v0x1661560_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_18.0, 8;
    %load/vec4 v0x16613e0_0;
    %parti/u 32, 128, 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_18.2, 4;
    %vpi_func 3 140 "$time" 64 {0 0 0};
    %cast2;
    %pad/u 32;
    %ix/load 4, 96, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x16613e0_0, 4, 32;
T_18.2 ;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x16613e0_0;
    %pushi/vec4 128, 0, 32;
    %part/u 32;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %ix/load 4, 128, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x16613e0_0, 4, 32;
T_18.0 ;
    %load/vec4 v0x1661310_0;
    %load/vec4 v0x1661310_0;
    %load/vec4 v0x16611c0_0;
    %xor;
    %load/vec4 v0x1661310_0;
    %xor;
    %cmp/ne;
    %jmp/0xz  T_18.4, 6;
    %load/vec4 v0x16613e0_0;
    %parti/u 32, 64, 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_18.6, 4;
    %vpi_func 3 144 "$time" 64 {0 0 0};
    %cast2;
    %pad/u 32;
    %ix/load 4, 32, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x16613e0_0, 4, 32;
T_18.6 ;
    %load/vec4 v0x16613e0_0;
    %parti/u 32, 64, 32;
    %addi 1, 0, 32;
    %ix/load 4, 64, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x16613e0_0, 4, 32;
T_18.4 ;
    %jmp T_18;
    .thread T_18;
# The file index is used to find the file name in the following table.
:file_names 5;
    "N/A";
    "<interactive>";
    "-";
    "/home/jmb9986/AutoChip/autochip_scripts/../verilogeval_prompts_tbs/ve_testbenches_human/popcount255/popcount255_tb.sv";
    "/home/jmb9986/AutoChip/autochip_scripts/outputs/claude-3-haiku-20240307_zeroshot/human/popcount255/iter0/response0/top_module.sv";
