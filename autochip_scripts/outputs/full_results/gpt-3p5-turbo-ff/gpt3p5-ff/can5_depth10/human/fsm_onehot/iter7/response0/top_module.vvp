#! /usr/local/bin/vvp
:ivl_version "13.0 (devel)" "(s20221226-331-g77d7f0b8f)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision - 12;
:vpi_module "/usr/local/lib/ivl/system.vpi";
:vpi_module "/usr/local/lib/ivl/vhdl_sys.vpi";
:vpi_module "/usr/local/lib/ivl/vhdl_textio.vpi";
:vpi_module "/usr/local/lib/ivl/v2005_math.vpi";
:vpi_module "/usr/local/lib/ivl/va_math.vpi";
:vpi_module "/usr/local/lib/ivl/v2009.vpi";
S_0xc3b230 .scope package, "$unit" "$unit" 2 1;
 .timescale 0 0;
S_0xc4ed50 .scope module, "tb" "tb" 3 122;
 .timescale -12 -12;
L_0xc3b6c0 .functor NOT 1, L_0xcb5ed0, C4<0>, C4<0>, C4<0>;
L_0xcb5d50 .functor XOR 12, L_0xcb5c10, L_0xcb5cb0, C4<000000000000>, C4<000000000000>;
L_0xcb5e60 .functor XOR 12, L_0xcb5d50, L_0xcb5dc0, C4<000000000000>, C4<000000000000>;
v0xcaecd0_0 .net *"_ivl_10", 11 0, L_0xcb5dc0;  1 drivers
v0xcaedd0_0 .net *"_ivl_12", 11 0, L_0xcb5e60;  1 drivers
v0xcaeeb0_0 .net *"_ivl_2", 11 0, L_0xcb5b70;  1 drivers
v0xcaef70_0 .net *"_ivl_4", 11 0, L_0xcb5c10;  1 drivers
v0xcaf050_0 .net *"_ivl_6", 11 0, L_0xcb5cb0;  1 drivers
v0xcaf180_0 .net *"_ivl_8", 11 0, L_0xcb5d50;  1 drivers
v0xcaf260_0 .var "clk", 0 0;
v0xcaf300_0 .net "in", 0 0, v0xcab9f0_0;  1 drivers
v0xcaf3a0_0 .net "next_state_dut", 9 0, L_0xcb4c40;  1 drivers
v0xcaf440_0 .net "next_state_ref", 9 0, L_0xcb22e0;  1 drivers
v0xcaf550_0 .net "out1_dut", 0 0, L_0xcb36c0;  1 drivers
v0xcaf5f0_0 .net "out1_ref", 0 0, L_0xc3e510;  1 drivers
v0xcaf690_0 .net "out2_dut", 0 0, L_0xcb5a10;  1 drivers
v0xcaf730_0 .net "out2_ref", 0 0, L_0xc3f3b0;  1 drivers
v0xcaf800_0 .net "state", 9 0, v0xcabd20_0;  1 drivers
v0xcaf8a0_0 .var/2u "stats1", 287 0;
v0xcaf940_0 .var/2u "strobe", 0 0;
v0xcaf9e0_0 .net "tb_match", 0 0, L_0xcb5ed0;  1 drivers
v0xcafab0_0 .net "tb_mismatch", 0 0, L_0xc3b6c0;  1 drivers
v0xcafb50_0 .net "wavedrom_enable", 0 0, v0xcabf60_0;  1 drivers
v0xcafc20_0 .net "wavedrom_title", 511 0, v0xcac020_0;  1 drivers
L_0xcb5b70 .concat [ 1 1 10 0], L_0xc3f3b0, L_0xc3e510, L_0xcb22e0;
L_0xcb5c10 .concat [ 1 1 10 0], L_0xc3f3b0, L_0xc3e510, L_0xcb22e0;
L_0xcb5cb0 .concat [ 1 1 10 0], L_0xcb5a10, L_0xcb36c0, L_0xcb4c40;
L_0xcb5dc0 .concat [ 1 1 10 0], L_0xc3f3b0, L_0xc3e510, L_0xcb22e0;
L_0xcb5ed0 .cmp/eeq 12, L_0xcb5b70, L_0xcb5e60;
S_0xc4eee0 .scope module, "good1" "reference_module" 3 171, 3 4 0, S_0xc4ed50;
 .timescale -12 -12;
    .port_info 0 /INPUT 1 "in";
    .port_info 1 /INPUT 10 "state";
    .port_info 2 /OUTPUT 10 "next_state";
    .port_info 3 /OUTPUT 1 "out1";
    .port_info 4 /OUTPUT 1 "out2";
L_0xc3e510 .functor OR 1, L_0xcafd70, L_0xcafe10, C4<0>, C4<0>;
L_0xc3f3b0 .functor OR 1, L_0xcaffa0, L_0xcb0040, C4<0>, C4<0>;
L_0xc3fb00 .functor OR 1, L_0xcb0520, L_0xcb05c0, C4<0>, C4<0>;
L_0xc3c510 .functor OR 1, L_0xc3fb00, L_0xcb0750, C4<0>, C4<0>;
L_0xc5c880 .functor OR 1, L_0xc3c510, L_0xcb08c0, C4<0>, C4<0>;
L_0xc821e0 .functor AND 1, L_0xcb0200, L_0xc5c880, C4<1>, C4<1>;
L_0xcb0ca0 .functor OR 1, L_0xcb0af0, L_0xcb0b90, C4<0>, C4<0>;
L_0xcb0e50 .functor OR 1, L_0xcb0ca0, L_0xcb0db0, C4<0>, C4<0>;
L_0xcb0fb0 .functor AND 1, v0xcab9f0_0, L_0xcb0e50, C4<1>, C4<1>;
L_0xcb0c30 .functor AND 1, v0xcab9f0_0, L_0xcb1070, C4<1>, C4<1>;
L_0xcb14f0 .functor AND 1, v0xcab9f0_0, L_0xcb1240, C4<1>, C4<1>;
L_0xcb1690 .functor AND 1, v0xcab9f0_0, L_0xcb1560, C4<1>, C4<1>;
L_0xcb1860 .functor AND 1, v0xcab9f0_0, L_0xcb17c0, C4<1>, C4<1>;
L_0xcb1a90 .functor AND 1, v0xcab9f0_0, L_0xcb1950, C4<1>, C4<1>;
L_0xcb1750 .functor OR 1, L_0xcb1c00, L_0xcb1ca0, C4<0>, C4<0>;
L_0xcb1ef0 .functor AND 1, v0xcab9f0_0, L_0xcb1750, C4<1>, C4<1>;
L_0xcb21a0 .functor AND 1, L_0xcb19f0, L_0xcb2040, C4<1>, C4<1>;
L_0xcb2860 .functor AND 1, L_0xcb2650, L_0xcb27c0, C4<1>, C4<1>;
v0xc3e6c0_0 .net *"_ivl_1", 0 0, L_0xcafd70;  1 drivers
v0xc3f4c0_0 .net *"_ivl_100", 0 0, L_0xcb2650;  1 drivers
v0xc3f560_0 .net *"_ivl_102", 0 0, L_0xcb27c0;  1 drivers
v0xc3fd70_0 .net *"_ivl_104", 0 0, L_0xcb2860;  1 drivers
v0xc3fe10_0 .net *"_ivl_15", 0 0, L_0xcb0200;  1 drivers
v0xc3c660_0 .net *"_ivl_17", 4 0, L_0xcb0330;  1 drivers
v0xc3c700_0 .net *"_ivl_19", 0 0, L_0xcb0520;  1 drivers
v0xca84f0_0 .net *"_ivl_21", 0 0, L_0xcb05c0;  1 drivers
v0xca85d0_0 .net *"_ivl_22", 0 0, L_0xc3fb00;  1 drivers
v0xca86b0_0 .net *"_ivl_25", 0 0, L_0xcb0750;  1 drivers
v0xca8790_0 .net *"_ivl_26", 0 0, L_0xc3c510;  1 drivers
v0xca8870_0 .net *"_ivl_29", 0 0, L_0xcb08c0;  1 drivers
v0xca8950_0 .net *"_ivl_3", 0 0, L_0xcafe10;  1 drivers
v0xca8a30_0 .net *"_ivl_30", 0 0, L_0xc5c880;  1 drivers
v0xca8b10_0 .net *"_ivl_33", 0 0, L_0xc821e0;  1 drivers
v0xca8bd0_0 .net *"_ivl_37", 0 0, L_0xcb0af0;  1 drivers
v0xca8cb0_0 .net *"_ivl_39", 0 0, L_0xcb0b90;  1 drivers
v0xca8d90_0 .net *"_ivl_40", 0 0, L_0xcb0ca0;  1 drivers
v0xca8e70_0 .net *"_ivl_43", 0 0, L_0xcb0db0;  1 drivers
v0xca8f50_0 .net *"_ivl_44", 0 0, L_0xcb0e50;  1 drivers
v0xca9030_0 .net *"_ivl_47", 0 0, L_0xcb0fb0;  1 drivers
v0xca90f0_0 .net *"_ivl_51", 0 0, L_0xcb1070;  1 drivers
v0xca91d0_0 .net *"_ivl_53", 0 0, L_0xcb0c30;  1 drivers
v0xca9290_0 .net *"_ivl_57", 0 0, L_0xcb1240;  1 drivers
v0xca9370_0 .net *"_ivl_59", 0 0, L_0xcb14f0;  1 drivers
v0xca9430_0 .net *"_ivl_63", 0 0, L_0xcb1560;  1 drivers
v0xca9510_0 .net *"_ivl_65", 0 0, L_0xcb1690;  1 drivers
v0xca95d0_0 .net *"_ivl_69", 0 0, L_0xcb17c0;  1 drivers
v0xca96b0_0 .net *"_ivl_7", 0 0, L_0xcaffa0;  1 drivers
v0xca9790_0 .net *"_ivl_71", 0 0, L_0xcb1860;  1 drivers
v0xca9850_0 .net *"_ivl_75", 0 0, L_0xcb1950;  1 drivers
v0xca9930_0 .net *"_ivl_77", 0 0, L_0xcb1a90;  1 drivers
v0xca99f0_0 .net *"_ivl_81", 0 0, L_0xcb1c00;  1 drivers
v0xca9ce0_0 .net *"_ivl_83", 0 0, L_0xcb1ca0;  1 drivers
v0xca9dc0_0 .net *"_ivl_84", 0 0, L_0xcb1750;  1 drivers
v0xca9ea0_0 .net *"_ivl_87", 0 0, L_0xcb1ef0;  1 drivers
v0xca9f60_0 .net *"_ivl_9", 0 0, L_0xcb0040;  1 drivers
v0xcaa040_0 .net *"_ivl_91", 0 0, L_0xcb19f0;  1 drivers
v0xcaa100_0 .net *"_ivl_93", 0 0, L_0xcb2040;  1 drivers
v0xcaa1e0_0 .net *"_ivl_95", 0 0, L_0xcb21a0;  1 drivers
v0xcaa2a0_0 .net "in", 0 0, v0xcab9f0_0;  alias, 1 drivers
v0xcaa360_0 .net "next_state", 9 0, L_0xcb22e0;  alias, 1 drivers
v0xcaa440_0 .net "out1", 0 0, L_0xc3e510;  alias, 1 drivers
v0xcaa500_0 .net "out2", 0 0, L_0xc3f3b0;  alias, 1 drivers
v0xcaa5c0_0 .net "state", 9 0, v0xcabd20_0;  alias, 1 drivers
L_0xcafd70 .part v0xcabd20_0, 8, 1;
L_0xcafe10 .part v0xcabd20_0, 9, 1;
L_0xcaffa0 .part v0xcabd20_0, 7, 1;
L_0xcb0040 .part v0xcabd20_0, 9, 1;
L_0xcb0200 .reduce/nor v0xcab9f0_0;
L_0xcb0330 .part v0xcabd20_0, 0, 5;
L_0xcb0520 .reduce/or L_0xcb0330;
L_0xcb05c0 .part v0xcabd20_0, 7, 1;
L_0xcb0750 .part v0xcabd20_0, 8, 1;
L_0xcb08c0 .part v0xcabd20_0, 9, 1;
L_0xcb0af0 .part v0xcabd20_0, 0, 1;
L_0xcb0b90 .part v0xcabd20_0, 8, 1;
L_0xcb0db0 .part v0xcabd20_0, 9, 1;
L_0xcb1070 .part v0xcabd20_0, 1, 1;
L_0xcb1240 .part v0xcabd20_0, 2, 1;
L_0xcb1560 .part v0xcabd20_0, 3, 1;
L_0xcb17c0 .part v0xcabd20_0, 4, 1;
L_0xcb1950 .part v0xcabd20_0, 5, 1;
L_0xcb1c00 .part v0xcabd20_0, 6, 1;
L_0xcb1ca0 .part v0xcabd20_0, 7, 1;
L_0xcb19f0 .reduce/nor v0xcab9f0_0;
L_0xcb2040 .part v0xcabd20_0, 5, 1;
LS_0xcb22e0_0_0 .concat8 [ 1 1 1 1], L_0xc821e0, L_0xcb0fb0, L_0xcb0c30, L_0xcb14f0;
LS_0xcb22e0_0_4 .concat8 [ 1 1 1 1], L_0xcb1690, L_0xcb1860, L_0xcb1a90, L_0xcb1ef0;
LS_0xcb22e0_0_8 .concat8 [ 1 1 0 0], L_0xcb21a0, L_0xcb2860;
L_0xcb22e0 .concat8 [ 4 4 2 0], LS_0xcb22e0_0_0, LS_0xcb22e0_0_4, LS_0xcb22e0_0_8;
L_0xcb2650 .reduce/nor v0xcab9f0_0;
L_0xcb27c0 .part v0xcabd20_0, 6, 1;
S_0xcaa740 .scope module, "stim1" "stimulus_gen" 3 166, 3 29 0, S_0xc4ed50;
 .timescale -12 -12;
    .port_info 0 /INPUT 1 "clk";
    .port_info 1 /OUTPUT 1 "in";
    .port_info 2 /OUTPUT 10 "state";
    .port_info 3 /INPUT 1 "tb_match";
    .port_info 4 /INPUT 10 "next_state_ref";
    .port_info 5 /INPUT 10 "next_state_dut";
    .port_info 6 /OUTPUT 512 "wavedrom_title";
    .port_info 7 /OUTPUT 1 "wavedrom_enable";
v0xcab770_0 .net "clk", 0 0, v0xcaf260_0;  1 drivers
v0xcab850_0 .var/2s "errored1", 31 0;
v0xcab930_0 .var/2s "errored2", 31 0;
v0xcab9f0_0 .var "in", 0 0;
v0xcaba90_0 .net "next_state_dut", 9 0, L_0xcb4c40;  alias, 1 drivers
v0xcabba0_0 .net "next_state_ref", 9 0, L_0xcb22e0;  alias, 1 drivers
v0xcabc60_0 .var/2s "onehot_error", 31 0;
v0xcabd20_0 .var "state", 9 0;
v0xcabde0_0 .var "state_error", 9 0;
v0xcabea0_0 .net "tb_match", 0 0, L_0xcb5ed0;  alias, 1 drivers
v0xcabf60_0 .var "wavedrom_enable", 0 0;
v0xcac020_0 .var "wavedrom_title", 511 0;
E_0xc4a780 .event negedge, v0xcab770_0;
E_0xc4a9d0 .event posedge, v0xcab770_0;
S_0xcaa980 .scope begin, "$ivl_for_loop0" "$ivl_for_loop0" 3 69, 3 69 0, S_0xcaa740;
 .timescale -12 -12;
v0xcaabc0_0 .var/2s "i", 31 0;
E_0xc4a050/0 .event negedge, v0xcab770_0;
E_0xc4a050/1 .event posedge, v0xcab770_0;
E_0xc4a050 .event/or E_0xc4a050/0, E_0xc4a050/1;
S_0xcaacc0 .scope begin, "$ivl_for_loop1" "$ivl_for_loop1" 3 74, 3 74 0, S_0xcaa740;
 .timescale -12 -12;
v0xcaaec0_0 .var/2s "i", 31 0;
S_0xcaafa0 .scope begin, "$ivl_for_loop2" "$ivl_for_loop2" 3 114, 3 114 0, S_0xcaa740;
 .timescale -12 -12;
v0xcab180_0 .var/2s "i", 31 0;
S_0xcab260 .scope task, "wavedrom_start" "wavedrom_start" 3 45, 3 45 0, S_0xcaa740;
 .timescale -12 -12;
v0xcab440_0 .var "title", 511 0;
TD_tb.stim1.wavedrom_start ;
    %end;
S_0xcab540 .scope task, "wavedrom_stop" "wavedrom_stop" 3 48, 3 48 0, S_0xcaa740;
 .timescale -12 -12;
TD_tb.stim1.wavedrom_stop ;
    %delay 1, 0;
    %end;
S_0xcac200 .scope module, "top_module1" "top_module" 3 178, 4 1 0, S_0xc4ed50;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "in";
    .port_info 1 /INPUT 10 "state";
    .port_info 2 /OUTPUT 10 "next_state";
    .port_info 3 /OUTPUT 1 "out1";
    .port_info 4 /OUTPUT 1 "out2";
L_0xcb36c0 .functor OR 1, L_0xcb5470, L_0xcb5620, C4<0>, C4<0>;
L_0xcb5a10 .functor AND 1, L_0xcb57b0, L_0xcb5970, C4<1>, C4<1>;
v0xcac470_0 .net *"_ivl_11", 0 0, L_0xcb2ce0;  1 drivers
v0xcac550_0 .net *"_ivl_13", 0 0, L_0xcb2d80;  1 drivers
v0xcac630_0 .net *"_ivl_14", 0 0, L_0xcb2e20;  1 drivers
v0xcac720_0 .net *"_ivl_19", 0 0, L_0xcb2fa0;  1 drivers
v0xcac800_0 .net *"_ivl_21", 0 0, L_0xcb3040;  1 drivers
v0xcac930_0 .net *"_ivl_22", 0 0, L_0xcb3130;  1 drivers
v0xcaca10_0 .net *"_ivl_27", 0 0, L_0xcb3480;  1 drivers
v0xcacaf0_0 .net *"_ivl_29", 0 0, L_0xcb3580;  1 drivers
v0xcacbd0_0 .net *"_ivl_3", 0 0, L_0xcb2a60;  1 drivers
v0xcacd40_0 .net *"_ivl_30", 0 0, L_0xcb3620;  1 drivers
v0xcace20_0 .net *"_ivl_35", 0 0, L_0xcb3780;  1 drivers
v0xcacf00_0 .net *"_ivl_37", 0 0, L_0xcb3c30;  1 drivers
v0xcacfe0_0 .net *"_ivl_38", 0 0, L_0xcb3d50;  1 drivers
v0xcad0c0_0 .net *"_ivl_43", 0 0, L_0xcb3e90;  1 drivers
v0xcad1a0_0 .net *"_ivl_45", 0 0, L_0xcb3fc0;  1 drivers
v0xcad280_0 .net *"_ivl_46", 0 0, L_0xcb4060;  1 drivers
v0xcad360_0 .net *"_ivl_5", 0 0, L_0xcb2b00;  1 drivers
v0xcad550_0 .net *"_ivl_51", 0 0, L_0xcb4240;  1 drivers
v0xcad630_0 .net *"_ivl_53", 0 0, L_0xcb42e0;  1 drivers
v0xcad710_0 .net *"_ivl_54", 0 0, L_0xcb4100;  1 drivers
v0xcad7f0_0 .net *"_ivl_59", 0 0, L_0xcb44d0;  1 drivers
v0xcad8d0_0 .net *"_ivl_6", 0 0, L_0xcb2ba0;  1 drivers
v0xcad9b0_0 .net *"_ivl_61", 0 0, L_0xcb4630;  1 drivers
v0xcada90_0 .net *"_ivl_62", 0 0, L_0xcb46d0;  1 drivers
v0xcadb70_0 .net *"_ivl_67", 0 0, L_0xcb48e0;  1 drivers
v0xcadc50_0 .net *"_ivl_69", 0 0, L_0xcb4980;  1 drivers
v0xcadd30_0 .net *"_ivl_70", 0 0, L_0xcb4b00;  1 drivers
v0xcade10_0 .net *"_ivl_76", 0 0, L_0xcb50a0;  1 drivers
v0xcadef0_0 .net *"_ivl_78", 0 0, L_0xcb5140;  1 drivers
v0xcadfd0_0 .net *"_ivl_79", 0 0, L_0xcb52e0;  1 drivers
v0xcae0b0_0 .net *"_ivl_82", 0 0, L_0xcb5470;  1 drivers
v0xcae190_0 .net *"_ivl_84", 0 0, L_0xcb5620;  1 drivers
v0xcae270_0 .net *"_ivl_88", 0 0, L_0xcb57b0;  1 drivers
v0xcae560_0 .net *"_ivl_90", 0 0, L_0xcb5970;  1 drivers
v0xcae640_0 .net "in", 0 0, v0xcab9f0_0;  alias, 1 drivers
v0xcae6e0_0 .net "next_state", 9 0, L_0xcb4c40;  alias, 1 drivers
v0xcae7a0_0 .net "out1", 0 0, L_0xcb36c0;  alias, 1 drivers
v0xcae840_0 .net "out2", 0 0, L_0xcb5a10;  alias, 1 drivers
v0xcae900_0 .net "state", 9 0, v0xcabd20_0;  alias, 1 drivers
L_0xcb2a60 .part v0xcabd20_0, 1, 1;
L_0xcb2b00 .part v0xcabd20_0, 0, 1;
L_0xcb2ba0 .functor MUXZ 1, L_0xcb2b00, L_0xcb2a60, v0xcab9f0_0, C4<>;
L_0xcb2ce0 .part v0xcabd20_0, 3, 1;
L_0xcb2d80 .part v0xcabd20_0, 2, 1;
L_0xcb2e20 .functor MUXZ 1, L_0xcb2d80, L_0xcb2ce0, v0xcab9f0_0, C4<>;
L_0xcb2fa0 .part v0xcabd20_0, 0, 1;
L_0xcb3040 .part v0xcabd20_0, 3, 1;
L_0xcb3130 .functor MUXZ 1, L_0xcb3040, L_0xcb2fa0, v0xcab9f0_0, C4<>;
L_0xcb3480 .part v0xcabd20_0, 2, 1;
L_0xcb3580 .part v0xcabd20_0, 4, 1;
L_0xcb3620 .functor MUXZ 1, L_0xcb3580, L_0xcb3480, v0xcab9f0_0, C4<>;
L_0xcb3780 .part v0xcabd20_0, 0, 1;
L_0xcb3c30 .part v0xcabd20_0, 5, 1;
L_0xcb3d50 .functor MUXZ 1, L_0xcb3c30, L_0xcb3780, v0xcab9f0_0, C4<>;
L_0xcb3e90 .part v0xcabd20_0, 7, 1;
L_0xcb3fc0 .part v0xcabd20_0, 6, 1;
L_0xcb4060 .functor MUXZ 1, L_0xcb3fc0, L_0xcb3e90, v0xcab9f0_0, C4<>;
L_0xcb4240 .part v0xcabd20_0, 9, 1;
L_0xcb42e0 .part v0xcabd20_0, 6, 1;
L_0xcb4100 .functor MUXZ 1, L_0xcb42e0, L_0xcb4240, v0xcab9f0_0, C4<>;
L_0xcb44d0 .part v0xcabd20_0, 0, 1;
L_0xcb4630 .part v0xcabd20_0, 7, 1;
L_0xcb46d0 .functor MUXZ 1, L_0xcb4630, L_0xcb44d0, v0xcab9f0_0, C4<>;
L_0xcb48e0 .part v0xcabd20_0, 1, 1;
L_0xcb4980 .part v0xcabd20_0, 8, 1;
L_0xcb4b00 .functor MUXZ 1, L_0xcb4980, L_0xcb48e0, v0xcab9f0_0, C4<>;
LS_0xcb4c40_0_0 .concat8 [ 1 1 1 1], L_0xcb2ba0, L_0xcb2e20, L_0xcb3130, L_0xcb3620;
LS_0xcb4c40_0_4 .concat8 [ 1 1 1 1], L_0xcb3d50, L_0xcb4060, L_0xcb4100, L_0xcb46d0;
LS_0xcb4c40_0_8 .concat8 [ 1 1 0 0], L_0xcb4b00, L_0xcb52e0;
L_0xcb4c40 .concat8 [ 4 4 2 0], LS_0xcb4c40_0_0, LS_0xcb4c40_0_4, LS_0xcb4c40_0_8;
L_0xcb50a0 .part v0xcabd20_0, 1, 1;
L_0xcb5140 .part v0xcabd20_0, 9, 1;
L_0xcb52e0 .functor MUXZ 1, L_0xcb5140, L_0xcb50a0, v0xcab9f0_0, C4<>;
L_0xcb5470 .part v0xcabd20_0, 6, 1;
L_0xcb5620 .part v0xcabd20_0, 8, 1;
L_0xcb57b0 .part v0xcabd20_0, 7, 1;
L_0xcb5970 .part v0xcabd20_0, 6, 1;
S_0xcaeab0 .scope task, "wait_for_end_of_timestep" "wait_for_end_of_timestep" 3 187, 3 187 0, S_0xc4ed50;
 .timescale -12 -12;
E_0xc31a20 .event anyedge, v0xcaf940_0;
TD_tb.wait_for_end_of_timestep ;
    %pushi/vec4 5, 0, 32;
T_2.0 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_2.1, 5;
    %jmp/1 T_2.1, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %load/vec4 v0xcaf940_0;
    %nor/r;
    %assign/vec4 v0xcaf940_0, 0;
    %wait E_0xc31a20;
    %jmp T_2.0;
T_2.1 ;
    %pop/vec4 1;
    %end;
    .scope S_0xcaa740;
T_3 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0xcab850_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0xcab930_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0xcabc60_0, 0, 32;
    %pushi/vec4 0, 0, 10;
    %store/vec4 v0xcabde0_0, 0, 10;
    %end;
    .thread T_3, $init;
    .scope S_0xcaa740;
T_4 ;
    %pushi/vec4 2, 0, 32;
T_4.0 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_4.1, 5;
    %jmp/1 T_4.1, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_0xc4a9d0;
    %jmp T_4.0;
T_4.1 ;
    %pop/vec4 1;
T_4.2 ;
    %wait E_0xc4a050;
    %load/vec4 v0xcabde0_0;
    %load/vec4 v0xcabba0_0;
    %load/vec4 v0xcaba90_0;
    %xor;
    %or;
    %assign/vec4 v0xcabde0_0, 0;
    %jmp T_4.2;
T_4.3 ;
    %end;
    .thread T_4;
    .scope S_0xcaa740;
T_5 ;
    %pushi/vec4 0, 0, 10;
    %assign/vec4 v0xcabd20_0, 0;
    %wait E_0xc4a780;
    %fork t_1, S_0xcaa980;
    %jmp t_0;
    .scope S_0xcaa980;
t_1 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0xcaabc0_0, 0, 32;
T_5.0 ; Top of for-loop 
    %load/vec4 v0xcaabc0_0;
    %cmpi/s 10, 0, 32;
    %jmp/0xz T_5.1, 5;
    %wait E_0xc4a050;
    %pushi/vec4 1, 0, 10;
    %load/vec4 v0xcaabc0_0;
    %ix/vec4 4;
    %shiftl 4;
    %assign/vec4 v0xcabd20_0, 0;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0xcab9f0_0, 0;
T_5.2 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0xcaabc0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0xcaabc0_0, 0, 32;
    %jmp T_5.0;
T_5.1 ; for-loop exit label
    %end;
    .scope S_0xcaa740;
t_0 %join;
    %fork t_3, S_0xcaacc0;
    %jmp t_2;
    .scope S_0xcaacc0;
t_3 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0xcaaec0_0, 0, 32;
T_5.3 ; Top of for-loop 
    %load/vec4 v0xcaaec0_0;
    %cmpi/s 10, 0, 32;
    %jmp/0xz T_5.4, 5;
    %wait E_0xc4a050;
    %pushi/vec4 1, 0, 10;
    %load/vec4 v0xcaaec0_0;
    %ix/vec4 4;
    %shiftl 4;
    %assign/vec4 v0xcabd20_0, 0;
    %pushi/vec4 1, 0, 1;
    %assign/vec4 v0xcab9f0_0, 0;
T_5.5 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0xcaaec0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0xcaaec0_0, 0, 32;
    %jmp T_5.3;
T_5.4 ; for-loop exit label
    %end;
    .scope S_0xcaa740;
t_2 %join;
    %wait E_0xc4a780;
    %fork TD_tb.stim1.wavedrom_stop, S_0xcab540;
    %join;
    %pushi/vec4 200, 0, 32;
T_5.6 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_5.7, 5;
    %jmp/1 T_5.7, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_0xc4a050;
    %pushi/vec4 1, 0, 10;
    %vpi_func 3 83 "$random" 32 {0 0 0};
    %pushi/vec4 10, 0, 32;
    %mod;
    %ix/vec4 4;
    %shiftl 4;
    %assign/vec4 v0xcabd20_0, 0;
    %vpi_func 3 84 "$random" 32 {0 0 0};
    %pad/s 1;
    %assign/vec4 v0xcab9f0_0, 0;
    %load/vec4 v0xcabea0_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.8, 8;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0xcabc60_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0xcabc60_0, 0, 32;
T_5.8 ;
    %jmp T_5.6;
T_5.7 ;
    %pop/vec4 1;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0xcab850_0, 0, 32;
    %pushi/vec4 400, 0, 32;
T_5.10 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_5.11, 5;
    %jmp/1 T_5.11, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_0xc4a050;
    %pushi/vec4 1, 0, 10;
    %vpi_func 3 91 "$random" 32 {0 0 0};
    %pushi/vec4 10, 0, 32;
    %mod;
    %ix/vec4 4;
    %shiftl 4;
    %pushi/vec4 1, 0, 10;
    %vpi_func 3 91 "$random" 32 {0 0 0};
    %pushi/vec4 10, 0, 32;
    %mod;
    %ix/vec4 4;
    %shiftl 4;
    %or;
    %assign/vec4 v0xcabd20_0, 0;
    %vpi_func 3 92 "$random" 32 {0 0 0};
    %pad/s 1;
    %assign/vec4 v0xcab9f0_0, 0;
    %load/vec4 v0xcabea0_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.12, 8;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0xcab850_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0xcab850_0, 0, 32;
T_5.12 ;
    %jmp T_5.10;
T_5.11 ;
    %pop/vec4 1;
    %load/vec4 v0xcabc60_0;
    %nor/r;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_5.16, 9;
    %load/vec4 v0xcab850_0;
    %pushi/vec4 0, 0, 32;
    %cmp/ne;
    %flag_get/vec4 4;
    %and;
T_5.16;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.14, 8;
    %vpi_call/w 3 98 "$display", "Hint: Your circuit passed when given only one-hot inputs, but not with two-hot inputs." {0 0 0};
T_5.14 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0xcab930_0, 0, 32;
    %pushi/vec4 800, 0, 32;
T_5.17 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_5.18, 5;
    %jmp/1 T_5.18, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_0xc4a050;
    %vpi_func 3 103 "$random" 32 {0 0 0};
    %pad/s 10;
    %assign/vec4 v0xcabd20_0, 0;
    %vpi_func 3 104 "$random" 32 {0 0 0};
    %pad/s 1;
    %assign/vec4 v0xcab9f0_0, 0;
    %load/vec4 v0xcabea0_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.19, 8;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0xcab930_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0xcab930_0, 0, 32;
T_5.19 ;
    %jmp T_5.17;
T_5.18 ;
    %pop/vec4 1;
    %load/vec4 v0xcabc60_0;
    %nor/r;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_5.23, 9;
    %load/vec4 v0xcab930_0;
    %pushi/vec4 0, 0, 32;
    %cmp/ne;
    %flag_get/vec4 4;
    %and;
T_5.23;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.21, 8;
    %vpi_call/w 3 109 "$display", "Hint: Your circuit passed when given only one-hot inputs, but not with random inputs." {0 0 0};
T_5.21 ;
    %load/vec4 v0xcabc60_0;
    %nor/r;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_5.26, 9;
    %load/vec4 v0xcab850_0;
    %cmpi/ne 0, 0, 32;
    %flag_get/vec4 4;
    %jmp/1 T_5.27, 4;
    %load/vec4 v0xcab930_0;
    %pushi/vec4 0, 0, 32;
    %cmp/ne;
    %flag_get/vec4 4;
    %or;
T_5.27;
    %and;
T_5.26;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.24, 8;
    %vpi_call/w 3 112 "$display", "Hint: Are you doing something more complicated than deriving state transition equations by inspection?\012" {0 0 0};
T_5.24 ;
    %fork t_5, S_0xcaafa0;
    %jmp t_4;
    .scope S_0xcaafa0;
t_5 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0xcab180_0, 0, 32;
T_5.28 ; Top of for-loop 
    %load/vec4 v0xcab180_0;
    %cmpi/u 10, 0, 32;
    %jmp/0xz T_5.29, 5;
    %load/vec4 v0xcabde0_0;
    %load/vec4 v0xcab180_0;
    %part/s 1;
    %cmpi/e 0, 0, 1;
    %flag_mov 8, 6;
    %jmp/0 T_5.31, 8;
    %pushi/vec4 25455, 0, 32; draw_string_vec4
    %pushi/vec4 1920099683, 0, 32; draw_string_vec4
    %concat/vec4; draw_string_vec4
    %pushi/vec4 116, 0, 8; draw_string_vec4
    %concat/vec4; draw_string_vec4
    %jmp/1 T_5.32, 8;
T_5.31 ; End of true expr.
    %pushi/vec4 1768842095, 0, 32; draw_string_vec4
    %pushi/vec4 1920099683, 0, 32; draw_string_vec4
    %concat/vec4; draw_string_vec4
    %pushi/vec4 116, 0, 8; draw_string_vec4
    %concat/vec4; draw_string_vec4
    %jmp/0 T_5.32, 8;
 ; End of false expr.
    %blend;
T_5.32;
    %vpi_call/w 3 115 "$display", "Hint: next_state[%0d] is %s.", v0xcab180_0, S<0,vec4,u72> {1 0 0};
T_5.30 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0xcab180_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0xcab180_0, 0, 32;
    %jmp T_5.28;
T_5.29 ; for-loop exit label
    %end;
    .scope S_0xcaa740;
t_4 %join;
    %delay 1, 0;
    %vpi_call/w 3 117 "$finish" {0 0 0};
    %end;
    .thread T_5;
    .scope S_0xc4ed50;
T_6 ;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0xcaf260_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0xcaf940_0, 0, 1;
    %end;
    .thread T_6, $init;
    .scope S_0xc4ed50;
T_7 ;
T_7.0 ;
    %delay 5, 0;
    %load/vec4 v0xcaf260_0;
    %inv;
    %store/vec4 v0xcaf260_0, 0, 1;
    %jmp T_7.0;
T_7.1 ;
    %end;
    .thread T_7;
    .scope S_0xc4ed50;
T_8 ;
    %vpi_call/w 3 158 "$dumpfile", "wave.vcd" {0 0 0};
    %vpi_call/w 3 159 "$dumpvars", 32'sb00000000000000000000000000000001, v0xcab770_0, v0xcafab0_0, v0xcaf300_0, v0xcaf800_0, v0xcaf440_0, v0xcaf3a0_0, v0xcaf5f0_0, v0xcaf550_0, v0xcaf730_0, v0xcaf690_0 {0 0 0};
    %end;
    .thread T_8;
    .scope S_0xc4ed50;
T_9 ;
    %load/vec4 v0xcaf8a0_0;
    %parti/u 32, 192, 32;
    %cmpi/ne 0, 0, 32;
    %jmp/0xz  T_9.0, 4;
    %load/vec4 v0xcaf8a0_0;
    %parti/u 32, 192, 32;
    %load/vec4 v0xcaf8a0_0;
    %parti/u 32, 160, 32;
    %vpi_call/w 3 196 "$display", "Hint: Output '%s' has %0d mismatches. First mismatch occurred at time %0d.", "next_state", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %jmp T_9.1;
T_9.0 ;
    %vpi_call/w 3 197 "$display", "Hint: Output '%s' has no mismatches.", "next_state" {0 0 0};
T_9.1 ;
    %load/vec4 v0xcaf8a0_0;
    %parti/u 32, 128, 32;
    %cmpi/ne 0, 0, 32;
    %jmp/0xz  T_9.2, 4;
    %load/vec4 v0xcaf8a0_0;
    %parti/u 32, 128, 32;
    %load/vec4 v0xcaf8a0_0;
    %parti/u 32, 96, 32;
    %vpi_call/w 3 198 "$display", "Hint: Output '%s' has %0d mismatches. First mismatch occurred at time %0d.", "out1", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %jmp T_9.3;
T_9.2 ;
    %vpi_call/w 3 199 "$display", "Hint: Output '%s' has no mismatches.", "out1" {0 0 0};
T_9.3 ;
    %load/vec4 v0xcaf8a0_0;
    %parti/u 32, 64, 32;
    %cmpi/ne 0, 0, 32;
    %jmp/0xz  T_9.4, 4;
    %load/vec4 v0xcaf8a0_0;
    %parti/u 32, 64, 32;
    %load/vec4 v0xcaf8a0_0;
    %parti/u 32, 32, 32;
    %vpi_call/w 3 200 "$display", "Hint: Output '%s' has %0d mismatches. First mismatch occurred at time %0d.", "out2", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %jmp T_9.5;
T_9.4 ;
    %vpi_call/w 3 201 "$display", "Hint: Output '%s' has no mismatches.", "out2" {0 0 0};
T_9.5 ;
    %load/vec4 v0xcaf8a0_0;
    %parti/u 32, 256, 32;
    %load/vec4 v0xcaf8a0_0;
    %parti/u 32, 0, 32;
    %vpi_call/w 3 203 "$display", "Hint: Total mismatched samples is %1d out of %1d samples\012", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %vpi_call/w 3 204 "$display", "Simulation finished at %0d ps", $time {0 0 0};
    %load/vec4 v0xcaf8a0_0;
    %parti/u 32, 256, 32;
    %load/vec4 v0xcaf8a0_0;
    %parti/u 32, 0, 32;
    %vpi_call/w 3 205 "$display", "Mismatches: %1d in %1d samples", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %end;
    .thread T_9, $final;
    .scope S_0xc4ed50;
T_10 ;
    %wait E_0xc4a050;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0xcaf8a0_0;
    %pushi/vec4 0, 0, 32;
    %part/u 32;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0xcaf8a0_0, 4, 32;
    %load/vec4 v0xcaf9e0_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_10.0, 8;
    %load/vec4 v0xcaf8a0_0;
    %parti/u 32, 256, 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_10.2, 4;
    %vpi_func 3 216 "$time" 64 {0 0 0};
    %cast2;
    %pad/u 32;
    %ix/load 4, 224, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0xcaf8a0_0, 4, 32;
T_10.2 ;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0xcaf8a0_0;
    %pushi/vec4 256, 0, 32;
    %part/u 32;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %ix/load 4, 256, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0xcaf8a0_0, 4, 32;
T_10.0 ;
    %load/vec4 v0xcaf440_0;
    %load/vec4 v0xcaf440_0;
    %load/vec4 v0xcaf3a0_0;
    %xor;
    %load/vec4 v0xcaf440_0;
    %xor;
    %cmp/ne;
    %jmp/0xz  T_10.4, 6;
    %load/vec4 v0xcaf8a0_0;
    %parti/u 32, 192, 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_10.6, 4;
    %vpi_func 3 220 "$time" 64 {0 0 0};
    %cast2;
    %pad/u 32;
    %ix/load 4, 160, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0xcaf8a0_0, 4, 32;
T_10.6 ;
    %load/vec4 v0xcaf8a0_0;
    %parti/u 32, 192, 32;
    %addi 1, 0, 32;
    %ix/load 4, 192, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0xcaf8a0_0, 4, 32;
T_10.4 ;
    %load/vec4 v0xcaf5f0_0;
    %load/vec4 v0xcaf5f0_0;
    %load/vec4 v0xcaf550_0;
    %xor;
    %load/vec4 v0xcaf5f0_0;
    %xor;
    %cmp/ne;
    %jmp/0xz  T_10.8, 6;
    %load/vec4 v0xcaf8a0_0;
    %parti/u 32, 128, 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_10.10, 4;
    %vpi_func 3 223 "$time" 64 {0 0 0};
    %cast2;
    %pad/u 32;
    %ix/load 4, 96, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0xcaf8a0_0, 4, 32;
T_10.10 ;
    %load/vec4 v0xcaf8a0_0;
    %parti/u 32, 128, 32;
    %addi 1, 0, 32;
    %ix/load 4, 128, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0xcaf8a0_0, 4, 32;
T_10.8 ;
    %load/vec4 v0xcaf730_0;
    %load/vec4 v0xcaf730_0;
    %load/vec4 v0xcaf690_0;
    %xor;
    %load/vec4 v0xcaf730_0;
    %xor;
    %cmp/ne;
    %jmp/0xz  T_10.12, 6;
    %load/vec4 v0xcaf8a0_0;
    %parti/u 32, 64, 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_10.14, 4;
    %vpi_func 3 226 "$time" 64 {0 0 0};
    %cast2;
    %pad/u 32;
    %ix/load 4, 32, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0xcaf8a0_0, 4, 32;
T_10.14 ;
    %load/vec4 v0xcaf8a0_0;
    %parti/u 32, 64, 32;
    %addi 1, 0, 32;
    %ix/load 4, 64, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0xcaf8a0_0, 4, 32;
T_10.12 ;
    %jmp T_10;
    .thread T_10;
# The file index is used to find the file name in the following table.
:file_names 5;
    "N/A";
    "<interactive>";
    "-";
    "/home/jmb9986/AutoChip/autochip_scripts/../verilogeval_prompts_tbs/ve_testbenches_human/fsm_onehot/fsm_onehot_tb.sv";
    "/home/jmb9986/AutoChip/autochip_scripts/outputs/gpt3p5-ff/can5_depth10/human/fsm_onehot/iter7/response0/top_module.sv";
