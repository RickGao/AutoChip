module top_module (
	input [4:1] x,
	output logic f
);

always @(*) begin
    f = ( (~x[3] & ~x[4] & ~x[1] & ~x[2]) | // 0000
          (~x[3] & ~x[4] &  x[1] &  x[2]) | // 0011
          ( x[3] &  x[4] & ~x[1] &  x[2]) | // 1101
          ( x[3] &  x[4] & ~x[1] & ~x[2]) | // 1100
          ( x[3] &  x[4] &  x[1] &  x[2]) | // 1111
          ( x[3] & ~x[4] & ~x[1] & ~x[2]) | // 1000
          ( x[3] & ~x[4] &  x[1] &  x[2]) | // 1011
          (~x[3] & ~x[4] & ~x[1] & ~x[2]) | // 0000 (redeclaration)
          ( x[3] & ~x[4] & ~x[1] &  x[2]) | // 1001
          (~x[3] &  x[4] & ~x[1] & ~x[2]) | // 0100
          ( x[3] & ~x[4] & ~x[1] &  x[2]) | // 1001 (fixed repetition)
          (~x[3] &  x[4] &  x[1] & ~x[2]) | // 0110
          (~x[3] & ~x[4] &  x[1] & ~x[2])   // 0010
        );
end

endmodule
