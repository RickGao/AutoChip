#! /usr/local/bin/vvp
:ivl_version "13.0 (devel)" "(s20221226-331-g77d7f0b8f)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision - 12;
:vpi_module "/usr/local/lib/ivl/system.vpi";
:vpi_module "/usr/local/lib/ivl/vhdl_sys.vpi";
:vpi_module "/usr/local/lib/ivl/vhdl_textio.vpi";
:vpi_module "/usr/local/lib/ivl/v2005_math.vpi";
:vpi_module "/usr/local/lib/ivl/va_math.vpi";
:vpi_module "/usr/local/lib/ivl/v2009.vpi";
S_0x25ffdb0 .scope package, "$unit" "$unit" 2 1;
 .timescale 0 0;
S_0x2619490 .scope module, "tb" "tb" 3 58;
 .timescale -12 -12;
L_0x2603be0 .functor NOT 1, L_0x2650d50, C4<0>, C4<0>, C4<0>;
L_0x2650b30 .functor XOR 9, L_0x2650960, L_0x2650a90, C4<000000000>, C4<000000000>;
L_0x2650c40 .functor XOR 9, L_0x2650b30, L_0x2650ba0, C4<000000000>, C4<000000000>;
v0x264db40_0 .net *"_ivl_10", 8 0, L_0x2650ba0;  1 drivers
v0x264dc40_0 .net *"_ivl_12", 8 0, L_0x2650c40;  1 drivers
v0x264dd20_0 .net *"_ivl_2", 8 0, L_0x26508c0;  1 drivers
v0x264dde0_0 .net *"_ivl_4", 8 0, L_0x2650960;  1 drivers
v0x264dec0_0 .net *"_ivl_6", 8 0, L_0x2650a90;  1 drivers
v0x264dff0_0 .net *"_ivl_8", 8 0, L_0x2650b30;  1 drivers
v0x264e0d0_0 .net "a", 7 0, v0x264bd70_0;  1 drivers
v0x264e190_0 .net "b", 7 0, v0x264be30_0;  1 drivers
v0x264e250_0 .var "clk", 0 0;
v0x264e2f0_0 .net "overflow_dut", 0 0, L_0x2650710;  1 drivers
v0x264e390_0 .net "overflow_ref", 0 0, L_0x2604630;  1 drivers
v0x264e430_0 .net "s_dut", 7 0, L_0x264f9d0;  1 drivers
v0x264e500_0 .net "s_ref", 7 0, L_0x264ef10;  1 drivers
v0x264e5d0_0 .var/2u "stats1", 223 0;
v0x264e670_0 .var/2u "strobe", 0 0;
v0x264e710_0 .net "tb_match", 0 0, L_0x2650d50;  1 drivers
v0x264e7d0_0 .net "tb_mismatch", 0 0, L_0x2603be0;  1 drivers
v0x264e9a0_0 .net "wavedrom_enable", 0 0, v0x264bf70_0;  1 drivers
v0x264ea70_0 .net "wavedrom_title", 511 0, v0x264c010_0;  1 drivers
L_0x26508c0 .concat [ 1 8 0 0], L_0x2604630, L_0x264ef10;
L_0x2650960 .concat [ 1 8 0 0], L_0x2604630, L_0x264ef10;
L_0x2650a90 .concat [ 1 8 0 0], L_0x2650710, L_0x264f9d0;
L_0x2650ba0 .concat [ 1 8 0 0], L_0x2604630, L_0x264ef10;
L_0x2650d50 .cmp/eeq 9, L_0x26508c0, L_0x2650c40;
S_0x2619620 .scope module, "good1" "reference_module" 3 103, 3 4 0, S_0x2619490;
 .timescale -12 -12;
    .port_info 0 /INPUT 8 "a";
    .port_info 1 /INPUT 8 "b";
    .port_info 2 /OUTPUT 8 "s";
    .port_info 3 /OUTPUT 1 "overflow";
L_0x2603f50 .functor XOR 1, L_0x264f080, L_0x264f120, C4<0>, C4<0>;
L_0x26042c0 .functor XOR 1, L_0x264f390, L_0x264f480, C4<0>, C4<0>;
L_0x2604630 .functor AND 1, L_0x264f2a0, L_0x26042c0, C4<1>, C4<1>;
v0x26035f0_0 .net *"_ivl_0", 8 0, L_0x264eba0;  1 drivers
v0x2603980_0 .net *"_ivl_13", 0 0, L_0x264f080;  1 drivers
v0x2603cf0_0 .net *"_ivl_15", 0 0, L_0x264f120;  1 drivers
v0x2604060_0 .net *"_ivl_16", 0 0, L_0x2603f50;  1 drivers
v0x26043d0_0 .net *"_ivl_19", 0 0, L_0x264f2a0;  1 drivers
v0x2604740_0 .net *"_ivl_21", 0 0, L_0x264f390;  1 drivers
v0x2604ab0_0 .net *"_ivl_23", 0 0, L_0x264f480;  1 drivers
v0x264ad00_0 .net *"_ivl_24", 0 0, L_0x26042c0;  1 drivers
L_0x7fcc3bbd4018 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x264adc0_0 .net *"_ivl_3", 0 0, L_0x7fcc3bbd4018;  1 drivers
v0x264af30_0 .net *"_ivl_4", 8 0, L_0x264eca0;  1 drivers
L_0x7fcc3bbd4060 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x264b010_0 .net *"_ivl_7", 0 0, L_0x7fcc3bbd4060;  1 drivers
v0x264b0f0_0 .net "a", 7 0, v0x264bd70_0;  alias, 1 drivers
v0x264b1d0_0 .net "b", 7 0, v0x264be30_0;  alias, 1 drivers
v0x264b2b0_0 .net "overflow", 0 0, L_0x2604630;  alias, 1 drivers
v0x264b370_0 .net "s", 7 0, L_0x264ef10;  alias, 1 drivers
v0x264b450_0 .net "sum", 8 0, L_0x264ee20;  1 drivers
L_0x264eba0 .concat [ 8 1 0 0], v0x264bd70_0, L_0x7fcc3bbd4018;
L_0x264eca0 .concat [ 8 1 0 0], v0x264be30_0, L_0x7fcc3bbd4060;
L_0x264ee20 .arith/sum 9, L_0x264eba0, L_0x264eca0;
L_0x264ef10 .part L_0x264ee20, 0, 8;
L_0x264f080 .part v0x264bd70_0, 7, 1;
L_0x264f120 .part v0x264be30_0, 7, 1;
L_0x264f2a0 .reduce/nor L_0x2603f50;
L_0x264f390 .part v0x264bd70_0, 7, 1;
L_0x264f480 .part L_0x264ef10, 7, 1;
S_0x264b5b0 .scope module, "stim1" "stimulus_gen" 3 98, 3 18 0, S_0x2619490;
 .timescale -12 -12;
    .port_info 0 /INPUT 1 "clk";
    .port_info 1 /OUTPUT 8 "a";
    .port_info 2 /OUTPUT 8 "b";
    .port_info 3 /OUTPUT 512 "wavedrom_title";
    .port_info 4 /OUTPUT 1 "wavedrom_enable";
v0x264bd70_0 .var "a", 7 0;
v0x264be30_0 .var "b", 7 0;
v0x264bed0_0 .net "clk", 0 0, v0x264e250_0;  1 drivers
v0x264bf70_0 .var "wavedrom_enable", 0 0;
v0x264c010_0 .var "wavedrom_title", 511 0;
E_0x2612b80/0 .event negedge, v0x264bed0_0;
E_0x2612b80/1 .event posedge, v0x264bed0_0;
E_0x2612b80 .event/or E_0x2612b80/0, E_0x2612b80/1;
E_0x26128c0 .event negedge, v0x264bed0_0;
E_0x2613090 .event posedge, v0x264bed0_0;
S_0x264b870 .scope task, "wavedrom_start" "wavedrom_start" 3 30, 3 30 0, S_0x264b5b0;
 .timescale -12 -12;
v0x264ba70_0 .var "title", 511 0;
TD_tb.stim1.wavedrom_start ;
    %end;
S_0x264bb70 .scope task, "wavedrom_stop" "wavedrom_stop" 3 33, 3 33 0, S_0x264b5b0;
 .timescale -12 -12;
TD_tb.stim1.wavedrom_stop ;
    %delay 1, 0;
    %end;
S_0x264c1e0 .scope module, "top_module1" "top_module" 3 109, 4 1 0, S_0x2619490;
 .timescale 0 0;
    .port_info 0 /INPUT 8 "a";
    .port_info 1 /INPUT 8 "b";
    .port_info 2 /OUTPUT 8 "s";
    .port_info 3 /OUTPUT 1 "overflow";
L_0x26049a0 .functor NOT 1, L_0x264fb40, C4<0>, C4<0>, C4<0>;
L_0x261a180 .functor NOT 1, L_0x264fd40, C4<0>, C4<0>, C4<0>;
L_0x26265e0 .functor AND 1, L_0x26049a0, L_0x261a180, C4<1>, C4<1>;
L_0x264ffb0 .functor AND 1, L_0x26265e0, L_0x264ff10, C4<1>, C4<1>;
L_0x2650390 .functor AND 1, L_0x26500f0, L_0x26501e0, C4<1>, C4<1>;
L_0x26505a0 .functor NOT 1, L_0x26504a0, C4<0>, C4<0>, C4<0>;
L_0x2650650 .functor AND 1, L_0x2650390, L_0x26505a0, C4<1>, C4<1>;
L_0x2650710 .functor OR 1, L_0x264ffb0, L_0x2650650, C4<0>, C4<0>;
v0x264c480_0 .net *"_ivl_0", 8 0, L_0x264f6b0;  1 drivers
v0x264c560_0 .net *"_ivl_13", 0 0, L_0x264fb40;  1 drivers
v0x264c640_0 .net *"_ivl_14", 0 0, L_0x26049a0;  1 drivers
v0x264c730_0 .net *"_ivl_17", 0 0, L_0x264fd40;  1 drivers
v0x264c810_0 .net *"_ivl_18", 0 0, L_0x261a180;  1 drivers
v0x264c940_0 .net *"_ivl_20", 0 0, L_0x26265e0;  1 drivers
v0x264ca20_0 .net *"_ivl_23", 0 0, L_0x264ff10;  1 drivers
v0x264cb00_0 .net *"_ivl_24", 0 0, L_0x264ffb0;  1 drivers
v0x264cbe0_0 .net *"_ivl_27", 0 0, L_0x26500f0;  1 drivers
v0x264cd50_0 .net *"_ivl_29", 0 0, L_0x26501e0;  1 drivers
L_0x7fcc3bbd40a8 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x264ce30_0 .net *"_ivl_3", 0 0, L_0x7fcc3bbd40a8;  1 drivers
v0x264cf10_0 .net *"_ivl_30", 0 0, L_0x2650390;  1 drivers
v0x264cff0_0 .net *"_ivl_33", 0 0, L_0x26504a0;  1 drivers
v0x264d0d0_0 .net *"_ivl_34", 0 0, L_0x26505a0;  1 drivers
v0x264d1b0_0 .net *"_ivl_36", 0 0, L_0x2650650;  1 drivers
v0x264d290_0 .net *"_ivl_4", 8 0, L_0x264f7a0;  1 drivers
L_0x7fcc3bbd40f0 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x264d370_0 .net *"_ivl_7", 0 0, L_0x7fcc3bbd40f0;  1 drivers
v0x264d450_0 .net "a", 7 0, v0x264bd70_0;  alias, 1 drivers
v0x264d510_0 .net "b", 7 0, v0x264be30_0;  alias, 1 drivers
v0x264d620_0 .net "overflow", 0 0, L_0x2650710;  alias, 1 drivers
v0x264d6e0_0 .net "s", 7 0, L_0x264f9d0;  alias, 1 drivers
v0x264d7c0_0 .net "sum", 8 0, L_0x264f890;  1 drivers
L_0x264f6b0 .concat [ 8 1 0 0], v0x264bd70_0, L_0x7fcc3bbd40a8;
L_0x264f7a0 .concat [ 8 1 0 0], v0x264be30_0, L_0x7fcc3bbd40f0;
L_0x264f890 .arith/sum 9, L_0x264f6b0, L_0x264f7a0;
L_0x264f9d0 .part L_0x264f890, 0, 8;
L_0x264fb40 .part v0x264bd70_0, 7, 1;
L_0x264fd40 .part v0x264be30_0, 7, 1;
L_0x264ff10 .part L_0x264f890, 8, 1;
L_0x26500f0 .part v0x264bd70_0, 7, 1;
L_0x26501e0 .part v0x264be30_0, 7, 1;
L_0x26504a0 .part L_0x264f890, 8, 1;
S_0x264d920 .scope task, "wait_for_end_of_timestep" "wait_for_end_of_timestep" 3 117, 3 117 0, S_0x2619490;
 .timescale -12 -12;
E_0x25fc9f0 .event anyedge, v0x264e670_0;
TD_tb.wait_for_end_of_timestep ;
    %pushi/vec4 5, 0, 32;
T_2.0 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_2.1, 5;
    %jmp/1 T_2.1, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %load/vec4 v0x264e670_0;
    %nor/r;
    %assign/vec4 v0x264e670_0, 0;
    %wait E_0x25fc9f0;
    %jmp T_2.0;
T_2.1 ;
    %pop/vec4 1;
    %end;
    .scope S_0x264b5b0;
T_3 ;
    %pushi/vec4 0, 0, 16;
    %split/vec4 8;
    %assign/vec4 v0x264be30_0, 0;
    %assign/vec4 v0x264bd70_0, 0;
    %wait E_0x26128c0;
    %wait E_0x2613090;
    %pushi/vec4 0, 0, 16;
    %split/vec4 8;
    %assign/vec4 v0x264be30_0, 0;
    %assign/vec4 v0x264bd70_0, 0;
    %wait E_0x2613090;
    %pushi/vec4 112, 0, 16;
    %split/vec4 8;
    %assign/vec4 v0x264be30_0, 0;
    %assign/vec4 v0x264bd70_0, 0;
    %wait E_0x2613090;
    %pushi/vec4 28784, 0, 16;
    %split/vec4 8;
    %assign/vec4 v0x264be30_0, 0;
    %assign/vec4 v0x264bd70_0, 0;
    %wait E_0x2613090;
    %pushi/vec4 28816, 0, 16;
    %split/vec4 8;
    %assign/vec4 v0x264be30_0, 0;
    %assign/vec4 v0x264bd70_0, 0;
    %wait E_0x2613090;
    %pushi/vec4 36976, 0, 16;
    %split/vec4 8;
    %assign/vec4 v0x264be30_0, 0;
    %assign/vec4 v0x264bd70_0, 0;
    %wait E_0x2613090;
    %pushi/vec4 37008, 0, 16;
    %split/vec4 8;
    %assign/vec4 v0x264be30_0, 0;
    %assign/vec4 v0x264bd70_0, 0;
    %wait E_0x2613090;
    %pushi/vec4 37119, 0, 16;
    %split/vec4 8;
    %assign/vec4 v0x264be30_0, 0;
    %assign/vec4 v0x264bd70_0, 0;
    %wait E_0x26128c0;
    %fork TD_tb.stim1.wavedrom_stop, S_0x264bb70;
    %join;
    %pushi/vec4 100, 0, 32;
T_3.0 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_3.1, 5;
    %jmp/1 T_3.1, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_0x2612b80;
    %vpi_func 3 51 "$random" 32 {0 0 0};
    %pad/s 16;
    %split/vec4 8;
    %assign/vec4 v0x264be30_0, 0;
    %assign/vec4 v0x264bd70_0, 0;
    %jmp T_3.0;
T_3.1 ;
    %pop/vec4 1;
    %vpi_call/w 3 53 "$finish" {0 0 0};
    %end;
    .thread T_3;
    .scope S_0x2619490;
T_4 ;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x264e250_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x264e670_0, 0, 1;
    %end;
    .thread T_4, $init;
    .scope S_0x2619490;
T_5 ;
T_5.0 ;
    %delay 5, 0;
    %load/vec4 v0x264e250_0;
    %inv;
    %store/vec4 v0x264e250_0, 0, 1;
    %jmp T_5.0;
T_5.1 ;
    %end;
    .thread T_5;
    .scope S_0x2619490;
T_6 ;
    %vpi_call/w 3 90 "$dumpfile", "wave.vcd" {0 0 0};
    %vpi_call/w 3 91 "$dumpvars", 32'sb00000000000000000000000000000001, v0x264bed0_0, v0x264e7d0_0, v0x264e0d0_0, v0x264e190_0, v0x264e500_0, v0x264e430_0, v0x264e390_0, v0x264e2f0_0 {0 0 0};
    %end;
    .thread T_6;
    .scope S_0x2619490;
T_7 ;
    %load/vec4 v0x264e5d0_0;
    %parti/u 32, 128, 32;
    %cmpi/ne 0, 0, 32;
    %jmp/0xz  T_7.0, 4;
    %load/vec4 v0x264e5d0_0;
    %parti/u 32, 128, 32;
    %load/vec4 v0x264e5d0_0;
    %parti/u 32, 96, 32;
    %vpi_call/w 3 126 "$display", "Hint: Output '%s' has %0d mismatches. First mismatch occurred at time %0d.", "s", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %jmp T_7.1;
T_7.0 ;
    %vpi_call/w 3 127 "$display", "Hint: Output '%s' has no mismatches.", "s" {0 0 0};
T_7.1 ;
    %load/vec4 v0x264e5d0_0;
    %parti/u 32, 64, 32;
    %cmpi/ne 0, 0, 32;
    %jmp/0xz  T_7.2, 4;
    %load/vec4 v0x264e5d0_0;
    %parti/u 32, 64, 32;
    %load/vec4 v0x264e5d0_0;
    %parti/u 32, 32, 32;
    %vpi_call/w 3 128 "$display", "Hint: Output '%s' has %0d mismatches. First mismatch occurred at time %0d.", "overflow", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %jmp T_7.3;
T_7.2 ;
    %vpi_call/w 3 129 "$display", "Hint: Output '%s' has no mismatches.", "overflow" {0 0 0};
T_7.3 ;
    %load/vec4 v0x264e5d0_0;
    %parti/u 32, 192, 32;
    %load/vec4 v0x264e5d0_0;
    %parti/u 32, 0, 32;
    %vpi_call/w 3 131 "$display", "Hint: Total mismatched samples is %1d out of %1d samples\012", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %vpi_call/w 3 132 "$display", "Simulation finished at %0d ps", $time {0 0 0};
    %load/vec4 v0x264e5d0_0;
    %parti/u 32, 192, 32;
    %load/vec4 v0x264e5d0_0;
    %parti/u 32, 0, 32;
    %vpi_call/w 3 133 "$display", "Mismatches: %1d in %1d samples", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %end;
    .thread T_7, $final;
    .scope S_0x2619490;
T_8 ;
    %wait E_0x2612b80;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x264e5d0_0;
    %pushi/vec4 0, 0, 32;
    %part/u 32;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x264e5d0_0, 4, 32;
    %load/vec4 v0x264e710_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_8.0, 8;
    %load/vec4 v0x264e5d0_0;
    %parti/u 32, 192, 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_8.2, 4;
    %vpi_func 3 144 "$time" 64 {0 0 0};
    %cast2;
    %pad/u 32;
    %ix/load 4, 160, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x264e5d0_0, 4, 32;
T_8.2 ;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x264e5d0_0;
    %pushi/vec4 192, 0, 32;
    %part/u 32;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %ix/load 4, 192, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x264e5d0_0, 4, 32;
T_8.0 ;
    %load/vec4 v0x264e500_0;
    %load/vec4 v0x264e500_0;
    %load/vec4 v0x264e430_0;
    %xor;
    %load/vec4 v0x264e500_0;
    %xor;
    %cmp/ne;
    %jmp/0xz  T_8.4, 6;
    %load/vec4 v0x264e5d0_0;
    %parti/u 32, 128, 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_8.6, 4;
    %vpi_func 3 148 "$time" 64 {0 0 0};
    %cast2;
    %pad/u 32;
    %ix/load 4, 96, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x264e5d0_0, 4, 32;
T_8.6 ;
    %load/vec4 v0x264e5d0_0;
    %parti/u 32, 128, 32;
    %addi 1, 0, 32;
    %ix/load 4, 128, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x264e5d0_0, 4, 32;
T_8.4 ;
    %load/vec4 v0x264e390_0;
    %load/vec4 v0x264e390_0;
    %load/vec4 v0x264e2f0_0;
    %xor;
    %load/vec4 v0x264e390_0;
    %xor;
    %cmp/ne;
    %jmp/0xz  T_8.8, 6;
    %load/vec4 v0x264e5d0_0;
    %parti/u 32, 64, 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_8.10, 4;
    %vpi_func 3 151 "$time" 64 {0 0 0};
    %cast2;
    %pad/u 32;
    %ix/load 4, 32, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x264e5d0_0, 4, 32;
T_8.10 ;
    %load/vec4 v0x264e5d0_0;
    %parti/u 32, 64, 32;
    %addi 1, 0, 32;
    %ix/load 4, 64, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x264e5d0_0, 4, 32;
T_8.8 ;
    %jmp T_8;
    .thread T_8;
# The file index is used to find the file name in the following table.
:file_names 5;
    "N/A";
    "<interactive>";
    "-";
    "/home/jmb9986/AutoChip/autochip_scripts/../verilogeval_prompts_tbs/ve_testbenches_machine/ece241_2014_q1c/ece241_2014_q1c_tb.sv";
    "/home/jmb9986/AutoChip/autochip_scripts/outputs/gpt-4o/can10_depth0/machine/ece241_2014_q1c/iter0/response8/top_module.sv";
