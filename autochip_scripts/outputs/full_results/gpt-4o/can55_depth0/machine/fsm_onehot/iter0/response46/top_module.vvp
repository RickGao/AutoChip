#! /usr/local/bin/vvp
:ivl_version "13.0 (devel)" "(s20221226-331-g77d7f0b8f)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision - 12;
:vpi_module "/usr/local/lib/ivl/system.vpi";
:vpi_module "/usr/local/lib/ivl/vhdl_sys.vpi";
:vpi_module "/usr/local/lib/ivl/vhdl_textio.vpi";
:vpi_module "/usr/local/lib/ivl/v2005_math.vpi";
:vpi_module "/usr/local/lib/ivl/va_math.vpi";
:vpi_module "/usr/local/lib/ivl/v2009.vpi";
S_0x25db230 .scope package, "$unit" "$unit" 2 1;
 .timescale 0 0;
S_0x25eea70 .scope module, "tb" "tb" 3 122;
 .timescale -12 -12;
L_0x25db6c0 .functor NOT 1, L_0x26560a0, C4<0>, C4<0>, C4<0>;
L_0x2655f20 .functor XOR 12, L_0x2655de0, L_0x2655e80, C4<000000000000>, C4<000000000000>;
L_0x2656030 .functor XOR 12, L_0x2655f20, L_0x2655f90, C4<000000000000>, C4<000000000000>;
v0x264f3b0_0 .net *"_ivl_10", 11 0, L_0x2655f90;  1 drivers
v0x264f4b0_0 .net *"_ivl_12", 11 0, L_0x2656030;  1 drivers
v0x264f590_0 .net *"_ivl_2", 11 0, L_0x2655d40;  1 drivers
v0x264f650_0 .net *"_ivl_4", 11 0, L_0x2655de0;  1 drivers
v0x264f730_0 .net *"_ivl_6", 11 0, L_0x2655e80;  1 drivers
v0x264f860_0 .net *"_ivl_8", 11 0, L_0x2655f20;  1 drivers
v0x264f940_0 .var "clk", 0 0;
v0x264f9e0_0 .net "in", 0 0, v0x264bd70_0;  1 drivers
v0x264fa80_0 .net "next_state_dut", 9 0, L_0x2655600;  1 drivers
v0x264fb20_0 .net "next_state_ref", 9 0, L_0x26529c0;  1 drivers
v0x264fc30_0 .net "out1_dut", 0 0, L_0x2653280;  1 drivers
v0x264fcd0_0 .net "out1_ref", 0 0, L_0x25de510;  1 drivers
v0x264fd70_0 .net "out2_dut", 0 0, L_0x2653520;  1 drivers
v0x264fe10_0 .net "out2_ref", 0 0, L_0x25df3b0;  1 drivers
v0x264fee0_0 .net "state", 9 0, v0x264c0a0_0;  1 drivers
v0x264ff80_0 .var/2u "stats1", 287 0;
v0x2650020_0 .var/2u "strobe", 0 0;
v0x26500c0_0 .net "tb_match", 0 0, L_0x26560a0;  1 drivers
v0x2650190_0 .net "tb_mismatch", 0 0, L_0x25db6c0;  1 drivers
v0x2650230_0 .net "wavedrom_enable", 0 0, v0x264c2e0_0;  1 drivers
v0x2650300_0 .net "wavedrom_title", 511 0, v0x264c3a0_0;  1 drivers
L_0x2655d40 .concat [ 1 1 10 0], L_0x25df3b0, L_0x25de510, L_0x26529c0;
L_0x2655de0 .concat [ 1 1 10 0], L_0x25df3b0, L_0x25de510, L_0x26529c0;
L_0x2655e80 .concat [ 1 1 10 0], L_0x2653520, L_0x2653280, L_0x2655600;
L_0x2655f90 .concat [ 1 1 10 0], L_0x25df3b0, L_0x25de510, L_0x26529c0;
L_0x26560a0 .cmp/eeq 12, L_0x2655d40, L_0x2656030;
S_0x25eec00 .scope module, "good1" "reference_module" 3 171, 3 4 0, S_0x25eea70;
 .timescale -12 -12;
    .port_info 0 /INPUT 1 "in";
    .port_info 1 /INPUT 10 "state";
    .port_info 2 /OUTPUT 10 "next_state";
    .port_info 3 /OUTPUT 1 "out1";
    .port_info 4 /OUTPUT 1 "out2";
L_0x25de510 .functor OR 1, L_0x2650450, L_0x26504f0, C4<0>, C4<0>;
L_0x25df3b0 .functor OR 1, L_0x2650680, L_0x2650720, C4<0>, C4<0>;
L_0x25dfb00 .functor OR 1, L_0x2650c00, L_0x2650ca0, C4<0>, C4<0>;
L_0x25dc510 .functor OR 1, L_0x25dfb00, L_0x2650e30, C4<0>, C4<0>;
L_0x25fc5a0 .functor OR 1, L_0x25dc510, L_0x2650fa0, C4<0>, C4<0>;
L_0x26226e0 .functor AND 1, L_0x26508e0, L_0x25fc5a0, C4<1>, C4<1>;
L_0x2651380 .functor OR 1, L_0x26511d0, L_0x2651270, C4<0>, C4<0>;
L_0x2651530 .functor OR 1, L_0x2651380, L_0x2651490, C4<0>, C4<0>;
L_0x2651690 .functor AND 1, v0x264bd70_0, L_0x2651530, C4<1>, C4<1>;
L_0x2651310 .functor AND 1, v0x264bd70_0, L_0x2651750, C4<1>, C4<1>;
L_0x2651bd0 .functor AND 1, v0x264bd70_0, L_0x2651920, C4<1>, C4<1>;
L_0x2651d70 .functor AND 1, v0x264bd70_0, L_0x2651c40, C4<1>, C4<1>;
L_0x2651f40 .functor AND 1, v0x264bd70_0, L_0x2651ea0, C4<1>, C4<1>;
L_0x2652170 .functor AND 1, v0x264bd70_0, L_0x2652030, C4<1>, C4<1>;
L_0x2651e30 .functor OR 1, L_0x26522e0, L_0x2652380, C4<0>, C4<0>;
L_0x26525d0 .functor AND 1, v0x264bd70_0, L_0x2651e30, C4<1>, C4<1>;
L_0x2652880 .functor AND 1, L_0x26520d0, L_0x2652720, C4<1>, C4<1>;
L_0x2652f40 .functor AND 1, L_0x2652d30, L_0x2652ea0, C4<1>, C4<1>;
v0x25de6c0_0 .net *"_ivl_1", 0 0, L_0x2650450;  1 drivers
v0x25df4c0_0 .net *"_ivl_100", 0 0, L_0x2652d30;  1 drivers
v0x25df560_0 .net *"_ivl_102", 0 0, L_0x2652ea0;  1 drivers
v0x25dfd70_0 .net *"_ivl_104", 0 0, L_0x2652f40;  1 drivers
v0x25dfe10_0 .net *"_ivl_15", 0 0, L_0x26508e0;  1 drivers
v0x25dc660_0 .net *"_ivl_17", 4 0, L_0x2650a10;  1 drivers
v0x25dc700_0 .net *"_ivl_19", 0 0, L_0x2650c00;  1 drivers
v0x2648870_0 .net *"_ivl_21", 0 0, L_0x2650ca0;  1 drivers
v0x2648950_0 .net *"_ivl_22", 0 0, L_0x25dfb00;  1 drivers
v0x2648a30_0 .net *"_ivl_25", 0 0, L_0x2650e30;  1 drivers
v0x2648b10_0 .net *"_ivl_26", 0 0, L_0x25dc510;  1 drivers
v0x2648bf0_0 .net *"_ivl_29", 0 0, L_0x2650fa0;  1 drivers
v0x2648cd0_0 .net *"_ivl_3", 0 0, L_0x26504f0;  1 drivers
v0x2648db0_0 .net *"_ivl_30", 0 0, L_0x25fc5a0;  1 drivers
v0x2648e90_0 .net *"_ivl_33", 0 0, L_0x26226e0;  1 drivers
v0x2648f50_0 .net *"_ivl_37", 0 0, L_0x26511d0;  1 drivers
v0x2649030_0 .net *"_ivl_39", 0 0, L_0x2651270;  1 drivers
v0x2649110_0 .net *"_ivl_40", 0 0, L_0x2651380;  1 drivers
v0x26491f0_0 .net *"_ivl_43", 0 0, L_0x2651490;  1 drivers
v0x26492d0_0 .net *"_ivl_44", 0 0, L_0x2651530;  1 drivers
v0x26493b0_0 .net *"_ivl_47", 0 0, L_0x2651690;  1 drivers
v0x2649470_0 .net *"_ivl_51", 0 0, L_0x2651750;  1 drivers
v0x2649550_0 .net *"_ivl_53", 0 0, L_0x2651310;  1 drivers
v0x2649610_0 .net *"_ivl_57", 0 0, L_0x2651920;  1 drivers
v0x26496f0_0 .net *"_ivl_59", 0 0, L_0x2651bd0;  1 drivers
v0x26497b0_0 .net *"_ivl_63", 0 0, L_0x2651c40;  1 drivers
v0x2649890_0 .net *"_ivl_65", 0 0, L_0x2651d70;  1 drivers
v0x2649950_0 .net *"_ivl_69", 0 0, L_0x2651ea0;  1 drivers
v0x2649a30_0 .net *"_ivl_7", 0 0, L_0x2650680;  1 drivers
v0x2649b10_0 .net *"_ivl_71", 0 0, L_0x2651f40;  1 drivers
v0x2649bd0_0 .net *"_ivl_75", 0 0, L_0x2652030;  1 drivers
v0x2649cb0_0 .net *"_ivl_77", 0 0, L_0x2652170;  1 drivers
v0x2649d70_0 .net *"_ivl_81", 0 0, L_0x26522e0;  1 drivers
v0x264a060_0 .net *"_ivl_83", 0 0, L_0x2652380;  1 drivers
v0x264a140_0 .net *"_ivl_84", 0 0, L_0x2651e30;  1 drivers
v0x264a220_0 .net *"_ivl_87", 0 0, L_0x26525d0;  1 drivers
v0x264a2e0_0 .net *"_ivl_9", 0 0, L_0x2650720;  1 drivers
v0x264a3c0_0 .net *"_ivl_91", 0 0, L_0x26520d0;  1 drivers
v0x264a480_0 .net *"_ivl_93", 0 0, L_0x2652720;  1 drivers
v0x264a560_0 .net *"_ivl_95", 0 0, L_0x2652880;  1 drivers
v0x264a620_0 .net "in", 0 0, v0x264bd70_0;  alias, 1 drivers
v0x264a6e0_0 .net "next_state", 9 0, L_0x26529c0;  alias, 1 drivers
v0x264a7c0_0 .net "out1", 0 0, L_0x25de510;  alias, 1 drivers
v0x264a880_0 .net "out2", 0 0, L_0x25df3b0;  alias, 1 drivers
v0x264a940_0 .net "state", 9 0, v0x264c0a0_0;  alias, 1 drivers
L_0x2650450 .part v0x264c0a0_0, 8, 1;
L_0x26504f0 .part v0x264c0a0_0, 9, 1;
L_0x2650680 .part v0x264c0a0_0, 7, 1;
L_0x2650720 .part v0x264c0a0_0, 9, 1;
L_0x26508e0 .reduce/nor v0x264bd70_0;
L_0x2650a10 .part v0x264c0a0_0, 0, 5;
L_0x2650c00 .reduce/or L_0x2650a10;
L_0x2650ca0 .part v0x264c0a0_0, 7, 1;
L_0x2650e30 .part v0x264c0a0_0, 8, 1;
L_0x2650fa0 .part v0x264c0a0_0, 9, 1;
L_0x26511d0 .part v0x264c0a0_0, 0, 1;
L_0x2651270 .part v0x264c0a0_0, 8, 1;
L_0x2651490 .part v0x264c0a0_0, 9, 1;
L_0x2651750 .part v0x264c0a0_0, 1, 1;
L_0x2651920 .part v0x264c0a0_0, 2, 1;
L_0x2651c40 .part v0x264c0a0_0, 3, 1;
L_0x2651ea0 .part v0x264c0a0_0, 4, 1;
L_0x2652030 .part v0x264c0a0_0, 5, 1;
L_0x26522e0 .part v0x264c0a0_0, 6, 1;
L_0x2652380 .part v0x264c0a0_0, 7, 1;
L_0x26520d0 .reduce/nor v0x264bd70_0;
L_0x2652720 .part v0x264c0a0_0, 5, 1;
LS_0x26529c0_0_0 .concat8 [ 1 1 1 1], L_0x26226e0, L_0x2651690, L_0x2651310, L_0x2651bd0;
LS_0x26529c0_0_4 .concat8 [ 1 1 1 1], L_0x2651d70, L_0x2651f40, L_0x2652170, L_0x26525d0;
LS_0x26529c0_0_8 .concat8 [ 1 1 0 0], L_0x2652880, L_0x2652f40;
L_0x26529c0 .concat8 [ 4 4 2 0], LS_0x26529c0_0_0, LS_0x26529c0_0_4, LS_0x26529c0_0_8;
L_0x2652d30 .reduce/nor v0x264bd70_0;
L_0x2652ea0 .part v0x264c0a0_0, 6, 1;
S_0x264aac0 .scope module, "stim1" "stimulus_gen" 3 166, 3 29 0, S_0x25eea70;
 .timescale -12 -12;
    .port_info 0 /INPUT 1 "clk";
    .port_info 1 /OUTPUT 1 "in";
    .port_info 2 /OUTPUT 10 "state";
    .port_info 3 /INPUT 1 "tb_match";
    .port_info 4 /INPUT 10 "next_state_ref";
    .port_info 5 /INPUT 10 "next_state_dut";
    .port_info 6 /OUTPUT 512 "wavedrom_title";
    .port_info 7 /OUTPUT 1 "wavedrom_enable";
v0x264baf0_0 .net "clk", 0 0, v0x264f940_0;  1 drivers
v0x264bbd0_0 .var/2s "errored1", 31 0;
v0x264bcb0_0 .var/2s "errored2", 31 0;
v0x264bd70_0 .var "in", 0 0;
v0x264be10_0 .net "next_state_dut", 9 0, L_0x2655600;  alias, 1 drivers
v0x264bf20_0 .net "next_state_ref", 9 0, L_0x26529c0;  alias, 1 drivers
v0x264bfe0_0 .var/2s "onehot_error", 31 0;
v0x264c0a0_0 .var "state", 9 0;
v0x264c160_0 .var "state_error", 9 0;
v0x264c220_0 .net "tb_match", 0 0, L_0x26560a0;  alias, 1 drivers
v0x264c2e0_0 .var "wavedrom_enable", 0 0;
v0x264c3a0_0 .var "wavedrom_title", 511 0;
E_0x25ea4f0 .event negedge, v0x264baf0_0;
E_0x25ea740 .event posedge, v0x264baf0_0;
S_0x264ad00 .scope begin, "$ivl_for_loop0" "$ivl_for_loop0" 3 69, 3 69 0, S_0x264aac0;
 .timescale -12 -12;
v0x264af40_0 .var/2s "i", 31 0;
E_0x25e9dc0/0 .event negedge, v0x264baf0_0;
E_0x25e9dc0/1 .event posedge, v0x264baf0_0;
E_0x25e9dc0 .event/or E_0x25e9dc0/0, E_0x25e9dc0/1;
S_0x264b040 .scope begin, "$ivl_for_loop1" "$ivl_for_loop1" 3 74, 3 74 0, S_0x264aac0;
 .timescale -12 -12;
v0x264b240_0 .var/2s "i", 31 0;
S_0x264b320 .scope begin, "$ivl_for_loop2" "$ivl_for_loop2" 3 114, 3 114 0, S_0x264aac0;
 .timescale -12 -12;
v0x264b500_0 .var/2s "i", 31 0;
S_0x264b5e0 .scope task, "wavedrom_start" "wavedrom_start" 3 45, 3 45 0, S_0x264aac0;
 .timescale -12 -12;
v0x264b7c0_0 .var "title", 511 0;
TD_tb.stim1.wavedrom_start ;
    %end;
S_0x264b8c0 .scope task, "wavedrom_stop" "wavedrom_stop" 3 48, 3 48 0, S_0x264aac0;
 .timescale -12 -12;
TD_tb.stim1.wavedrom_stop ;
    %delay 1, 0;
    %end;
S_0x264c580 .scope module, "top_module1" "top_module" 3 178, 4 1 0, S_0x25eea70;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "in";
    .port_info 1 /INPUT 10 "state";
    .port_info 2 /OUTPUT 10 "next_state";
    .port_info 3 /OUTPUT 1 "out1";
    .port_info 4 /OUTPUT 1 "out2";
L_0x2653280 .functor OR 1, L_0x2653140, L_0x26531e0, C4<0>, C4<0>;
L_0x2653520 .functor OR 1, L_0x26533e0, L_0x2653480, C4<0>, C4<0>;
L_0x2653680 .functor NOT 1, v0x264bd70_0, C4<0>, C4<0>, C4<0>;
L_0x2653d30 .functor AND 1, L_0x2653680, L_0x2653be0, C4<1>, C4<1>;
L_0x26543b0 .functor OR 1, L_0x2653df0, L_0x26542a0, C4<0>, C4<0>;
L_0x2654560 .functor OR 1, L_0x26543b0, L_0x26544c0, C4<0>, C4<0>;
L_0x2654670 .functor AND 1, v0x264bd70_0, L_0x2654560, C4<1>, C4<1>;
L_0x2654340 .functor AND 1, v0x264bd70_0, L_0x2654730, C4<1>, C4<1>;
L_0x2654990 .functor AND 1, v0x264bd70_0, L_0x26548f0, C4<1>, C4<1>;
L_0x2654b80 .functor AND 1, v0x264bd70_0, L_0x2654a50, C4<1>, C4<1>;
L_0x2654d40 .functor AND 1, v0x264bd70_0, L_0x2654ca0, C4<1>, C4<1>;
L_0x2654ef0 .functor AND 1, v0x264bd70_0, L_0x2654db0, C4<1>, C4<1>;
L_0x2655210 .functor OR 1, L_0x2655020, L_0x26550c0, C4<0>, C4<0>;
L_0x2655320 .functor AND 1, v0x264bd70_0, L_0x2655210, C4<1>, C4<1>;
L_0x2654fb0 .functor NOT 1, v0x264bd70_0, C4<0>, C4<0>, C4<0>;
L_0x2655460 .functor AND 1, L_0x2654fb0, L_0x2654e50, C4<1>, C4<1>;
L_0x2655a30 .functor NOT 1, v0x264bd70_0, C4<0>, C4<0>, C4<0>;
L_0x2655b40 .functor AND 1, L_0x2655a30, L_0x2655aa0, C4<1>, C4<1>;
v0x264c7f0_0 .net *"_ivl_1", 0 0, L_0x2653140;  1 drivers
v0x264c8d0_0 .net *"_ivl_14", 0 0, L_0x2653680;  1 drivers
v0x264c9b0_0 .net *"_ivl_17", 4 0, L_0x26536f0;  1 drivers
v0x264caa0_0 .net *"_ivl_19", 0 0, L_0x2653790;  1 drivers
v0x264cb80_0 .net *"_ivl_21", 0 0, L_0x2653870;  1 drivers
v0x264ccb0_0 .net *"_ivl_23", 0 0, L_0x2653910;  1 drivers
v0x264cd90_0 .net *"_ivl_24", 7 0, L_0x2653a00;  1 drivers
v0x264ce70_0 .net *"_ivl_27", 0 0, L_0x2653be0;  1 drivers
v0x264cf30_0 .net *"_ivl_28", 0 0, L_0x2653d30;  1 drivers
v0x264d0a0_0 .net *"_ivl_3", 0 0, L_0x26531e0;  1 drivers
v0x264d180_0 .net *"_ivl_33", 0 0, L_0x2653df0;  1 drivers
v0x264d260_0 .net *"_ivl_35", 0 0, L_0x26542a0;  1 drivers
v0x264d340_0 .net *"_ivl_36", 0 0, L_0x26543b0;  1 drivers
v0x264d420_0 .net *"_ivl_39", 0 0, L_0x26544c0;  1 drivers
v0x264d500_0 .net *"_ivl_40", 0 0, L_0x2654560;  1 drivers
v0x264d5e0_0 .net *"_ivl_42", 0 0, L_0x2654670;  1 drivers
v0x264d6c0_0 .net *"_ivl_47", 0 0, L_0x2654730;  1 drivers
v0x264d8b0_0 .net *"_ivl_48", 0 0, L_0x2654340;  1 drivers
v0x264d990_0 .net *"_ivl_53", 0 0, L_0x26548f0;  1 drivers
v0x264da70_0 .net *"_ivl_54", 0 0, L_0x2654990;  1 drivers
v0x264db50_0 .net *"_ivl_59", 0 0, L_0x2654a50;  1 drivers
v0x264dc30_0 .net *"_ivl_60", 0 0, L_0x2654b80;  1 drivers
v0x264dd10_0 .net *"_ivl_65", 0 0, L_0x2654ca0;  1 drivers
v0x264ddf0_0 .net *"_ivl_66", 0 0, L_0x2654d40;  1 drivers
v0x264ded0_0 .net *"_ivl_7", 0 0, L_0x26533e0;  1 drivers
v0x264dfb0_0 .net *"_ivl_71", 0 0, L_0x2654db0;  1 drivers
v0x264e090_0 .net *"_ivl_72", 0 0, L_0x2654ef0;  1 drivers
v0x264e170_0 .net *"_ivl_77", 0 0, L_0x2655020;  1 drivers
v0x264e250_0 .net *"_ivl_79", 0 0, L_0x26550c0;  1 drivers
v0x264e330_0 .net *"_ivl_80", 0 0, L_0x2655210;  1 drivers
v0x264e410_0 .net *"_ivl_82", 0 0, L_0x2655320;  1 drivers
v0x264e4f0_0 .net *"_ivl_86", 0 0, L_0x2654fb0;  1 drivers
v0x264e5d0_0 .net *"_ivl_89", 0 0, L_0x2654e50;  1 drivers
v0x264e8c0_0 .net *"_ivl_9", 0 0, L_0x2653480;  1 drivers
v0x264e9a0_0 .net *"_ivl_90", 0 0, L_0x2655460;  1 drivers
v0x264ea80_0 .net *"_ivl_95", 0 0, L_0x2655a30;  1 drivers
v0x264eb60_0 .net *"_ivl_98", 0 0, L_0x2655aa0;  1 drivers
v0x264ec40_0 .net *"_ivl_99", 0 0, L_0x2655b40;  1 drivers
v0x264ed20_0 .net "in", 0 0, v0x264bd70_0;  alias, 1 drivers
v0x264edc0_0 .net "next_state", 9 0, L_0x2655600;  alias, 1 drivers
v0x264ee80_0 .net "out1", 0 0, L_0x2653280;  alias, 1 drivers
v0x264ef20_0 .net "out2", 0 0, L_0x2653520;  alias, 1 drivers
v0x264efe0_0 .net "state", 9 0, v0x264c0a0_0;  alias, 1 drivers
L_0x2653140 .part v0x264c0a0_0, 8, 1;
L_0x26531e0 .part v0x264c0a0_0, 9, 1;
L_0x26533e0 .part v0x264c0a0_0, 7, 1;
L_0x2653480 .part v0x264c0a0_0, 9, 1;
L_0x26536f0 .part v0x264c0a0_0, 0, 5;
L_0x2653790 .part v0x264c0a0_0, 7, 1;
L_0x2653870 .part v0x264c0a0_0, 8, 1;
L_0x2653910 .part v0x264c0a0_0, 9, 1;
L_0x2653a00 .concat [ 1 1 1 5], L_0x2653910, L_0x2653870, L_0x2653790, L_0x26536f0;
L_0x2653be0 .reduce/or L_0x2653a00;
L_0x2653df0 .part v0x264c0a0_0, 0, 1;
L_0x26542a0 .part v0x264c0a0_0, 8, 1;
L_0x26544c0 .part v0x264c0a0_0, 9, 1;
L_0x2654730 .part v0x264c0a0_0, 1, 1;
L_0x26548f0 .part v0x264c0a0_0, 2, 1;
L_0x2654a50 .part v0x264c0a0_0, 3, 1;
L_0x2654ca0 .part v0x264c0a0_0, 4, 1;
L_0x2654db0 .part v0x264c0a0_0, 5, 1;
L_0x2655020 .part v0x264c0a0_0, 6, 1;
L_0x26550c0 .part v0x264c0a0_0, 7, 1;
L_0x2654e50 .part v0x264c0a0_0, 5, 1;
LS_0x2655600_0_0 .concat8 [ 1 1 1 1], L_0x2653d30, L_0x2654670, L_0x2654340, L_0x2654990;
LS_0x2655600_0_4 .concat8 [ 1 1 1 1], L_0x2654b80, L_0x2654d40, L_0x2654ef0, L_0x2655320;
LS_0x2655600_0_8 .concat8 [ 1 1 0 0], L_0x2655460, L_0x2655b40;
L_0x2655600 .concat8 [ 4 4 2 0], LS_0x2655600_0_0, LS_0x2655600_0_4, LS_0x2655600_0_8;
L_0x2655aa0 .part v0x264c0a0_0, 6, 1;
S_0x264f190 .scope task, "wait_for_end_of_timestep" "wait_for_end_of_timestep" 3 187, 3 187 0, S_0x25eea70;
 .timescale -12 -12;
E_0x25d1a20 .event anyedge, v0x2650020_0;
TD_tb.wait_for_end_of_timestep ;
    %pushi/vec4 5, 0, 32;
T_2.0 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_2.1, 5;
    %jmp/1 T_2.1, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %load/vec4 v0x2650020_0;
    %nor/r;
    %assign/vec4 v0x2650020_0, 0;
    %wait E_0x25d1a20;
    %jmp T_2.0;
T_2.1 ;
    %pop/vec4 1;
    %end;
    .scope S_0x264aac0;
T_3 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x264bbd0_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x264bcb0_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x264bfe0_0, 0, 32;
    %pushi/vec4 0, 0, 10;
    %store/vec4 v0x264c160_0, 0, 10;
    %end;
    .thread T_3, $init;
    .scope S_0x264aac0;
T_4 ;
    %pushi/vec4 2, 0, 32;
T_4.0 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_4.1, 5;
    %jmp/1 T_4.1, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_0x25ea740;
    %jmp T_4.0;
T_4.1 ;
    %pop/vec4 1;
T_4.2 ;
    %wait E_0x25e9dc0;
    %load/vec4 v0x264c160_0;
    %load/vec4 v0x264bf20_0;
    %load/vec4 v0x264be10_0;
    %xor;
    %or;
    %assign/vec4 v0x264c160_0, 0;
    %jmp T_4.2;
T_4.3 ;
    %end;
    .thread T_4;
    .scope S_0x264aac0;
T_5 ;
    %pushi/vec4 0, 0, 10;
    %assign/vec4 v0x264c0a0_0, 0;
    %wait E_0x25ea4f0;
    %fork t_1, S_0x264ad00;
    %jmp t_0;
    .scope S_0x264ad00;
t_1 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x264af40_0, 0, 32;
T_5.0 ; Top of for-loop 
    %load/vec4 v0x264af40_0;
    %cmpi/s 10, 0, 32;
    %jmp/0xz T_5.1, 5;
    %wait E_0x25e9dc0;
    %pushi/vec4 1, 0, 10;
    %load/vec4 v0x264af40_0;
    %ix/vec4 4;
    %shiftl 4;
    %assign/vec4 v0x264c0a0_0, 0;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0x264bd70_0, 0;
T_5.2 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x264af40_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x264af40_0, 0, 32;
    %jmp T_5.0;
T_5.1 ; for-loop exit label
    %end;
    .scope S_0x264aac0;
t_0 %join;
    %fork t_3, S_0x264b040;
    %jmp t_2;
    .scope S_0x264b040;
t_3 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x264b240_0, 0, 32;
T_5.3 ; Top of for-loop 
    %load/vec4 v0x264b240_0;
    %cmpi/s 10, 0, 32;
    %jmp/0xz T_5.4, 5;
    %wait E_0x25e9dc0;
    %pushi/vec4 1, 0, 10;
    %load/vec4 v0x264b240_0;
    %ix/vec4 4;
    %shiftl 4;
    %assign/vec4 v0x264c0a0_0, 0;
    %pushi/vec4 1, 0, 1;
    %assign/vec4 v0x264bd70_0, 0;
T_5.5 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x264b240_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x264b240_0, 0, 32;
    %jmp T_5.3;
T_5.4 ; for-loop exit label
    %end;
    .scope S_0x264aac0;
t_2 %join;
    %wait E_0x25ea4f0;
    %fork TD_tb.stim1.wavedrom_stop, S_0x264b8c0;
    %join;
    %pushi/vec4 200, 0, 32;
T_5.6 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_5.7, 5;
    %jmp/1 T_5.7, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_0x25e9dc0;
    %pushi/vec4 1, 0, 10;
    %vpi_func 3 83 "$random" 32 {0 0 0};
    %pushi/vec4 10, 0, 32;
    %mod;
    %ix/vec4 4;
    %shiftl 4;
    %assign/vec4 v0x264c0a0_0, 0;
    %vpi_func 3 84 "$random" 32 {0 0 0};
    %pad/s 1;
    %assign/vec4 v0x264bd70_0, 0;
    %load/vec4 v0x264c220_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.8, 8;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x264bfe0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x264bfe0_0, 0, 32;
T_5.8 ;
    %jmp T_5.6;
T_5.7 ;
    %pop/vec4 1;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x264bbd0_0, 0, 32;
    %pushi/vec4 400, 0, 32;
T_5.10 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_5.11, 5;
    %jmp/1 T_5.11, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_0x25e9dc0;
    %pushi/vec4 1, 0, 10;
    %vpi_func 3 91 "$random" 32 {0 0 0};
    %pushi/vec4 10, 0, 32;
    %mod;
    %ix/vec4 4;
    %shiftl 4;
    %pushi/vec4 1, 0, 10;
    %vpi_func 3 91 "$random" 32 {0 0 0};
    %pushi/vec4 10, 0, 32;
    %mod;
    %ix/vec4 4;
    %shiftl 4;
    %or;
    %assign/vec4 v0x264c0a0_0, 0;
    %vpi_func 3 92 "$random" 32 {0 0 0};
    %pad/s 1;
    %assign/vec4 v0x264bd70_0, 0;
    %load/vec4 v0x264c220_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.12, 8;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x264bbd0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x264bbd0_0, 0, 32;
T_5.12 ;
    %jmp T_5.10;
T_5.11 ;
    %pop/vec4 1;
    %load/vec4 v0x264bfe0_0;
    %nor/r;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_5.16, 9;
    %load/vec4 v0x264bbd0_0;
    %pushi/vec4 0, 0, 32;
    %cmp/ne;
    %flag_get/vec4 4;
    %and;
T_5.16;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.14, 8;
    %vpi_call/w 3 98 "$display", "Hint: Your circuit passed when given only one-hot inputs, but not with two-hot inputs." {0 0 0};
T_5.14 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x264bcb0_0, 0, 32;
    %pushi/vec4 800, 0, 32;
T_5.17 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_5.18, 5;
    %jmp/1 T_5.18, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_0x25e9dc0;
    %vpi_func 3 103 "$random" 32 {0 0 0};
    %pad/s 10;
    %assign/vec4 v0x264c0a0_0, 0;
    %vpi_func 3 104 "$random" 32 {0 0 0};
    %pad/s 1;
    %assign/vec4 v0x264bd70_0, 0;
    %load/vec4 v0x264c220_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.19, 8;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x264bcb0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x264bcb0_0, 0, 32;
T_5.19 ;
    %jmp T_5.17;
T_5.18 ;
    %pop/vec4 1;
    %load/vec4 v0x264bfe0_0;
    %nor/r;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_5.23, 9;
    %load/vec4 v0x264bcb0_0;
    %pushi/vec4 0, 0, 32;
    %cmp/ne;
    %flag_get/vec4 4;
    %and;
T_5.23;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.21, 8;
    %vpi_call/w 3 109 "$display", "Hint: Your circuit passed when given only one-hot inputs, but not with random inputs." {0 0 0};
T_5.21 ;
    %load/vec4 v0x264bfe0_0;
    %nor/r;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_5.26, 9;
    %load/vec4 v0x264bbd0_0;
    %cmpi/ne 0, 0, 32;
    %flag_get/vec4 4;
    %jmp/1 T_5.27, 4;
    %load/vec4 v0x264bcb0_0;
    %pushi/vec4 0, 0, 32;
    %cmp/ne;
    %flag_get/vec4 4;
    %or;
T_5.27;
    %and;
T_5.26;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.24, 8;
    %vpi_call/w 3 112 "$display", "Hint: Are you doing something more complicated than deriving state transition equations by inspection?\012" {0 0 0};
T_5.24 ;
    %fork t_5, S_0x264b320;
    %jmp t_4;
    .scope S_0x264b320;
t_5 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x264b500_0, 0, 32;
T_5.28 ; Top of for-loop 
    %load/vec4 v0x264b500_0;
    %cmpi/u 10, 0, 32;
    %jmp/0xz T_5.29, 5;
    %load/vec4 v0x264c160_0;
    %load/vec4 v0x264b500_0;
    %part/s 1;
    %cmpi/e 0, 0, 1;
    %flag_mov 8, 6;
    %jmp/0 T_5.31, 8;
    %pushi/vec4 25455, 0, 32; draw_string_vec4
    %pushi/vec4 1920099683, 0, 32; draw_string_vec4
    %concat/vec4; draw_string_vec4
    %pushi/vec4 116, 0, 8; draw_string_vec4
    %concat/vec4; draw_string_vec4
    %jmp/1 T_5.32, 8;
T_5.31 ; End of true expr.
    %pushi/vec4 1768842095, 0, 32; draw_string_vec4
    %pushi/vec4 1920099683, 0, 32; draw_string_vec4
    %concat/vec4; draw_string_vec4
    %pushi/vec4 116, 0, 8; draw_string_vec4
    %concat/vec4; draw_string_vec4
    %jmp/0 T_5.32, 8;
 ; End of false expr.
    %blend;
T_5.32;
    %vpi_call/w 3 115 "$display", "Hint: next_state[%0d] is %s.", v0x264b500_0, S<0,vec4,u72> {1 0 0};
T_5.30 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x264b500_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x264b500_0, 0, 32;
    %jmp T_5.28;
T_5.29 ; for-loop exit label
    %end;
    .scope S_0x264aac0;
t_4 %join;
    %delay 1, 0;
    %vpi_call/w 3 117 "$finish" {0 0 0};
    %end;
    .thread T_5;
    .scope S_0x25eea70;
T_6 ;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x264f940_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x2650020_0, 0, 1;
    %end;
    .thread T_6, $init;
    .scope S_0x25eea70;
T_7 ;
T_7.0 ;
    %delay 5, 0;
    %load/vec4 v0x264f940_0;
    %inv;
    %store/vec4 v0x264f940_0, 0, 1;
    %jmp T_7.0;
T_7.1 ;
    %end;
    .thread T_7;
    .scope S_0x25eea70;
T_8 ;
    %vpi_call/w 3 158 "$dumpfile", "wave.vcd" {0 0 0};
    %vpi_call/w 3 159 "$dumpvars", 32'sb00000000000000000000000000000001, v0x264baf0_0, v0x2650190_0, v0x264f9e0_0, v0x264fee0_0, v0x264fb20_0, v0x264fa80_0, v0x264fcd0_0, v0x264fc30_0, v0x264fe10_0, v0x264fd70_0 {0 0 0};
    %end;
    .thread T_8;
    .scope S_0x25eea70;
T_9 ;
    %load/vec4 v0x264ff80_0;
    %parti/u 32, 192, 32;
    %cmpi/ne 0, 0, 32;
    %jmp/0xz  T_9.0, 4;
    %load/vec4 v0x264ff80_0;
    %parti/u 32, 192, 32;
    %load/vec4 v0x264ff80_0;
    %parti/u 32, 160, 32;
    %vpi_call/w 3 196 "$display", "Hint: Output '%s' has %0d mismatches. First mismatch occurred at time %0d.", "next_state", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %jmp T_9.1;
T_9.0 ;
    %vpi_call/w 3 197 "$display", "Hint: Output '%s' has no mismatches.", "next_state" {0 0 0};
T_9.1 ;
    %load/vec4 v0x264ff80_0;
    %parti/u 32, 128, 32;
    %cmpi/ne 0, 0, 32;
    %jmp/0xz  T_9.2, 4;
    %load/vec4 v0x264ff80_0;
    %parti/u 32, 128, 32;
    %load/vec4 v0x264ff80_0;
    %parti/u 32, 96, 32;
    %vpi_call/w 3 198 "$display", "Hint: Output '%s' has %0d mismatches. First mismatch occurred at time %0d.", "out1", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %jmp T_9.3;
T_9.2 ;
    %vpi_call/w 3 199 "$display", "Hint: Output '%s' has no mismatches.", "out1" {0 0 0};
T_9.3 ;
    %load/vec4 v0x264ff80_0;
    %parti/u 32, 64, 32;
    %cmpi/ne 0, 0, 32;
    %jmp/0xz  T_9.4, 4;
    %load/vec4 v0x264ff80_0;
    %parti/u 32, 64, 32;
    %load/vec4 v0x264ff80_0;
    %parti/u 32, 32, 32;
    %vpi_call/w 3 200 "$display", "Hint: Output '%s' has %0d mismatches. First mismatch occurred at time %0d.", "out2", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %jmp T_9.5;
T_9.4 ;
    %vpi_call/w 3 201 "$display", "Hint: Output '%s' has no mismatches.", "out2" {0 0 0};
T_9.5 ;
    %load/vec4 v0x264ff80_0;
    %parti/u 32, 256, 32;
    %load/vec4 v0x264ff80_0;
    %parti/u 32, 0, 32;
    %vpi_call/w 3 203 "$display", "Hint: Total mismatched samples is %1d out of %1d samples\012", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %vpi_call/w 3 204 "$display", "Simulation finished at %0d ps", $time {0 0 0};
    %load/vec4 v0x264ff80_0;
    %parti/u 32, 256, 32;
    %load/vec4 v0x264ff80_0;
    %parti/u 32, 0, 32;
    %vpi_call/w 3 205 "$display", "Mismatches: %1d in %1d samples", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %end;
    .thread T_9, $final;
    .scope S_0x25eea70;
T_10 ;
    %wait E_0x25e9dc0;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x264ff80_0;
    %pushi/vec4 0, 0, 32;
    %part/u 32;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x264ff80_0, 4, 32;
    %load/vec4 v0x26500c0_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_10.0, 8;
    %load/vec4 v0x264ff80_0;
    %parti/u 32, 256, 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_10.2, 4;
    %vpi_func 3 216 "$time" 64 {0 0 0};
    %cast2;
    %pad/u 32;
    %ix/load 4, 224, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x264ff80_0, 4, 32;
T_10.2 ;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x264ff80_0;
    %pushi/vec4 256, 0, 32;
    %part/u 32;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %ix/load 4, 256, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x264ff80_0, 4, 32;
T_10.0 ;
    %load/vec4 v0x264fb20_0;
    %load/vec4 v0x264fb20_0;
    %load/vec4 v0x264fa80_0;
    %xor;
    %load/vec4 v0x264fb20_0;
    %xor;
    %cmp/ne;
    %jmp/0xz  T_10.4, 6;
    %load/vec4 v0x264ff80_0;
    %parti/u 32, 192, 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_10.6, 4;
    %vpi_func 3 220 "$time" 64 {0 0 0};
    %cast2;
    %pad/u 32;
    %ix/load 4, 160, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x264ff80_0, 4, 32;
T_10.6 ;
    %load/vec4 v0x264ff80_0;
    %parti/u 32, 192, 32;
    %addi 1, 0, 32;
    %ix/load 4, 192, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x264ff80_0, 4, 32;
T_10.4 ;
    %load/vec4 v0x264fcd0_0;
    %load/vec4 v0x264fcd0_0;
    %load/vec4 v0x264fc30_0;
    %xor;
    %load/vec4 v0x264fcd0_0;
    %xor;
    %cmp/ne;
    %jmp/0xz  T_10.8, 6;
    %load/vec4 v0x264ff80_0;
    %parti/u 32, 128, 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_10.10, 4;
    %vpi_func 3 223 "$time" 64 {0 0 0};
    %cast2;
    %pad/u 32;
    %ix/load 4, 96, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x264ff80_0, 4, 32;
T_10.10 ;
    %load/vec4 v0x264ff80_0;
    %parti/u 32, 128, 32;
    %addi 1, 0, 32;
    %ix/load 4, 128, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x264ff80_0, 4, 32;
T_10.8 ;
    %load/vec4 v0x264fe10_0;
    %load/vec4 v0x264fe10_0;
    %load/vec4 v0x264fd70_0;
    %xor;
    %load/vec4 v0x264fe10_0;
    %xor;
    %cmp/ne;
    %jmp/0xz  T_10.12, 6;
    %load/vec4 v0x264ff80_0;
    %parti/u 32, 64, 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_10.14, 4;
    %vpi_func 3 226 "$time" 64 {0 0 0};
    %cast2;
    %pad/u 32;
    %ix/load 4, 32, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x264ff80_0, 4, 32;
T_10.14 ;
    %load/vec4 v0x264ff80_0;
    %parti/u 32, 64, 32;
    %addi 1, 0, 32;
    %ix/load 4, 64, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x264ff80_0, 4, 32;
T_10.12 ;
    %jmp T_10;
    .thread T_10;
# The file index is used to find the file name in the following table.
:file_names 5;
    "N/A";
    "<interactive>";
    "-";
    "/home/jmb9986/AutoChip/autochip_scripts/../verilogeval_prompts_tbs/ve_testbenches_machine/fsm_onehot/fsm_onehot_tb.sv";
    "/home/jmb9986/AutoChip/autochip_scripts/outputs/gpt-4o/can55_depth0/machine/fsm_onehot/iter0/response46/top_module.sv";
