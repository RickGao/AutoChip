#! /usr/local/bin/vvp
:ivl_version "13.0 (devel)" "(s20221226-331-g77d7f0b8f)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision - 12;
:vpi_module "/usr/local/lib/ivl/system.vpi";
:vpi_module "/usr/local/lib/ivl/vhdl_sys.vpi";
:vpi_module "/usr/local/lib/ivl/vhdl_textio.vpi";
:vpi_module "/usr/local/lib/ivl/v2005_math.vpi";
:vpi_module "/usr/local/lib/ivl/va_math.vpi";
:vpi_module "/usr/local/lib/ivl/v2009.vpi";
S_0x1a67230 .scope package, "$unit" "$unit" 2 1;
 .timescale 0 0;
S_0x1a7aa70 .scope module, "tb" "tb" 3 122;
 .timescale -12 -12;
L_0x1a676c0 .functor NOT 1, L_0x1ae20a0, C4<0>, C4<0>, C4<0>;
L_0x1ae1f20 .functor XOR 12, L_0x1ae1de0, L_0x1ae1e80, C4<000000000000>, C4<000000000000>;
L_0x1ae2030 .functor XOR 12, L_0x1ae1f20, L_0x1ae1f90, C4<000000000000>, C4<000000000000>;
v0x1adb3b0_0 .net *"_ivl_10", 11 0, L_0x1ae1f90;  1 drivers
v0x1adb4b0_0 .net *"_ivl_12", 11 0, L_0x1ae2030;  1 drivers
v0x1adb590_0 .net *"_ivl_2", 11 0, L_0x1ae1d40;  1 drivers
v0x1adb650_0 .net *"_ivl_4", 11 0, L_0x1ae1de0;  1 drivers
v0x1adb730_0 .net *"_ivl_6", 11 0, L_0x1ae1e80;  1 drivers
v0x1adb860_0 .net *"_ivl_8", 11 0, L_0x1ae1f20;  1 drivers
v0x1adb940_0 .var "clk", 0 0;
v0x1adb9e0_0 .net "in", 0 0, v0x1ad7d70_0;  1 drivers
v0x1adba80_0 .net "next_state_dut", 9 0, L_0x1ae1600;  1 drivers
v0x1adbb20_0 .net "next_state_ref", 9 0, L_0x1ade9c0;  1 drivers
v0x1adbc30_0 .net "out1_dut", 0 0, L_0x1adf280;  1 drivers
v0x1adbcd0_0 .net "out1_ref", 0 0, L_0x1a6a510;  1 drivers
v0x1adbd70_0 .net "out2_dut", 0 0, L_0x1adf520;  1 drivers
v0x1adbe10_0 .net "out2_ref", 0 0, L_0x1a6b3b0;  1 drivers
v0x1adbee0_0 .net "state", 9 0, v0x1ad80a0_0;  1 drivers
v0x1adbf80_0 .var/2u "stats1", 287 0;
v0x1adc020_0 .var/2u "strobe", 0 0;
v0x1adc0c0_0 .net "tb_match", 0 0, L_0x1ae20a0;  1 drivers
v0x1adc190_0 .net "tb_mismatch", 0 0, L_0x1a676c0;  1 drivers
v0x1adc230_0 .net "wavedrom_enable", 0 0, v0x1ad82e0_0;  1 drivers
v0x1adc300_0 .net "wavedrom_title", 511 0, v0x1ad83a0_0;  1 drivers
L_0x1ae1d40 .concat [ 1 1 10 0], L_0x1a6b3b0, L_0x1a6a510, L_0x1ade9c0;
L_0x1ae1de0 .concat [ 1 1 10 0], L_0x1a6b3b0, L_0x1a6a510, L_0x1ade9c0;
L_0x1ae1e80 .concat [ 1 1 10 0], L_0x1adf520, L_0x1adf280, L_0x1ae1600;
L_0x1ae1f90 .concat [ 1 1 10 0], L_0x1a6b3b0, L_0x1a6a510, L_0x1ade9c0;
L_0x1ae20a0 .cmp/eeq 12, L_0x1ae1d40, L_0x1ae2030;
S_0x1a7ac00 .scope module, "good1" "reference_module" 3 171, 3 4 0, S_0x1a7aa70;
 .timescale -12 -12;
    .port_info 0 /INPUT 1 "in";
    .port_info 1 /INPUT 10 "state";
    .port_info 2 /OUTPUT 10 "next_state";
    .port_info 3 /OUTPUT 1 "out1";
    .port_info 4 /OUTPUT 1 "out2";
L_0x1a6a510 .functor OR 1, L_0x1adc450, L_0x1adc4f0, C4<0>, C4<0>;
L_0x1a6b3b0 .functor OR 1, L_0x1adc680, L_0x1adc720, C4<0>, C4<0>;
L_0x1a6bb00 .functor OR 1, L_0x1adcc00, L_0x1adcca0, C4<0>, C4<0>;
L_0x1a68510 .functor OR 1, L_0x1a6bb00, L_0x1adce30, C4<0>, C4<0>;
L_0x1a885a0 .functor OR 1, L_0x1a68510, L_0x1adcfa0, C4<0>, C4<0>;
L_0x1aae6e0 .functor AND 1, L_0x1adc8e0, L_0x1a885a0, C4<1>, C4<1>;
L_0x1add380 .functor OR 1, L_0x1add1d0, L_0x1add270, C4<0>, C4<0>;
L_0x1add530 .functor OR 1, L_0x1add380, L_0x1add490, C4<0>, C4<0>;
L_0x1add690 .functor AND 1, v0x1ad7d70_0, L_0x1add530, C4<1>, C4<1>;
L_0x1add310 .functor AND 1, v0x1ad7d70_0, L_0x1add750, C4<1>, C4<1>;
L_0x1addbd0 .functor AND 1, v0x1ad7d70_0, L_0x1add920, C4<1>, C4<1>;
L_0x1addd70 .functor AND 1, v0x1ad7d70_0, L_0x1addc40, C4<1>, C4<1>;
L_0x1addf40 .functor AND 1, v0x1ad7d70_0, L_0x1addea0, C4<1>, C4<1>;
L_0x1ade170 .functor AND 1, v0x1ad7d70_0, L_0x1ade030, C4<1>, C4<1>;
L_0x1adde30 .functor OR 1, L_0x1ade2e0, L_0x1ade380, C4<0>, C4<0>;
L_0x1ade5d0 .functor AND 1, v0x1ad7d70_0, L_0x1adde30, C4<1>, C4<1>;
L_0x1ade880 .functor AND 1, L_0x1ade0d0, L_0x1ade720, C4<1>, C4<1>;
L_0x1adef40 .functor AND 1, L_0x1aded30, L_0x1adeea0, C4<1>, C4<1>;
v0x1a6a6c0_0 .net *"_ivl_1", 0 0, L_0x1adc450;  1 drivers
v0x1a6b4c0_0 .net *"_ivl_100", 0 0, L_0x1aded30;  1 drivers
v0x1a6b560_0 .net *"_ivl_102", 0 0, L_0x1adeea0;  1 drivers
v0x1a6bd70_0 .net *"_ivl_104", 0 0, L_0x1adef40;  1 drivers
v0x1a6be10_0 .net *"_ivl_15", 0 0, L_0x1adc8e0;  1 drivers
v0x1a68660_0 .net *"_ivl_17", 4 0, L_0x1adca10;  1 drivers
v0x1a68700_0 .net *"_ivl_19", 0 0, L_0x1adcc00;  1 drivers
v0x1ad4870_0 .net *"_ivl_21", 0 0, L_0x1adcca0;  1 drivers
v0x1ad4950_0 .net *"_ivl_22", 0 0, L_0x1a6bb00;  1 drivers
v0x1ad4a30_0 .net *"_ivl_25", 0 0, L_0x1adce30;  1 drivers
v0x1ad4b10_0 .net *"_ivl_26", 0 0, L_0x1a68510;  1 drivers
v0x1ad4bf0_0 .net *"_ivl_29", 0 0, L_0x1adcfa0;  1 drivers
v0x1ad4cd0_0 .net *"_ivl_3", 0 0, L_0x1adc4f0;  1 drivers
v0x1ad4db0_0 .net *"_ivl_30", 0 0, L_0x1a885a0;  1 drivers
v0x1ad4e90_0 .net *"_ivl_33", 0 0, L_0x1aae6e0;  1 drivers
v0x1ad4f50_0 .net *"_ivl_37", 0 0, L_0x1add1d0;  1 drivers
v0x1ad5030_0 .net *"_ivl_39", 0 0, L_0x1add270;  1 drivers
v0x1ad5110_0 .net *"_ivl_40", 0 0, L_0x1add380;  1 drivers
v0x1ad51f0_0 .net *"_ivl_43", 0 0, L_0x1add490;  1 drivers
v0x1ad52d0_0 .net *"_ivl_44", 0 0, L_0x1add530;  1 drivers
v0x1ad53b0_0 .net *"_ivl_47", 0 0, L_0x1add690;  1 drivers
v0x1ad5470_0 .net *"_ivl_51", 0 0, L_0x1add750;  1 drivers
v0x1ad5550_0 .net *"_ivl_53", 0 0, L_0x1add310;  1 drivers
v0x1ad5610_0 .net *"_ivl_57", 0 0, L_0x1add920;  1 drivers
v0x1ad56f0_0 .net *"_ivl_59", 0 0, L_0x1addbd0;  1 drivers
v0x1ad57b0_0 .net *"_ivl_63", 0 0, L_0x1addc40;  1 drivers
v0x1ad5890_0 .net *"_ivl_65", 0 0, L_0x1addd70;  1 drivers
v0x1ad5950_0 .net *"_ivl_69", 0 0, L_0x1addea0;  1 drivers
v0x1ad5a30_0 .net *"_ivl_7", 0 0, L_0x1adc680;  1 drivers
v0x1ad5b10_0 .net *"_ivl_71", 0 0, L_0x1addf40;  1 drivers
v0x1ad5bd0_0 .net *"_ivl_75", 0 0, L_0x1ade030;  1 drivers
v0x1ad5cb0_0 .net *"_ivl_77", 0 0, L_0x1ade170;  1 drivers
v0x1ad5d70_0 .net *"_ivl_81", 0 0, L_0x1ade2e0;  1 drivers
v0x1ad6060_0 .net *"_ivl_83", 0 0, L_0x1ade380;  1 drivers
v0x1ad6140_0 .net *"_ivl_84", 0 0, L_0x1adde30;  1 drivers
v0x1ad6220_0 .net *"_ivl_87", 0 0, L_0x1ade5d0;  1 drivers
v0x1ad62e0_0 .net *"_ivl_9", 0 0, L_0x1adc720;  1 drivers
v0x1ad63c0_0 .net *"_ivl_91", 0 0, L_0x1ade0d0;  1 drivers
v0x1ad6480_0 .net *"_ivl_93", 0 0, L_0x1ade720;  1 drivers
v0x1ad6560_0 .net *"_ivl_95", 0 0, L_0x1ade880;  1 drivers
v0x1ad6620_0 .net "in", 0 0, v0x1ad7d70_0;  alias, 1 drivers
v0x1ad66e0_0 .net "next_state", 9 0, L_0x1ade9c0;  alias, 1 drivers
v0x1ad67c0_0 .net "out1", 0 0, L_0x1a6a510;  alias, 1 drivers
v0x1ad6880_0 .net "out2", 0 0, L_0x1a6b3b0;  alias, 1 drivers
v0x1ad6940_0 .net "state", 9 0, v0x1ad80a0_0;  alias, 1 drivers
L_0x1adc450 .part v0x1ad80a0_0, 8, 1;
L_0x1adc4f0 .part v0x1ad80a0_0, 9, 1;
L_0x1adc680 .part v0x1ad80a0_0, 7, 1;
L_0x1adc720 .part v0x1ad80a0_0, 9, 1;
L_0x1adc8e0 .reduce/nor v0x1ad7d70_0;
L_0x1adca10 .part v0x1ad80a0_0, 0, 5;
L_0x1adcc00 .reduce/or L_0x1adca10;
L_0x1adcca0 .part v0x1ad80a0_0, 7, 1;
L_0x1adce30 .part v0x1ad80a0_0, 8, 1;
L_0x1adcfa0 .part v0x1ad80a0_0, 9, 1;
L_0x1add1d0 .part v0x1ad80a0_0, 0, 1;
L_0x1add270 .part v0x1ad80a0_0, 8, 1;
L_0x1add490 .part v0x1ad80a0_0, 9, 1;
L_0x1add750 .part v0x1ad80a0_0, 1, 1;
L_0x1add920 .part v0x1ad80a0_0, 2, 1;
L_0x1addc40 .part v0x1ad80a0_0, 3, 1;
L_0x1addea0 .part v0x1ad80a0_0, 4, 1;
L_0x1ade030 .part v0x1ad80a0_0, 5, 1;
L_0x1ade2e0 .part v0x1ad80a0_0, 6, 1;
L_0x1ade380 .part v0x1ad80a0_0, 7, 1;
L_0x1ade0d0 .reduce/nor v0x1ad7d70_0;
L_0x1ade720 .part v0x1ad80a0_0, 5, 1;
LS_0x1ade9c0_0_0 .concat8 [ 1 1 1 1], L_0x1aae6e0, L_0x1add690, L_0x1add310, L_0x1addbd0;
LS_0x1ade9c0_0_4 .concat8 [ 1 1 1 1], L_0x1addd70, L_0x1addf40, L_0x1ade170, L_0x1ade5d0;
LS_0x1ade9c0_0_8 .concat8 [ 1 1 0 0], L_0x1ade880, L_0x1adef40;
L_0x1ade9c0 .concat8 [ 4 4 2 0], LS_0x1ade9c0_0_0, LS_0x1ade9c0_0_4, LS_0x1ade9c0_0_8;
L_0x1aded30 .reduce/nor v0x1ad7d70_0;
L_0x1adeea0 .part v0x1ad80a0_0, 6, 1;
S_0x1ad6ac0 .scope module, "stim1" "stimulus_gen" 3 166, 3 29 0, S_0x1a7aa70;
 .timescale -12 -12;
    .port_info 0 /INPUT 1 "clk";
    .port_info 1 /OUTPUT 1 "in";
    .port_info 2 /OUTPUT 10 "state";
    .port_info 3 /INPUT 1 "tb_match";
    .port_info 4 /INPUT 10 "next_state_ref";
    .port_info 5 /INPUT 10 "next_state_dut";
    .port_info 6 /OUTPUT 512 "wavedrom_title";
    .port_info 7 /OUTPUT 1 "wavedrom_enable";
v0x1ad7af0_0 .net "clk", 0 0, v0x1adb940_0;  1 drivers
v0x1ad7bd0_0 .var/2s "errored1", 31 0;
v0x1ad7cb0_0 .var/2s "errored2", 31 0;
v0x1ad7d70_0 .var "in", 0 0;
v0x1ad7e10_0 .net "next_state_dut", 9 0, L_0x1ae1600;  alias, 1 drivers
v0x1ad7f20_0 .net "next_state_ref", 9 0, L_0x1ade9c0;  alias, 1 drivers
v0x1ad7fe0_0 .var/2s "onehot_error", 31 0;
v0x1ad80a0_0 .var "state", 9 0;
v0x1ad8160_0 .var "state_error", 9 0;
v0x1ad8220_0 .net "tb_match", 0 0, L_0x1ae20a0;  alias, 1 drivers
v0x1ad82e0_0 .var "wavedrom_enable", 0 0;
v0x1ad83a0_0 .var "wavedrom_title", 511 0;
E_0x1a764f0 .event negedge, v0x1ad7af0_0;
E_0x1a76740 .event posedge, v0x1ad7af0_0;
S_0x1ad6d00 .scope begin, "$ivl_for_loop0" "$ivl_for_loop0" 3 69, 3 69 0, S_0x1ad6ac0;
 .timescale -12 -12;
v0x1ad6f40_0 .var/2s "i", 31 0;
E_0x1a75dc0/0 .event negedge, v0x1ad7af0_0;
E_0x1a75dc0/1 .event posedge, v0x1ad7af0_0;
E_0x1a75dc0 .event/or E_0x1a75dc0/0, E_0x1a75dc0/1;
S_0x1ad7040 .scope begin, "$ivl_for_loop1" "$ivl_for_loop1" 3 74, 3 74 0, S_0x1ad6ac0;
 .timescale -12 -12;
v0x1ad7240_0 .var/2s "i", 31 0;
S_0x1ad7320 .scope begin, "$ivl_for_loop2" "$ivl_for_loop2" 3 114, 3 114 0, S_0x1ad6ac0;
 .timescale -12 -12;
v0x1ad7500_0 .var/2s "i", 31 0;
S_0x1ad75e0 .scope task, "wavedrom_start" "wavedrom_start" 3 45, 3 45 0, S_0x1ad6ac0;
 .timescale -12 -12;
v0x1ad77c0_0 .var "title", 511 0;
TD_tb.stim1.wavedrom_start ;
    %end;
S_0x1ad78c0 .scope task, "wavedrom_stop" "wavedrom_stop" 3 48, 3 48 0, S_0x1ad6ac0;
 .timescale -12 -12;
TD_tb.stim1.wavedrom_stop ;
    %delay 1, 0;
    %end;
S_0x1ad8580 .scope module, "top_module1" "top_module" 3 178, 4 1 0, S_0x1a7aa70;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "in";
    .port_info 1 /INPUT 10 "state";
    .port_info 2 /OUTPUT 10 "next_state";
    .port_info 3 /OUTPUT 1 "out1";
    .port_info 4 /OUTPUT 1 "out2";
L_0x1adf280 .functor OR 1, L_0x1adf140, L_0x1adf1e0, C4<0>, C4<0>;
L_0x1adf520 .functor OR 1, L_0x1adf3e0, L_0x1adf480, C4<0>, C4<0>;
L_0x1adf680 .functor NOT 1, v0x1ad7d70_0, C4<0>, C4<0>, C4<0>;
L_0x1adfd30 .functor AND 1, L_0x1adf680, L_0x1adfbe0, C4<1>, C4<1>;
L_0x1ae03b0 .functor OR 1, L_0x1adfdf0, L_0x1ae02a0, C4<0>, C4<0>;
L_0x1ae0560 .functor OR 1, L_0x1ae03b0, L_0x1ae04c0, C4<0>, C4<0>;
L_0x1ae0670 .functor AND 1, v0x1ad7d70_0, L_0x1ae0560, C4<1>, C4<1>;
L_0x1ae0340 .functor AND 1, v0x1ad7d70_0, L_0x1ae0730, C4<1>, C4<1>;
L_0x1ae0990 .functor AND 1, v0x1ad7d70_0, L_0x1ae08f0, C4<1>, C4<1>;
L_0x1ae0b80 .functor AND 1, v0x1ad7d70_0, L_0x1ae0a50, C4<1>, C4<1>;
L_0x1ae0d40 .functor AND 1, v0x1ad7d70_0, L_0x1ae0ca0, C4<1>, C4<1>;
L_0x1ae0ef0 .functor AND 1, v0x1ad7d70_0, L_0x1ae0db0, C4<1>, C4<1>;
L_0x1ae1210 .functor OR 1, L_0x1ae1020, L_0x1ae10c0, C4<0>, C4<0>;
L_0x1ae1320 .functor AND 1, v0x1ad7d70_0, L_0x1ae1210, C4<1>, C4<1>;
L_0x1ae0fb0 .functor NOT 1, v0x1ad7d70_0, C4<0>, C4<0>, C4<0>;
L_0x1ae1460 .functor AND 1, L_0x1ae0fb0, L_0x1ae0e50, C4<1>, C4<1>;
L_0x1ae1a30 .functor NOT 1, v0x1ad7d70_0, C4<0>, C4<0>, C4<0>;
L_0x1ae1b40 .functor AND 1, L_0x1ae1a30, L_0x1ae1aa0, C4<1>, C4<1>;
v0x1ad87f0_0 .net *"_ivl_1", 0 0, L_0x1adf140;  1 drivers
v0x1ad88d0_0 .net *"_ivl_14", 0 0, L_0x1adf680;  1 drivers
v0x1ad89b0_0 .net *"_ivl_17", 4 0, L_0x1adf6f0;  1 drivers
v0x1ad8aa0_0 .net *"_ivl_19", 0 0, L_0x1adf790;  1 drivers
v0x1ad8b80_0 .net *"_ivl_21", 0 0, L_0x1adf870;  1 drivers
v0x1ad8cb0_0 .net *"_ivl_23", 0 0, L_0x1adf910;  1 drivers
v0x1ad8d90_0 .net *"_ivl_24", 7 0, L_0x1adfa00;  1 drivers
v0x1ad8e70_0 .net *"_ivl_27", 0 0, L_0x1adfbe0;  1 drivers
v0x1ad8f30_0 .net *"_ivl_28", 0 0, L_0x1adfd30;  1 drivers
v0x1ad90a0_0 .net *"_ivl_3", 0 0, L_0x1adf1e0;  1 drivers
v0x1ad9180_0 .net *"_ivl_33", 0 0, L_0x1adfdf0;  1 drivers
v0x1ad9260_0 .net *"_ivl_35", 0 0, L_0x1ae02a0;  1 drivers
v0x1ad9340_0 .net *"_ivl_36", 0 0, L_0x1ae03b0;  1 drivers
v0x1ad9420_0 .net *"_ivl_39", 0 0, L_0x1ae04c0;  1 drivers
v0x1ad9500_0 .net *"_ivl_40", 0 0, L_0x1ae0560;  1 drivers
v0x1ad95e0_0 .net *"_ivl_42", 0 0, L_0x1ae0670;  1 drivers
v0x1ad96c0_0 .net *"_ivl_47", 0 0, L_0x1ae0730;  1 drivers
v0x1ad98b0_0 .net *"_ivl_48", 0 0, L_0x1ae0340;  1 drivers
v0x1ad9990_0 .net *"_ivl_53", 0 0, L_0x1ae08f0;  1 drivers
v0x1ad9a70_0 .net *"_ivl_54", 0 0, L_0x1ae0990;  1 drivers
v0x1ad9b50_0 .net *"_ivl_59", 0 0, L_0x1ae0a50;  1 drivers
v0x1ad9c30_0 .net *"_ivl_60", 0 0, L_0x1ae0b80;  1 drivers
v0x1ad9d10_0 .net *"_ivl_65", 0 0, L_0x1ae0ca0;  1 drivers
v0x1ad9df0_0 .net *"_ivl_66", 0 0, L_0x1ae0d40;  1 drivers
v0x1ad9ed0_0 .net *"_ivl_7", 0 0, L_0x1adf3e0;  1 drivers
v0x1ad9fb0_0 .net *"_ivl_71", 0 0, L_0x1ae0db0;  1 drivers
v0x1ada090_0 .net *"_ivl_72", 0 0, L_0x1ae0ef0;  1 drivers
v0x1ada170_0 .net *"_ivl_77", 0 0, L_0x1ae1020;  1 drivers
v0x1ada250_0 .net *"_ivl_79", 0 0, L_0x1ae10c0;  1 drivers
v0x1ada330_0 .net *"_ivl_80", 0 0, L_0x1ae1210;  1 drivers
v0x1ada410_0 .net *"_ivl_82", 0 0, L_0x1ae1320;  1 drivers
v0x1ada4f0_0 .net *"_ivl_86", 0 0, L_0x1ae0fb0;  1 drivers
v0x1ada5d0_0 .net *"_ivl_89", 0 0, L_0x1ae0e50;  1 drivers
v0x1ada8c0_0 .net *"_ivl_9", 0 0, L_0x1adf480;  1 drivers
v0x1ada9a0_0 .net *"_ivl_90", 0 0, L_0x1ae1460;  1 drivers
v0x1adaa80_0 .net *"_ivl_95", 0 0, L_0x1ae1a30;  1 drivers
v0x1adab60_0 .net *"_ivl_98", 0 0, L_0x1ae1aa0;  1 drivers
v0x1adac40_0 .net *"_ivl_99", 0 0, L_0x1ae1b40;  1 drivers
v0x1adad20_0 .net "in", 0 0, v0x1ad7d70_0;  alias, 1 drivers
v0x1adadc0_0 .net "next_state", 9 0, L_0x1ae1600;  alias, 1 drivers
v0x1adae80_0 .net "out1", 0 0, L_0x1adf280;  alias, 1 drivers
v0x1adaf20_0 .net "out2", 0 0, L_0x1adf520;  alias, 1 drivers
v0x1adafe0_0 .net "state", 9 0, v0x1ad80a0_0;  alias, 1 drivers
L_0x1adf140 .part v0x1ad80a0_0, 8, 1;
L_0x1adf1e0 .part v0x1ad80a0_0, 9, 1;
L_0x1adf3e0 .part v0x1ad80a0_0, 7, 1;
L_0x1adf480 .part v0x1ad80a0_0, 9, 1;
L_0x1adf6f0 .part v0x1ad80a0_0, 0, 5;
L_0x1adf790 .part v0x1ad80a0_0, 7, 1;
L_0x1adf870 .part v0x1ad80a0_0, 8, 1;
L_0x1adf910 .part v0x1ad80a0_0, 9, 1;
L_0x1adfa00 .concat [ 1 1 1 5], L_0x1adf910, L_0x1adf870, L_0x1adf790, L_0x1adf6f0;
L_0x1adfbe0 .reduce/or L_0x1adfa00;
L_0x1adfdf0 .part v0x1ad80a0_0, 0, 1;
L_0x1ae02a0 .part v0x1ad80a0_0, 8, 1;
L_0x1ae04c0 .part v0x1ad80a0_0, 9, 1;
L_0x1ae0730 .part v0x1ad80a0_0, 1, 1;
L_0x1ae08f0 .part v0x1ad80a0_0, 2, 1;
L_0x1ae0a50 .part v0x1ad80a0_0, 3, 1;
L_0x1ae0ca0 .part v0x1ad80a0_0, 4, 1;
L_0x1ae0db0 .part v0x1ad80a0_0, 5, 1;
L_0x1ae1020 .part v0x1ad80a0_0, 6, 1;
L_0x1ae10c0 .part v0x1ad80a0_0, 7, 1;
L_0x1ae0e50 .part v0x1ad80a0_0, 5, 1;
LS_0x1ae1600_0_0 .concat8 [ 1 1 1 1], L_0x1adfd30, L_0x1ae0670, L_0x1ae0340, L_0x1ae0990;
LS_0x1ae1600_0_4 .concat8 [ 1 1 1 1], L_0x1ae0b80, L_0x1ae0d40, L_0x1ae0ef0, L_0x1ae1320;
LS_0x1ae1600_0_8 .concat8 [ 1 1 0 0], L_0x1ae1460, L_0x1ae1b40;
L_0x1ae1600 .concat8 [ 4 4 2 0], LS_0x1ae1600_0_0, LS_0x1ae1600_0_4, LS_0x1ae1600_0_8;
L_0x1ae1aa0 .part v0x1ad80a0_0, 6, 1;
S_0x1adb190 .scope task, "wait_for_end_of_timestep" "wait_for_end_of_timestep" 3 187, 3 187 0, S_0x1a7aa70;
 .timescale -12 -12;
E_0x1a5da20 .event anyedge, v0x1adc020_0;
TD_tb.wait_for_end_of_timestep ;
    %pushi/vec4 5, 0, 32;
T_2.0 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_2.1, 5;
    %jmp/1 T_2.1, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %load/vec4 v0x1adc020_0;
    %nor/r;
    %assign/vec4 v0x1adc020_0, 0;
    %wait E_0x1a5da20;
    %jmp T_2.0;
T_2.1 ;
    %pop/vec4 1;
    %end;
    .scope S_0x1ad6ac0;
T_3 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x1ad7bd0_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x1ad7cb0_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x1ad7fe0_0, 0, 32;
    %pushi/vec4 0, 0, 10;
    %store/vec4 v0x1ad8160_0, 0, 10;
    %end;
    .thread T_3, $init;
    .scope S_0x1ad6ac0;
T_4 ;
    %pushi/vec4 2, 0, 32;
T_4.0 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_4.1, 5;
    %jmp/1 T_4.1, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_0x1a76740;
    %jmp T_4.0;
T_4.1 ;
    %pop/vec4 1;
T_4.2 ;
    %wait E_0x1a75dc0;
    %load/vec4 v0x1ad8160_0;
    %load/vec4 v0x1ad7f20_0;
    %load/vec4 v0x1ad7e10_0;
    %xor;
    %or;
    %assign/vec4 v0x1ad8160_0, 0;
    %jmp T_4.2;
T_4.3 ;
    %end;
    .thread T_4;
    .scope S_0x1ad6ac0;
T_5 ;
    %pushi/vec4 0, 0, 10;
    %assign/vec4 v0x1ad80a0_0, 0;
    %wait E_0x1a764f0;
    %fork t_1, S_0x1ad6d00;
    %jmp t_0;
    .scope S_0x1ad6d00;
t_1 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x1ad6f40_0, 0, 32;
T_5.0 ; Top of for-loop 
    %load/vec4 v0x1ad6f40_0;
    %cmpi/s 10, 0, 32;
    %jmp/0xz T_5.1, 5;
    %wait E_0x1a75dc0;
    %pushi/vec4 1, 0, 10;
    %load/vec4 v0x1ad6f40_0;
    %ix/vec4 4;
    %shiftl 4;
    %assign/vec4 v0x1ad80a0_0, 0;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0x1ad7d70_0, 0;
T_5.2 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x1ad6f40_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x1ad6f40_0, 0, 32;
    %jmp T_5.0;
T_5.1 ; for-loop exit label
    %end;
    .scope S_0x1ad6ac0;
t_0 %join;
    %fork t_3, S_0x1ad7040;
    %jmp t_2;
    .scope S_0x1ad7040;
t_3 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x1ad7240_0, 0, 32;
T_5.3 ; Top of for-loop 
    %load/vec4 v0x1ad7240_0;
    %cmpi/s 10, 0, 32;
    %jmp/0xz T_5.4, 5;
    %wait E_0x1a75dc0;
    %pushi/vec4 1, 0, 10;
    %load/vec4 v0x1ad7240_0;
    %ix/vec4 4;
    %shiftl 4;
    %assign/vec4 v0x1ad80a0_0, 0;
    %pushi/vec4 1, 0, 1;
    %assign/vec4 v0x1ad7d70_0, 0;
T_5.5 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x1ad7240_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x1ad7240_0, 0, 32;
    %jmp T_5.3;
T_5.4 ; for-loop exit label
    %end;
    .scope S_0x1ad6ac0;
t_2 %join;
    %wait E_0x1a764f0;
    %fork TD_tb.stim1.wavedrom_stop, S_0x1ad78c0;
    %join;
    %pushi/vec4 200, 0, 32;
T_5.6 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_5.7, 5;
    %jmp/1 T_5.7, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_0x1a75dc0;
    %pushi/vec4 1, 0, 10;
    %vpi_func 3 83 "$random" 32 {0 0 0};
    %pushi/vec4 10, 0, 32;
    %mod;
    %ix/vec4 4;
    %shiftl 4;
    %assign/vec4 v0x1ad80a0_0, 0;
    %vpi_func 3 84 "$random" 32 {0 0 0};
    %pad/s 1;
    %assign/vec4 v0x1ad7d70_0, 0;
    %load/vec4 v0x1ad8220_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.8, 8;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x1ad7fe0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x1ad7fe0_0, 0, 32;
T_5.8 ;
    %jmp T_5.6;
T_5.7 ;
    %pop/vec4 1;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x1ad7bd0_0, 0, 32;
    %pushi/vec4 400, 0, 32;
T_5.10 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_5.11, 5;
    %jmp/1 T_5.11, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_0x1a75dc0;
    %pushi/vec4 1, 0, 10;
    %vpi_func 3 91 "$random" 32 {0 0 0};
    %pushi/vec4 10, 0, 32;
    %mod;
    %ix/vec4 4;
    %shiftl 4;
    %pushi/vec4 1, 0, 10;
    %vpi_func 3 91 "$random" 32 {0 0 0};
    %pushi/vec4 10, 0, 32;
    %mod;
    %ix/vec4 4;
    %shiftl 4;
    %or;
    %assign/vec4 v0x1ad80a0_0, 0;
    %vpi_func 3 92 "$random" 32 {0 0 0};
    %pad/s 1;
    %assign/vec4 v0x1ad7d70_0, 0;
    %load/vec4 v0x1ad8220_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.12, 8;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x1ad7bd0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x1ad7bd0_0, 0, 32;
T_5.12 ;
    %jmp T_5.10;
T_5.11 ;
    %pop/vec4 1;
    %load/vec4 v0x1ad7fe0_0;
    %nor/r;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_5.16, 9;
    %load/vec4 v0x1ad7bd0_0;
    %pushi/vec4 0, 0, 32;
    %cmp/ne;
    %flag_get/vec4 4;
    %and;
T_5.16;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.14, 8;
    %vpi_call/w 3 98 "$display", "Hint: Your circuit passed when given only one-hot inputs, but not with two-hot inputs." {0 0 0};
T_5.14 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x1ad7cb0_0, 0, 32;
    %pushi/vec4 800, 0, 32;
T_5.17 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_5.18, 5;
    %jmp/1 T_5.18, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_0x1a75dc0;
    %vpi_func 3 103 "$random" 32 {0 0 0};
    %pad/s 10;
    %assign/vec4 v0x1ad80a0_0, 0;
    %vpi_func 3 104 "$random" 32 {0 0 0};
    %pad/s 1;
    %assign/vec4 v0x1ad7d70_0, 0;
    %load/vec4 v0x1ad8220_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.19, 8;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x1ad7cb0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x1ad7cb0_0, 0, 32;
T_5.19 ;
    %jmp T_5.17;
T_5.18 ;
    %pop/vec4 1;
    %load/vec4 v0x1ad7fe0_0;
    %nor/r;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_5.23, 9;
    %load/vec4 v0x1ad7cb0_0;
    %pushi/vec4 0, 0, 32;
    %cmp/ne;
    %flag_get/vec4 4;
    %and;
T_5.23;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.21, 8;
    %vpi_call/w 3 109 "$display", "Hint: Your circuit passed when given only one-hot inputs, but not with random inputs." {0 0 0};
T_5.21 ;
    %load/vec4 v0x1ad7fe0_0;
    %nor/r;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_5.26, 9;
    %load/vec4 v0x1ad7bd0_0;
    %cmpi/ne 0, 0, 32;
    %flag_get/vec4 4;
    %jmp/1 T_5.27, 4;
    %load/vec4 v0x1ad7cb0_0;
    %pushi/vec4 0, 0, 32;
    %cmp/ne;
    %flag_get/vec4 4;
    %or;
T_5.27;
    %and;
T_5.26;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.24, 8;
    %vpi_call/w 3 112 "$display", "Hint: Are you doing something more complicated than deriving state transition equations by inspection?\012" {0 0 0};
T_5.24 ;
    %fork t_5, S_0x1ad7320;
    %jmp t_4;
    .scope S_0x1ad7320;
t_5 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x1ad7500_0, 0, 32;
T_5.28 ; Top of for-loop 
    %load/vec4 v0x1ad7500_0;
    %cmpi/u 10, 0, 32;
    %jmp/0xz T_5.29, 5;
    %load/vec4 v0x1ad8160_0;
    %load/vec4 v0x1ad7500_0;
    %part/s 1;
    %cmpi/e 0, 0, 1;
    %flag_mov 8, 6;
    %jmp/0 T_5.31, 8;
    %pushi/vec4 25455, 0, 32; draw_string_vec4
    %pushi/vec4 1920099683, 0, 32; draw_string_vec4
    %concat/vec4; draw_string_vec4
    %pushi/vec4 116, 0, 8; draw_string_vec4
    %concat/vec4; draw_string_vec4
    %jmp/1 T_5.32, 8;
T_5.31 ; End of true expr.
    %pushi/vec4 1768842095, 0, 32; draw_string_vec4
    %pushi/vec4 1920099683, 0, 32; draw_string_vec4
    %concat/vec4; draw_string_vec4
    %pushi/vec4 116, 0, 8; draw_string_vec4
    %concat/vec4; draw_string_vec4
    %jmp/0 T_5.32, 8;
 ; End of false expr.
    %blend;
T_5.32;
    %vpi_call/w 3 115 "$display", "Hint: next_state[%0d] is %s.", v0x1ad7500_0, S<0,vec4,u72> {1 0 0};
T_5.30 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x1ad7500_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x1ad7500_0, 0, 32;
    %jmp T_5.28;
T_5.29 ; for-loop exit label
    %end;
    .scope S_0x1ad6ac0;
t_4 %join;
    %delay 1, 0;
    %vpi_call/w 3 117 "$finish" {0 0 0};
    %end;
    .thread T_5;
    .scope S_0x1a7aa70;
T_6 ;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x1adb940_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x1adc020_0, 0, 1;
    %end;
    .thread T_6, $init;
    .scope S_0x1a7aa70;
T_7 ;
T_7.0 ;
    %delay 5, 0;
    %load/vec4 v0x1adb940_0;
    %inv;
    %store/vec4 v0x1adb940_0, 0, 1;
    %jmp T_7.0;
T_7.1 ;
    %end;
    .thread T_7;
    .scope S_0x1a7aa70;
T_8 ;
    %vpi_call/w 3 158 "$dumpfile", "wave.vcd" {0 0 0};
    %vpi_call/w 3 159 "$dumpvars", 32'sb00000000000000000000000000000001, v0x1ad7af0_0, v0x1adc190_0, v0x1adb9e0_0, v0x1adbee0_0, v0x1adbb20_0, v0x1adba80_0, v0x1adbcd0_0, v0x1adbc30_0, v0x1adbe10_0, v0x1adbd70_0 {0 0 0};
    %end;
    .thread T_8;
    .scope S_0x1a7aa70;
T_9 ;
    %load/vec4 v0x1adbf80_0;
    %parti/u 32, 192, 32;
    %cmpi/ne 0, 0, 32;
    %jmp/0xz  T_9.0, 4;
    %load/vec4 v0x1adbf80_0;
    %parti/u 32, 192, 32;
    %load/vec4 v0x1adbf80_0;
    %parti/u 32, 160, 32;
    %vpi_call/w 3 196 "$display", "Hint: Output '%s' has %0d mismatches. First mismatch occurred at time %0d.", "next_state", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %jmp T_9.1;
T_9.0 ;
    %vpi_call/w 3 197 "$display", "Hint: Output '%s' has no mismatches.", "next_state" {0 0 0};
T_9.1 ;
    %load/vec4 v0x1adbf80_0;
    %parti/u 32, 128, 32;
    %cmpi/ne 0, 0, 32;
    %jmp/0xz  T_9.2, 4;
    %load/vec4 v0x1adbf80_0;
    %parti/u 32, 128, 32;
    %load/vec4 v0x1adbf80_0;
    %parti/u 32, 96, 32;
    %vpi_call/w 3 198 "$display", "Hint: Output '%s' has %0d mismatches. First mismatch occurred at time %0d.", "out1", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %jmp T_9.3;
T_9.2 ;
    %vpi_call/w 3 199 "$display", "Hint: Output '%s' has no mismatches.", "out1" {0 0 0};
T_9.3 ;
    %load/vec4 v0x1adbf80_0;
    %parti/u 32, 64, 32;
    %cmpi/ne 0, 0, 32;
    %jmp/0xz  T_9.4, 4;
    %load/vec4 v0x1adbf80_0;
    %parti/u 32, 64, 32;
    %load/vec4 v0x1adbf80_0;
    %parti/u 32, 32, 32;
    %vpi_call/w 3 200 "$display", "Hint: Output '%s' has %0d mismatches. First mismatch occurred at time %0d.", "out2", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %jmp T_9.5;
T_9.4 ;
    %vpi_call/w 3 201 "$display", "Hint: Output '%s' has no mismatches.", "out2" {0 0 0};
T_9.5 ;
    %load/vec4 v0x1adbf80_0;
    %parti/u 32, 256, 32;
    %load/vec4 v0x1adbf80_0;
    %parti/u 32, 0, 32;
    %vpi_call/w 3 203 "$display", "Hint: Total mismatched samples is %1d out of %1d samples\012", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %vpi_call/w 3 204 "$display", "Simulation finished at %0d ps", $time {0 0 0};
    %load/vec4 v0x1adbf80_0;
    %parti/u 32, 256, 32;
    %load/vec4 v0x1adbf80_0;
    %parti/u 32, 0, 32;
    %vpi_call/w 3 205 "$display", "Mismatches: %1d in %1d samples", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %end;
    .thread T_9, $final;
    .scope S_0x1a7aa70;
T_10 ;
    %wait E_0x1a75dc0;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x1adbf80_0;
    %pushi/vec4 0, 0, 32;
    %part/u 32;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x1adbf80_0, 4, 32;
    %load/vec4 v0x1adc0c0_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_10.0, 8;
    %load/vec4 v0x1adbf80_0;
    %parti/u 32, 256, 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_10.2, 4;
    %vpi_func 3 216 "$time" 64 {0 0 0};
    %cast2;
    %pad/u 32;
    %ix/load 4, 224, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x1adbf80_0, 4, 32;
T_10.2 ;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x1adbf80_0;
    %pushi/vec4 256, 0, 32;
    %part/u 32;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %ix/load 4, 256, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x1adbf80_0, 4, 32;
T_10.0 ;
    %load/vec4 v0x1adbb20_0;
    %load/vec4 v0x1adbb20_0;
    %load/vec4 v0x1adba80_0;
    %xor;
    %load/vec4 v0x1adbb20_0;
    %xor;
    %cmp/ne;
    %jmp/0xz  T_10.4, 6;
    %load/vec4 v0x1adbf80_0;
    %parti/u 32, 192, 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_10.6, 4;
    %vpi_func 3 220 "$time" 64 {0 0 0};
    %cast2;
    %pad/u 32;
    %ix/load 4, 160, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x1adbf80_0, 4, 32;
T_10.6 ;
    %load/vec4 v0x1adbf80_0;
    %parti/u 32, 192, 32;
    %addi 1, 0, 32;
    %ix/load 4, 192, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x1adbf80_0, 4, 32;
T_10.4 ;
    %load/vec4 v0x1adbcd0_0;
    %load/vec4 v0x1adbcd0_0;
    %load/vec4 v0x1adbc30_0;
    %xor;
    %load/vec4 v0x1adbcd0_0;
    %xor;
    %cmp/ne;
    %jmp/0xz  T_10.8, 6;
    %load/vec4 v0x1adbf80_0;
    %parti/u 32, 128, 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_10.10, 4;
    %vpi_func 3 223 "$time" 64 {0 0 0};
    %cast2;
    %pad/u 32;
    %ix/load 4, 96, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x1adbf80_0, 4, 32;
T_10.10 ;
    %load/vec4 v0x1adbf80_0;
    %parti/u 32, 128, 32;
    %addi 1, 0, 32;
    %ix/load 4, 128, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x1adbf80_0, 4, 32;
T_10.8 ;
    %load/vec4 v0x1adbe10_0;
    %load/vec4 v0x1adbe10_0;
    %load/vec4 v0x1adbd70_0;
    %xor;
    %load/vec4 v0x1adbe10_0;
    %xor;
    %cmp/ne;
    %jmp/0xz  T_10.12, 6;
    %load/vec4 v0x1adbf80_0;
    %parti/u 32, 64, 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_10.14, 4;
    %vpi_func 3 226 "$time" 64 {0 0 0};
    %cast2;
    %pad/u 32;
    %ix/load 4, 32, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x1adbf80_0, 4, 32;
T_10.14 ;
    %load/vec4 v0x1adbf80_0;
    %parti/u 32, 64, 32;
    %addi 1, 0, 32;
    %ix/load 4, 64, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x1adbf80_0, 4, 32;
T_10.12 ;
    %jmp T_10;
    .thread T_10;
# The file index is used to find the file name in the following table.
:file_names 5;
    "N/A";
    "<interactive>";
    "-";
    "/home/jmb9986/AutoChip/autochip_scripts/../verilogeval_prompts_tbs/ve_testbenches_machine/fsm_onehot/fsm_onehot_tb.sv";
    "/home/jmb9986/AutoChip/autochip_scripts/outputs/gpt-4o/can55_depth0/machine/fsm_onehot/iter0/response24/top_module.sv";
