#! /usr/local/bin/vvp
:ivl_version "13.0 (devel)" "(s20221226-331-g77d7f0b8f)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision - 12;
:vpi_module "/usr/local/lib/ivl/system.vpi";
:vpi_module "/usr/local/lib/ivl/vhdl_sys.vpi";
:vpi_module "/usr/local/lib/ivl/vhdl_textio.vpi";
:vpi_module "/usr/local/lib/ivl/v2005_math.vpi";
:vpi_module "/usr/local/lib/ivl/va_math.vpi";
:vpi_module "/usr/local/lib/ivl/v2009.vpi";
S_0x1ac4bb0 .scope package, "$unit" "$unit" 2 1;
 .timescale 0 0;
S_0x1ac4d40 .scope module, "tb" "tb" 3 84;
 .timescale -12 -12;
L_0x1ab72d0 .functor NOT 1, L_0x1b147b0, C4<0>, C4<0>, C4<0>;
L_0x1b14590 .functor XOR 2, L_0x1b14430, L_0x1b144f0, C4<00>, C4<00>;
L_0x1b146a0 .functor XOR 2, L_0x1b14590, L_0x1b14600, C4<00>, C4<00>;
v0x1b0f970_0 .net *"_ivl_10", 1 0, L_0x1b14600;  1 drivers
v0x1b0fa70_0 .net *"_ivl_12", 1 0, L_0x1b146a0;  1 drivers
v0x1b0fb50_0 .net *"_ivl_2", 1 0, L_0x1b12d30;  1 drivers
v0x1b0fc10_0 .net *"_ivl_4", 1 0, L_0x1b14430;  1 drivers
v0x1b0fcf0_0 .net *"_ivl_6", 1 0, L_0x1b144f0;  1 drivers
v0x1b0fe20_0 .net *"_ivl_8", 1 0, L_0x1b14590;  1 drivers
v0x1b0ff00_0 .net "a", 0 0, v0x1b0c640_0;  1 drivers
v0x1b0ffa0_0 .net "b", 0 0, v0x1b0c6e0_0;  1 drivers
v0x1b10040_0 .net "c", 0 0, v0x1b0c780_0;  1 drivers
v0x1b100e0_0 .var "clk", 0 0;
v0x1b10180_0 .net "d", 0 0, v0x1b0c8c0_0;  1 drivers
v0x1b10220_0 .net "out_pos_dut", 0 0, L_0x1b14180;  1 drivers
v0x1b102c0_0 .net "out_pos_ref", 0 0, L_0x1b117f0;  1 drivers
v0x1b10360_0 .net "out_sop_dut", 0 0, L_0x1b12880;  1 drivers
v0x1b10400_0 .net "out_sop_ref", 0 0, L_0x1ae6df0;  1 drivers
v0x1b104a0_0 .var/2u "stats1", 223 0;
v0x1b10540_0 .var/2u "strobe", 0 0;
v0x1b105e0_0 .net "tb_match", 0 0, L_0x1b147b0;  1 drivers
v0x1b106b0_0 .net "tb_mismatch", 0 0, L_0x1ab72d0;  1 drivers
v0x1b10750_0 .net "wavedrom_enable", 0 0, v0x1b0cb90_0;  1 drivers
v0x1b10820_0 .net "wavedrom_title", 511 0, v0x1b0cc30_0;  1 drivers
L_0x1b12d30 .concat [ 1 1 0 0], L_0x1b117f0, L_0x1ae6df0;
L_0x1b14430 .concat [ 1 1 0 0], L_0x1b117f0, L_0x1ae6df0;
L_0x1b144f0 .concat [ 1 1 0 0], L_0x1b14180, L_0x1b12880;
L_0x1b14600 .concat [ 1 1 0 0], L_0x1b117f0, L_0x1ae6df0;
L_0x1b147b0 .cmp/eeq 2, L_0x1b12d30, L_0x1b146a0;
S_0x1ac4ed0 .scope module, "good1" "reference_module" 3 133, 3 4 0, S_0x1ac4d40;
 .timescale -12 -12;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /INPUT 1 "c";
    .port_info 3 /INPUT 1 "d";
    .port_info 4 /OUTPUT 1 "out_sop";
    .port_info 5 /OUTPUT 1 "out_pos";
L_0x1ab76b0 .functor AND 1, v0x1b0c780_0, v0x1b0c8c0_0, C4<1>, C4<1>;
L_0x1ab7a90 .functor NOT 1, v0x1b0c640_0, C4<0>, C4<0>, C4<0>;
L_0x1ab7e70 .functor NOT 1, v0x1b0c6e0_0, C4<0>, C4<0>, C4<0>;
L_0x1ab80f0 .functor AND 1, L_0x1ab7a90, L_0x1ab7e70, C4<1>, C4<1>;
L_0x1acf740 .functor AND 1, L_0x1ab80f0, v0x1b0c780_0, C4<1>, C4<1>;
L_0x1ae6df0 .functor OR 1, L_0x1ab76b0, L_0x1acf740, C4<0>, C4<0>;
L_0x1b10c70 .functor NOT 1, v0x1b0c6e0_0, C4<0>, C4<0>, C4<0>;
L_0x1b10ce0 .functor OR 1, L_0x1b10c70, v0x1b0c8c0_0, C4<0>, C4<0>;
L_0x1b10df0 .functor AND 1, v0x1b0c780_0, L_0x1b10ce0, C4<1>, C4<1>;
L_0x1b10eb0 .functor NOT 1, v0x1b0c640_0, C4<0>, C4<0>, C4<0>;
L_0x1b10f80 .functor OR 1, L_0x1b10eb0, v0x1b0c6e0_0, C4<0>, C4<0>;
L_0x1b10ff0 .functor AND 1, L_0x1b10df0, L_0x1b10f80, C4<1>, C4<1>;
L_0x1b11170 .functor NOT 1, v0x1b0c6e0_0, C4<0>, C4<0>, C4<0>;
L_0x1b111e0 .functor OR 1, L_0x1b11170, v0x1b0c8c0_0, C4<0>, C4<0>;
L_0x1b11100 .functor AND 1, v0x1b0c780_0, L_0x1b111e0, C4<1>, C4<1>;
L_0x1b11370 .functor NOT 1, v0x1b0c640_0, C4<0>, C4<0>, C4<0>;
L_0x1b11470 .functor OR 1, L_0x1b11370, v0x1b0c8c0_0, C4<0>, C4<0>;
L_0x1b11530 .functor AND 1, L_0x1b11100, L_0x1b11470, C4<1>, C4<1>;
L_0x1b116e0 .functor XNOR 1, L_0x1b10ff0, L_0x1b11530, C4<0>, C4<0>;
v0x1ab6c00_0 .net *"_ivl_0", 0 0, L_0x1ab76b0;  1 drivers
v0x1ab7000_0 .net *"_ivl_12", 0 0, L_0x1b10c70;  1 drivers
v0x1ab73e0_0 .net *"_ivl_14", 0 0, L_0x1b10ce0;  1 drivers
v0x1ab77c0_0 .net *"_ivl_16", 0 0, L_0x1b10df0;  1 drivers
v0x1ab7ba0_0 .net *"_ivl_18", 0 0, L_0x1b10eb0;  1 drivers
v0x1ab7f80_0 .net *"_ivl_2", 0 0, L_0x1ab7a90;  1 drivers
v0x1ab8200_0 .net *"_ivl_20", 0 0, L_0x1b10f80;  1 drivers
v0x1b0abb0_0 .net *"_ivl_24", 0 0, L_0x1b11170;  1 drivers
v0x1b0ac90_0 .net *"_ivl_26", 0 0, L_0x1b111e0;  1 drivers
v0x1b0ad70_0 .net *"_ivl_28", 0 0, L_0x1b11100;  1 drivers
v0x1b0ae50_0 .net *"_ivl_30", 0 0, L_0x1b11370;  1 drivers
v0x1b0af30_0 .net *"_ivl_32", 0 0, L_0x1b11470;  1 drivers
v0x1b0b010_0 .net *"_ivl_36", 0 0, L_0x1b116e0;  1 drivers
L_0x7f57ddf10018 .functor BUFT 1, C4<x>, C4<0>, C4<0>, C4<0>;
v0x1b0b0d0_0 .net *"_ivl_38", 0 0, L_0x7f57ddf10018;  1 drivers
v0x1b0b1b0_0 .net *"_ivl_4", 0 0, L_0x1ab7e70;  1 drivers
v0x1b0b290_0 .net *"_ivl_6", 0 0, L_0x1ab80f0;  1 drivers
v0x1b0b370_0 .net *"_ivl_8", 0 0, L_0x1acf740;  1 drivers
v0x1b0b450_0 .net "a", 0 0, v0x1b0c640_0;  alias, 1 drivers
v0x1b0b510_0 .net "b", 0 0, v0x1b0c6e0_0;  alias, 1 drivers
v0x1b0b5d0_0 .net "c", 0 0, v0x1b0c780_0;  alias, 1 drivers
v0x1b0b690_0 .net "d", 0 0, v0x1b0c8c0_0;  alias, 1 drivers
v0x1b0b750_0 .net "out_pos", 0 0, L_0x1b117f0;  alias, 1 drivers
v0x1b0b810_0 .net "out_sop", 0 0, L_0x1ae6df0;  alias, 1 drivers
v0x1b0b8d0_0 .net "pos0", 0 0, L_0x1b10ff0;  1 drivers
v0x1b0b990_0 .net "pos1", 0 0, L_0x1b11530;  1 drivers
L_0x1b117f0 .functor MUXZ 1, L_0x7f57ddf10018, L_0x1b10ff0, L_0x1b116e0, C4<>;
S_0x1b0bb10 .scope module, "stim1" "stimulus_gen" 3 126, 3 22 0, S_0x1ac4d40;
 .timescale -12 -12;
    .port_info 0 /INPUT 1 "clk";
    .port_info 1 /OUTPUT 1 "a";
    .port_info 2 /OUTPUT 1 "b";
    .port_info 3 /OUTPUT 1 "c";
    .port_info 4 /OUTPUT 1 "d";
    .port_info 5 /OUTPUT 512 "wavedrom_title";
    .port_info 6 /OUTPUT 1 "wavedrom_enable";
    .port_info 7 /INPUT 1 "tb_match";
v0x1b0c640_0 .var "a", 0 0;
v0x1b0c6e0_0 .var "b", 0 0;
v0x1b0c780_0 .var "c", 0 0;
v0x1b0c820_0 .net "clk", 0 0, v0x1b100e0_0;  1 drivers
v0x1b0c8c0_0 .var "d", 0 0;
v0x1b0c9b0_0 .var/2u "fail", 0 0;
v0x1b0ca50_0 .var/2u "fail1", 0 0;
v0x1b0caf0_0 .net "tb_match", 0 0, L_0x1b147b0;  alias, 1 drivers
v0x1b0cb90_0 .var "wavedrom_enable", 0 0;
v0x1b0cc30_0 .var "wavedrom_title", 511 0;
E_0x1ac3520/0 .event negedge, v0x1b0c820_0;
E_0x1ac3520/1 .event posedge, v0x1b0c820_0;
E_0x1ac3520 .event/or E_0x1ac3520/0, E_0x1ac3520/1;
S_0x1b0be40 .scope begin, "$ivl_for_loop0" "$ivl_for_loop0" 3 68, 3 68 0, S_0x1b0bb10;
 .timescale -12 -12;
v0x1b0c080_0 .var/2s "i", 31 0;
E_0x1ac33c0 .event posedge, v0x1b0c820_0;
S_0x1b0c180 .scope task, "wavedrom_start" "wavedrom_start" 3 34, 3 34 0, S_0x1b0bb10;
 .timescale -12 -12;
v0x1b0c380_0 .var "title", 511 0;
TD_tb.stim1.wavedrom_start ;
    %end;
S_0x1b0c460 .scope task, "wavedrom_stop" "wavedrom_stop" 3 37, 3 37 0, S_0x1b0bb10;
 .timescale -12 -12;
TD_tb.stim1.wavedrom_stop ;
    %delay 1, 0;
    %end;
S_0x1b0ce10 .scope module, "top_module1" "top_module" 3 141, 4 1 0, S_0x1ac4d40;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /INPUT 1 "c";
    .port_info 3 /INPUT 1 "d";
    .port_info 4 /OUTPUT 1 "out_sop";
    .port_info 5 /OUTPUT 1 "out_pos";
L_0x1b119a0 .functor NOT 1, v0x1b0c640_0, C4<0>, C4<0>, C4<0>;
L_0x1b11a30 .functor NOT 1, v0x1b0c6e0_0, C4<0>, C4<0>, C4<0>;
L_0x1b11bd0 .functor AND 1, L_0x1b119a0, L_0x1b11a30, C4<1>, C4<1>;
L_0x1b11ce0 .functor AND 1, L_0x1b11bd0, v0x1b0c780_0, C4<1>, C4<1>;
L_0x1b11ee0 .functor AND 1, L_0x1b11ce0, v0x1b0c8c0_0, C4<1>, C4<1>;
L_0x1b120b0 .functor AND 1, v0x1b0c640_0, v0x1b0c6e0_0, C4<1>, C4<1>;
L_0x1b12270 .functor AND 1, L_0x1b120b0, v0x1b0c780_0, C4<1>, C4<1>;
L_0x1b12330 .functor AND 1, L_0x1b12270, v0x1b0c8c0_0, C4<1>, C4<1>;
L_0x1b12440 .functor OR 1, L_0x1b11ee0, L_0x1b12330, C4<0>, C4<0>;
L_0x1b12550 .functor NOT 1, v0x1b0c640_0, C4<0>, C4<0>, C4<0>;
L_0x1b12620 .functor AND 1, L_0x1b12550, v0x1b0c6e0_0, C4<1>, C4<1>;
L_0x1b12690 .functor AND 1, L_0x1b12620, v0x1b0c780_0, C4<1>, C4<1>;
L_0x1b127c0 .functor AND 1, L_0x1b12690, v0x1b0c8c0_0, C4<1>, C4<1>;
L_0x1b12880 .functor OR 1, L_0x1b12440, L_0x1b127c0, C4<0>, C4<0>;
L_0x1b12750 .functor NOT 1, v0x1b0c6e0_0, C4<0>, C4<0>, C4<0>;
L_0x1b12a60 .functor OR 1, v0x1b0c640_0, L_0x1b12750, C4<0>, C4<0>;
L_0x1b12bb0 .functor NOT 1, v0x1b0c780_0, C4<0>, C4<0>, C4<0>;
L_0x1b12c20 .functor OR 1, L_0x1b12a60, L_0x1b12bb0, C4<0>, C4<0>;
L_0x1b12dd0 .functor NOT 1, v0x1b0c8c0_0, C4<0>, C4<0>, C4<0>;
L_0x1b12e40 .functor OR 1, L_0x1b12c20, L_0x1b12dd0, C4<0>, C4<0>;
L_0x1b13000 .functor NOT 1, v0x1b0c6e0_0, C4<0>, C4<0>, C4<0>;
L_0x1b13070 .functor OR 1, v0x1b0c640_0, L_0x1b13000, C4<0>, C4<0>;
L_0x1b131f0 .functor NOT 1, v0x1b0c780_0, C4<0>, C4<0>, C4<0>;
L_0x1b13260 .functor OR 1, L_0x1b13070, L_0x1b131f0, C4<0>, C4<0>;
L_0x1b13440 .functor OR 1, L_0x1b13260, v0x1b0c8c0_0, C4<0>, C4<0>;
L_0x1b13500 .functor AND 1, L_0x1b12e40, L_0x1b13440, C4<1>, C4<1>;
L_0x1b136f0 .functor OR 1, v0x1b0c640_0, v0x1b0c6e0_0, C4<0>, C4<0>;
L_0x1b13760 .functor OR 1, L_0x1b136f0, v0x1b0c780_0, C4<0>, C4<0>;
L_0x1b13910 .functor OR 1, L_0x1b13760, v0x1b0c8c0_0, C4<0>, C4<0>;
L_0x1b139d0 .functor AND 1, L_0x1b13500, L_0x1b13910, C4<1>, C4<1>;
L_0x1b13be0 .functor NOT 1, v0x1b0c640_0, C4<0>, C4<0>, C4<0>;
L_0x1b13c50 .functor NOT 1, v0x1b0c6e0_0, C4<0>, C4<0>, C4<0>;
L_0x1b13dd0 .functor OR 1, L_0x1b13be0, L_0x1b13c50, C4<0>, C4<0>;
L_0x1b13ee0 .functor OR 1, L_0x1b13dd0, v0x1b0c780_0, C4<0>, C4<0>;
L_0x1b140c0 .functor OR 1, L_0x1b13ee0, v0x1b0c8c0_0, C4<0>, C4<0>;
L_0x1b14180 .functor AND 1, L_0x1b139d0, L_0x1b140c0, C4<1>, C4<1>;
v0x1b0cfd0_0 .net *"_ivl_0", 0 0, L_0x1b119a0;  1 drivers
v0x1b0d0b0_0 .net *"_ivl_10", 0 0, L_0x1b120b0;  1 drivers
v0x1b0d190_0 .net *"_ivl_12", 0 0, L_0x1b12270;  1 drivers
v0x1b0d280_0 .net *"_ivl_14", 0 0, L_0x1b12330;  1 drivers
v0x1b0d360_0 .net *"_ivl_16", 0 0, L_0x1b12440;  1 drivers
v0x1b0d490_0 .net *"_ivl_18", 0 0, L_0x1b12550;  1 drivers
v0x1b0d570_0 .net *"_ivl_2", 0 0, L_0x1b11a30;  1 drivers
v0x1b0d650_0 .net *"_ivl_20", 0 0, L_0x1b12620;  1 drivers
v0x1b0d730_0 .net *"_ivl_22", 0 0, L_0x1b12690;  1 drivers
v0x1b0d8a0_0 .net *"_ivl_24", 0 0, L_0x1b127c0;  1 drivers
v0x1b0d980_0 .net *"_ivl_28", 0 0, L_0x1b12750;  1 drivers
v0x1b0da60_0 .net *"_ivl_30", 0 0, L_0x1b12a60;  1 drivers
v0x1b0db40_0 .net *"_ivl_32", 0 0, L_0x1b12bb0;  1 drivers
v0x1b0dc20_0 .net *"_ivl_34", 0 0, L_0x1b12c20;  1 drivers
v0x1b0dd00_0 .net *"_ivl_36", 0 0, L_0x1b12dd0;  1 drivers
v0x1b0dde0_0 .net *"_ivl_38", 0 0, L_0x1b12e40;  1 drivers
v0x1b0dec0_0 .net *"_ivl_4", 0 0, L_0x1b11bd0;  1 drivers
v0x1b0e0b0_0 .net *"_ivl_40", 0 0, L_0x1b13000;  1 drivers
v0x1b0e190_0 .net *"_ivl_42", 0 0, L_0x1b13070;  1 drivers
v0x1b0e270_0 .net *"_ivl_44", 0 0, L_0x1b131f0;  1 drivers
v0x1b0e350_0 .net *"_ivl_46", 0 0, L_0x1b13260;  1 drivers
v0x1b0e430_0 .net *"_ivl_48", 0 0, L_0x1b13440;  1 drivers
v0x1b0e510_0 .net *"_ivl_50", 0 0, L_0x1b13500;  1 drivers
v0x1b0e5f0_0 .net *"_ivl_52", 0 0, L_0x1b136f0;  1 drivers
v0x1b0e6d0_0 .net *"_ivl_54", 0 0, L_0x1b13760;  1 drivers
v0x1b0e7b0_0 .net *"_ivl_56", 0 0, L_0x1b13910;  1 drivers
v0x1b0e890_0 .net *"_ivl_58", 0 0, L_0x1b139d0;  1 drivers
v0x1b0e970_0 .net *"_ivl_6", 0 0, L_0x1b11ce0;  1 drivers
v0x1b0ea50_0 .net *"_ivl_60", 0 0, L_0x1b13be0;  1 drivers
v0x1b0eb30_0 .net *"_ivl_62", 0 0, L_0x1b13c50;  1 drivers
v0x1b0ec10_0 .net *"_ivl_64", 0 0, L_0x1b13dd0;  1 drivers
v0x1b0ecf0_0 .net *"_ivl_66", 0 0, L_0x1b13ee0;  1 drivers
v0x1b0edd0_0 .net *"_ivl_68", 0 0, L_0x1b140c0;  1 drivers
v0x1b0f0c0_0 .net *"_ivl_8", 0 0, L_0x1b11ee0;  1 drivers
v0x1b0f1a0_0 .net "a", 0 0, v0x1b0c640_0;  alias, 1 drivers
v0x1b0f240_0 .net "b", 0 0, v0x1b0c6e0_0;  alias, 1 drivers
v0x1b0f330_0 .net "c", 0 0, v0x1b0c780_0;  alias, 1 drivers
v0x1b0f420_0 .net "d", 0 0, v0x1b0c8c0_0;  alias, 1 drivers
v0x1b0f510_0 .net "out_pos", 0 0, L_0x1b14180;  alias, 1 drivers
v0x1b0f5d0_0 .net "out_sop", 0 0, L_0x1b12880;  alias, 1 drivers
S_0x1b0f750 .scope task, "wait_for_end_of_timestep" "wait_for_end_of_timestep" 3 151, 3 151 0, S_0x1ac4d40;
 .timescale -12 -12;
E_0x1aac9f0 .event anyedge, v0x1b10540_0;
TD_tb.wait_for_end_of_timestep ;
    %pushi/vec4 5, 0, 32;
T_2.0 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_2.1, 5;
    %jmp/1 T_2.1, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %load/vec4 v0x1b10540_0;
    %nor/r;
    %assign/vec4 v0x1b10540_0, 0;
    %wait E_0x1aac9f0;
    %jmp T_2.0;
T_2.1 ;
    %pop/vec4 1;
    %end;
    .scope S_0x1b0bb10;
T_3 ;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x1b0c9b0_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x1b0ca50_0, 0, 1;
    %end;
    .thread T_3, $init;
    .scope S_0x1b0bb10;
T_4 ;
    %wait E_0x1ac3520;
    %load/vec4 v0x1b0caf0_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_4.0, 8;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x1b0c9b0_0, 0, 1;
T_4.0 ;
    %jmp T_4;
    .thread T_4;
    .scope S_0x1b0bb10;
T_5 ;
    %wait E_0x1ac33c0;
    %pushi/vec4 0, 0, 4;
    %split/vec4 1;
    %assign/vec4 v0x1b0c8c0_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x1b0c780_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x1b0c6e0_0, 0;
    %assign/vec4 v0x1b0c640_0, 0;
    %wait E_0x1ac33c0;
    %pushi/vec4 1, 0, 4;
    %split/vec4 1;
    %assign/vec4 v0x1b0c8c0_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x1b0c780_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x1b0c6e0_0, 0;
    %assign/vec4 v0x1b0c640_0, 0;
    %wait E_0x1ac33c0;
    %pushi/vec4 2, 0, 4;
    %split/vec4 1;
    %assign/vec4 v0x1b0c8c0_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x1b0c780_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x1b0c6e0_0, 0;
    %assign/vec4 v0x1b0c640_0, 0;
    %wait E_0x1ac33c0;
    %pushi/vec4 4, 0, 4;
    %split/vec4 1;
    %assign/vec4 v0x1b0c8c0_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x1b0c780_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x1b0c6e0_0, 0;
    %assign/vec4 v0x1b0c640_0, 0;
    %wait E_0x1ac33c0;
    %pushi/vec4 5, 0, 4;
    %split/vec4 1;
    %assign/vec4 v0x1b0c8c0_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x1b0c780_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x1b0c6e0_0, 0;
    %assign/vec4 v0x1b0c640_0, 0;
    %wait E_0x1ac33c0;
    %pushi/vec4 6, 0, 4;
    %split/vec4 1;
    %assign/vec4 v0x1b0c8c0_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x1b0c780_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x1b0c6e0_0, 0;
    %assign/vec4 v0x1b0c640_0, 0;
    %wait E_0x1ac33c0;
    %pushi/vec4 7, 0, 4;
    %split/vec4 1;
    %assign/vec4 v0x1b0c8c0_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x1b0c780_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x1b0c6e0_0, 0;
    %assign/vec4 v0x1b0c640_0, 0;
    %wait E_0x1ac33c0;
    %pushi/vec4 9, 0, 4;
    %split/vec4 1;
    %assign/vec4 v0x1b0c8c0_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x1b0c780_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x1b0c6e0_0, 0;
    %assign/vec4 v0x1b0c640_0, 0;
    %wait E_0x1ac33c0;
    %pushi/vec4 10, 0, 4;
    %split/vec4 1;
    %assign/vec4 v0x1b0c8c0_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x1b0c780_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x1b0c6e0_0, 0;
    %assign/vec4 v0x1b0c640_0, 0;
    %wait E_0x1ac33c0;
    %pushi/vec4 13, 0, 4;
    %split/vec4 1;
    %assign/vec4 v0x1b0c8c0_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x1b0c780_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x1b0c6e0_0, 0;
    %assign/vec4 v0x1b0c640_0, 0;
    %wait E_0x1ac33c0;
    %pushi/vec4 14, 0, 4;
    %split/vec4 1;
    %assign/vec4 v0x1b0c8c0_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x1b0c780_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x1b0c6e0_0, 0;
    %assign/vec4 v0x1b0c640_0, 0;
    %wait E_0x1ac33c0;
    %pushi/vec4 15, 0, 4;
    %split/vec4 1;
    %assign/vec4 v0x1b0c8c0_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x1b0c780_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x1b0c6e0_0, 0;
    %assign/vec4 v0x1b0c640_0, 0;
    %wait E_0x1ac33c0;
    %load/vec4 v0x1b0c9b0_0;
    %store/vec4 v0x1b0ca50_0, 0, 1;
    %fork t_1, S_0x1b0be40;
    %jmp t_0;
    .scope S_0x1b0be40;
t_1 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x1b0c080_0, 0, 32;
T_5.0 ; Top of for-loop 
    %load/vec4 v0x1b0c080_0;
    %cmpi/s 16, 0, 32;
    %jmp/0xz T_5.1, 5;
    %wait E_0x1ac33c0;
    %load/vec4 v0x1b0c080_0;
    %pad/s 4;
    %split/vec4 1;
    %assign/vec4 v0x1b0c8c0_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x1b0c780_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x1b0c6e0_0, 0;
    %assign/vec4 v0x1b0c640_0, 0;
T_5.2 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x1b0c080_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x1b0c080_0, 0, 32;
    %jmp T_5.0;
T_5.1 ; for-loop exit label
    %end;
    .scope S_0x1b0bb10;
t_0 %join;
    %pushi/vec4 50, 0, 32;
T_5.3 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_5.4, 5;
    %jmp/1 T_5.4, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_0x1ac3520;
    %vpi_func 3 74 "$random" 32 {0 0 0};
    %pad/s 4;
    %split/vec4 1;
    %assign/vec4 v0x1b0c8c0_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x1b0c780_0, 0;
    %split/vec4 1;
    %assign/vec4 v0x1b0c6e0_0, 0;
    %assign/vec4 v0x1b0c640_0, 0;
    %jmp T_5.3;
T_5.4 ;
    %pop/vec4 1;
    %load/vec4 v0x1b0c9b0_0;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_5.7, 9;
    %load/vec4 v0x1b0ca50_0;
    %inv;
    %and;
T_5.7;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.5, 8;
    %vpi_call/w 3 77 "$display", "Hint: Your circuit passes on the 12 required input combinations, but doesn't match the don't-care cases. Are you using minimal SOP and POS?" {0 0 0};
T_5.5 ;
    %vpi_call/w 3 79 "$finish" {0 0 0};
    %end;
    .thread T_5;
    .scope S_0x1ac4d40;
T_6 ;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x1b100e0_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x1b10540_0, 0, 1;
    %end;
    .thread T_6, $init;
    .scope S_0x1ac4d40;
T_7 ;
T_7.0 ;
    %delay 5, 0;
    %load/vec4 v0x1b100e0_0;
    %inv;
    %store/vec4 v0x1b100e0_0, 0, 1;
    %jmp T_7.0;
T_7.1 ;
    %end;
    .thread T_7;
    .scope S_0x1ac4d40;
T_8 ;
    %vpi_call/w 3 118 "$dumpfile", "wave.vcd" {0 0 0};
    %vpi_call/w 3 119 "$dumpvars", 32'sb00000000000000000000000000000001, v0x1b0c820_0, v0x1b106b0_0, v0x1b0ff00_0, v0x1b0ffa0_0, v0x1b10040_0, v0x1b10180_0, v0x1b10400_0, v0x1b10360_0, v0x1b102c0_0, v0x1b10220_0 {0 0 0};
    %end;
    .thread T_8;
    .scope S_0x1ac4d40;
T_9 ;
    %load/vec4 v0x1b104a0_0;
    %parti/u 32, 128, 32;
    %cmpi/ne 0, 0, 32;
    %jmp/0xz  T_9.0, 4;
    %load/vec4 v0x1b104a0_0;
    %parti/u 32, 128, 32;
    %load/vec4 v0x1b104a0_0;
    %parti/u 32, 96, 32;
    %vpi_call/w 3 160 "$display", "Hint: Output '%s' has %0d mismatches. First mismatch occurred at time %0d.", "out_sop", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %jmp T_9.1;
T_9.0 ;
    %vpi_call/w 3 161 "$display", "Hint: Output '%s' has no mismatches.", "out_sop" {0 0 0};
T_9.1 ;
    %load/vec4 v0x1b104a0_0;
    %parti/u 32, 64, 32;
    %cmpi/ne 0, 0, 32;
    %jmp/0xz  T_9.2, 4;
    %load/vec4 v0x1b104a0_0;
    %parti/u 32, 64, 32;
    %load/vec4 v0x1b104a0_0;
    %parti/u 32, 32, 32;
    %vpi_call/w 3 162 "$display", "Hint: Output '%s' has %0d mismatches. First mismatch occurred at time %0d.", "out_pos", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %jmp T_9.3;
T_9.2 ;
    %vpi_call/w 3 163 "$display", "Hint: Output '%s' has no mismatches.", "out_pos" {0 0 0};
T_9.3 ;
    %load/vec4 v0x1b104a0_0;
    %parti/u 32, 192, 32;
    %load/vec4 v0x1b104a0_0;
    %parti/u 32, 0, 32;
    %vpi_call/w 3 165 "$display", "Hint: Total mismatched samples is %1d out of %1d samples\012", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %vpi_call/w 3 166 "$display", "Simulation finished at %0d ps", $time {0 0 0};
    %load/vec4 v0x1b104a0_0;
    %parti/u 32, 192, 32;
    %load/vec4 v0x1b104a0_0;
    %parti/u 32, 0, 32;
    %vpi_call/w 3 167 "$display", "Mismatches: %1d in %1d samples", S<1,vec4,s32>, S<0,vec4,s32> {2 0 0};
    %end;
    .thread T_9, $final;
    .scope S_0x1ac4d40;
T_10 ;
    %wait E_0x1ac3520;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x1b104a0_0;
    %pushi/vec4 0, 0, 32;
    %part/u 32;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x1b104a0_0, 4, 32;
    %load/vec4 v0x1b105e0_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_10.0, 8;
    %load/vec4 v0x1b104a0_0;
    %parti/u 32, 192, 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_10.2, 4;
    %vpi_func 3 178 "$time" 64 {0 0 0};
    %cast2;
    %pad/u 32;
    %ix/load 4, 160, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x1b104a0_0, 4, 32;
T_10.2 ;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x1b104a0_0;
    %pushi/vec4 192, 0, 32;
    %part/u 32;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %ix/load 4, 192, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x1b104a0_0, 4, 32;
T_10.0 ;
    %load/vec4 v0x1b10400_0;
    %load/vec4 v0x1b10400_0;
    %load/vec4 v0x1b10360_0;
    %xor;
    %load/vec4 v0x1b10400_0;
    %xor;
    %cmp/ne;
    %jmp/0xz  T_10.4, 6;
    %load/vec4 v0x1b104a0_0;
    %parti/u 32, 128, 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_10.6, 4;
    %vpi_func 3 182 "$time" 64 {0 0 0};
    %cast2;
    %pad/u 32;
    %ix/load 4, 96, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x1b104a0_0, 4, 32;
T_10.6 ;
    %load/vec4 v0x1b104a0_0;
    %parti/u 32, 128, 32;
    %addi 1, 0, 32;
    %ix/load 4, 128, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x1b104a0_0, 4, 32;
T_10.4 ;
    %load/vec4 v0x1b102c0_0;
    %load/vec4 v0x1b102c0_0;
    %load/vec4 v0x1b10220_0;
    %xor;
    %load/vec4 v0x1b102c0_0;
    %xor;
    %cmp/ne;
    %jmp/0xz  T_10.8, 6;
    %load/vec4 v0x1b104a0_0;
    %parti/u 32, 64, 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_10.10, 4;
    %vpi_func 3 185 "$time" 64 {0 0 0};
    %cast2;
    %pad/u 32;
    %ix/load 4, 32, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x1b104a0_0, 4, 32;
T_10.10 ;
    %load/vec4 v0x1b104a0_0;
    %parti/u 32, 64, 32;
    %addi 1, 0, 32;
    %ix/load 4, 64, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x1b104a0_0, 4, 32;
T_10.8 ;
    %jmp T_10;
    .thread T_10;
# The file index is used to find the file name in the following table.
:file_names 5;
    "N/A";
    "<interactive>";
    "-";
    "/home/jmb9986/AutoChip/autochip_scripts/../verilogeval_prompts_tbs/ve_testbenches_human/ece241_2013_q2/ece241_2013_q2_tb.sv";
    "/home/jmb9986/AutoChip/autochip_scripts/outputs/gpt-4o/can55_depth0/human/ece241_2013_q2/iter0/response9/top_module.sv";
